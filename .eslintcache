[{"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\index.js":"1","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\App.js":"2","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js":"3","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js":"4","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js":"5","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js":"6","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js":"7","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js":"8","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx":"9","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx":"10","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx":"11","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx":"12","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx":"13","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx":"14","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx":"15","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js":"16","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js":"17","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js":"18","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js":"19","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js":"20","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js":"21","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js":"22","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js":"23","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js":"24","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js":"25","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js":"26","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx":"27","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx":"28","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx":"29","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx":"30","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx":"31","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx":"32","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx":"33","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx":"34","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js":"35","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js":"36","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js":"37","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx":"38","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js":"39","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx":"40","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx":"41","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx":"42","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx":"43","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx":"44","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx":"45","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx":"46","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx":"47","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx":"48","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx":"49","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\NextButtonComponent.jsx":"50","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\BackButtonComponent.jsx":"51","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\index.js":"52","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\App.js":"53","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js":"54","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js":"55","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js":"56","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js":"57","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js":"58","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js":"59","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx":"60","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx":"61","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx":"62","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx":"63","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx":"64","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx":"65","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\HomeTemplate.jsx":"66","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx":"67","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx":"68","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx":"69","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx":"70","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx":"71","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx":"72","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js":"73","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js":"74","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js":"75","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js":"76","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js":"77","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js":"78","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js":"79","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js":"80","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js":"81","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js":"82","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js":"83","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx":"84","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx":"85","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx":"86","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx":"87","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx":"88","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx":"89","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx":"90","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx":"91","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx":"92","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx":"93","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx":"94","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx":"95","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx":"96","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx":"97","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx":"98","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx":"99","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx":"100","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx":"101","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx":"102","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplate.jsx":"103","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplatePublic.jsx":"104","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx":"105","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx":"106","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx":"107","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx":"108","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js":"109","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js":"110","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\NextButtonComponent.jsx":"111","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\BackButtonComponent.jsx":"112","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js":"113","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx":"114","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx":"115","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js":"116","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx":"117","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx":"118","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx":"119","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx":"120","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx":"121","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx":"122","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx":"123","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\ButtonsTemplate.jsx":"124","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ItemPublic.jsx":"125","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\Item.jsx":"126","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx":"127","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx":"128","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx":"129"},{"size":452,"mtime":1615924240097,"results":"130","hashOfConfig":"131"},{"size":3602,"mtime":1615936498060,"results":"132","hashOfConfig":"131"},{"size":2037,"mtime":1615924239947,"results":"133","hashOfConfig":"131"},{"size":5820,"mtime":1615924240041,"results":"134","hashOfConfig":"131"},{"size":2321,"mtime":1615924240040,"results":"135","hashOfConfig":"131"},{"size":1971,"mtime":1615924240047,"results":"136","hashOfConfig":"131"},{"size":19060,"mtime":1615924240038,"results":"137","hashOfConfig":"131"},{"size":755,"mtime":1615924240048,"results":"138","hashOfConfig":"131"},{"size":4939,"mtime":1615924239996,"results":"139","hashOfConfig":"131"},{"size":805,"mtime":1615924239999,"results":"140","hashOfConfig":"131"},{"size":302,"mtime":1615924240009,"results":"141","hashOfConfig":"131"},{"size":426,"mtime":1615924240036,"results":"142","hashOfConfig":"131"},{"size":2747,"mtime":1615925509705,"results":"143","hashOfConfig":"131"},{"size":678,"mtime":1615924240050,"results":"144","hashOfConfig":"131"},{"size":619,"mtime":1615924240049,"results":"145","hashOfConfig":"131"},{"size":369,"mtime":1615924240050,"results":"146","hashOfConfig":"131"},{"size":4019,"mtime":1616178918132,"results":"147","hashOfConfig":"131"},{"size":3759,"mtime":1616179887611,"results":"148","hashOfConfig":"131"},{"size":2569,"mtime":1616177748824,"results":"149","hashOfConfig":"131"},{"size":4360,"mtime":1616178635859,"results":"150","hashOfConfig":"131"},{"size":10333,"mtime":1615924239945,"results":"151","hashOfConfig":"131"},{"size":3044,"mtime":1615924240045,"results":"152","hashOfConfig":"131"},{"size":1148,"mtime":1615924239894,"results":"153","hashOfConfig":"131"},{"size":1374,"mtime":1615924239881,"results":"154","hashOfConfig":"131"},{"size":1069,"mtime":1615924239918,"results":"155","hashOfConfig":"131"},{"size":1251,"mtime":1615924240004,"results":"156","hashOfConfig":"131"},{"size":43645,"mtime":1615924240011,"results":"157","hashOfConfig":"131"},{"size":23738,"mtime":1615924240018,"results":"158","hashOfConfig":"131"},{"size":21313,"mtime":1615924240036,"results":"159","hashOfConfig":"131"},{"size":5995,"mtime":1615924240037,"results":"160","hashOfConfig":"131"},{"size":12047,"mtime":1615924240002,"results":"161","hashOfConfig":"131"},{"size":20858,"mtime":1615935427475,"results":"162","hashOfConfig":"131"},{"size":1674,"mtime":1615924240021,"results":"163","hashOfConfig":"131"},{"size":2609,"mtime":1615924240022,"results":"164","hashOfConfig":"131"},{"size":740,"mtime":1615924239934,"results":"165","hashOfConfig":"131"},{"size":955,"mtime":1615924240043,"results":"166","hashOfConfig":"131"},{"size":948,"mtime":1615924240006,"results":"167","hashOfConfig":"131"},{"size":1586,"mtime":1615924239946,"results":"168","hashOfConfig":"131"},{"size":2430,"mtime":1615924239914,"results":"169","hashOfConfig":"131"},{"size":1839,"mtime":1615924240012,"results":"170","hashOfConfig":"131"},{"size":1349,"mtime":1615924240016,"results":"171","hashOfConfig":"131"},{"size":9161,"mtime":1616195727506,"results":"172","hashOfConfig":"131"},{"size":3370,"mtime":1615924240029,"results":"173","hashOfConfig":"131"},{"size":3078,"mtime":1616194809348,"results":"174","hashOfConfig":"131"},{"size":3725,"mtime":1615924239986,"results":"175","hashOfConfig":"131"},{"size":1600,"mtime":1615924239992,"results":"176","hashOfConfig":"131"},{"size":1396,"mtime":1615935812014,"results":"177","hashOfConfig":"131"},{"size":2638,"mtime":1615936570422,"results":"178","hashOfConfig":"131"},{"size":2042,"mtime":1615936618510,"results":"179","hashOfConfig":"131"},{"size":213,"mtime":1616178664136,"results":"180","hashOfConfig":"131"},{"size":213,"mtime":1616178639425,"results":"181","hashOfConfig":"131"},{"size":452,"mtime":1616334205096,"results":"182","hashOfConfig":"183"},{"size":5258,"mtime":1616334204978,"results":"184","hashOfConfig":"183"},{"size":2037,"mtime":1616334205017,"results":"185","hashOfConfig":"183"},{"size":5818,"mtime":1616345335814,"results":"186","hashOfConfig":"183"},{"size":2321,"mtime":1616334205050,"results":"187","hashOfConfig":"183"},{"size":1971,"mtime":1616334205055,"results":"188","hashOfConfig":"183"},{"size":19137,"mtime":1616345315720,"results":"189","hashOfConfig":"183"},{"size":755,"mtime":1616334205056,"results":"190","hashOfConfig":"183"},{"size":4156,"mtime":1616334205026,"results":"191","hashOfConfig":"183"},{"size":302,"mtime":1616334205033,"results":"192","hashOfConfig":"183"},{"size":805,"mtime":1616334205027,"results":"193","hashOfConfig":"183"},{"size":426,"mtime":1616334205047,"results":"194","hashOfConfig":"183"},{"size":2768,"mtime":1616334205042,"results":"195","hashOfConfig":"183"},{"size":2638,"mtime":1616334205043,"results":"196","hashOfConfig":"183"},{"size":1754,"mtime":1616334204992,"results":"197","hashOfConfig":"183"},{"size":7652,"mtime":1616334205010,"results":"198","hashOfConfig":"183"},{"size":37752,"mtime":1616334204988,"results":"199","hashOfConfig":"183"},{"size":841,"mtime":1616334204999,"results":"200","hashOfConfig":"183"},{"size":917,"mtime":1616334205003,"results":"201","hashOfConfig":"183"},{"size":678,"mtime":1616334205059,"results":"202","hashOfConfig":"183"},{"size":619,"mtime":1616334205058,"results":"203","hashOfConfig":"183"},{"size":369,"mtime":1616334205059,"results":"204","hashOfConfig":"183"},{"size":3044,"mtime":1616334205054,"results":"205","hashOfConfig":"183"},{"size":4706,"mtime":1616345224903,"results":"206","hashOfConfig":"183"},{"size":4271,"mtime":1616334205019,"results":"207","hashOfConfig":"183"},{"size":2719,"mtime":1616334205022,"results":"208","hashOfConfig":"183"},{"size":4505,"mtime":1616334205021,"results":"209","hashOfConfig":"183"},{"size":10333,"mtime":1616334205015,"results":"210","hashOfConfig":"183"},{"size":1148,"mtime":1616334204982,"results":"211","hashOfConfig":"183"},{"size":1717,"mtime":1616334204980,"results":"212","hashOfConfig":"183"},{"size":1069,"mtime":1616334204986,"results":"213","hashOfConfig":"183"},{"size":1385,"mtime":1616334205031,"results":"214","hashOfConfig":"183"},{"size":1638,"mtime":1616334204981,"results":"215","hashOfConfig":"183"},{"size":5995,"mtime":1616334205047,"results":"216","hashOfConfig":"183"},{"size":21537,"mtime":1616334205046,"results":"217","hashOfConfig":"183"},{"size":12047,"mtime":1616334205029,"results":"218","hashOfConfig":"183"},{"size":19789,"mtime":1616334205029,"results":"219","hashOfConfig":"183"},{"size":1396,"mtime":1616334205039,"results":"220","hashOfConfig":"183"},{"size":8015,"mtime":1616334205009,"results":"221","hashOfConfig":"183"},{"size":21655,"mtime":1616334205038,"results":"222","hashOfConfig":"183"},{"size":39790,"mtime":1616345277452,"results":"223","hashOfConfig":"183"},{"size":39127,"mtime":1616334205000,"results":"224","hashOfConfig":"183"},{"size":20234,"mtime":1616334205004,"results":"225","hashOfConfig":"183"},{"size":20445,"mtime":1616334205004,"results":"226","hashOfConfig":"183"},{"size":807,"mtime":1616334204997,"results":"227","hashOfConfig":"183"},{"size":3307,"mtime":1616334204998,"results":"228","hashOfConfig":"183"},{"size":3615,"mtime":1616334204997,"results":"229","hashOfConfig":"183"},{"size":2144,"mtime":1616334205004,"results":"230","hashOfConfig":"183"},{"size":2637,"mtime":1616334205041,"results":"231","hashOfConfig":"183"},{"size":1674,"mtime":1616334205040,"results":"232","hashOfConfig":"183"},{"size":2042,"mtime":1616334205041,"results":"233","hashOfConfig":"183"},{"size":2571,"mtime":1616345257673,"results":"234","hashOfConfig":"183"},{"size":2535,"mtime":1616334205007,"results":"235","hashOfConfig":"183"},{"size":3884,"mtime":1616334205008,"results":"236","hashOfConfig":"183"},{"size":2330,"mtime":1616334205007,"results":"237","hashOfConfig":"183"},{"size":785,"mtime":1616334204994,"results":"238","hashOfConfig":"183"},{"size":1355,"mtime":1616334204991,"results":"239","hashOfConfig":"183"},{"size":955,"mtime":1616334205053,"results":"240","hashOfConfig":"183"},{"size":740,"mtime":1616334205013,"results":"241","hashOfConfig":"183"},{"size":213,"mtime":1616334205016,"results":"242","hashOfConfig":"183"},{"size":213,"mtime":1616334205011,"results":"243","hashOfConfig":"183"},{"size":948,"mtime":1616334205031,"results":"244","hashOfConfig":"183"},{"size":1586,"mtime":1616334205016,"results":"245","hashOfConfig":"183"},{"size":2423,"mtime":1616334204982,"results":"246","hashOfConfig":"183"},{"size":2603,"mtime":1616345290661,"results":"247","hashOfConfig":"183"},{"size":788,"mtime":1616334204993,"results":"248","hashOfConfig":"183"},{"size":2708,"mtime":1616334205005,"results":"249","hashOfConfig":"183"},{"size":3078,"mtime":1616334205045,"results":"250","hashOfConfig":"183"},{"size":9363,"mtime":1616334205044,"results":"251","hashOfConfig":"183"},{"size":3370,"mtime":1616334205044,"results":"252","hashOfConfig":"183"},{"size":3725,"mtime":1616334205024,"results":"253","hashOfConfig":"183"},{"size":1600,"mtime":1616334205025,"results":"254","hashOfConfig":"183"},{"size":1406,"mtime":1616334205006,"results":"255","hashOfConfig":"183"},{"size":2340,"mtime":1616334204996,"results":"256","hashOfConfig":"183"},{"size":1509,"mtime":1616334204995,"results":"257","hashOfConfig":"183"},{"size":1839,"mtime":1616334205034,"results":"258","hashOfConfig":"183"},{"size":1349,"mtime":1616334205037,"results":"259","hashOfConfig":"183"},{"size":1346,"mtime":1616334205003,"results":"260","hashOfConfig":"183"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},"1r3xkg2",{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"263"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"263"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"263"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"263"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"263"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"263"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"263"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"263"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"263"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"263"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"263"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"263"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"263"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"263"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"263"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"263"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"263"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"263"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"263"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"263"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"263"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"263"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"344","usedDeprecatedRules":"263"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"263"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"263"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"263"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"263"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"263"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"263"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"263"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"263"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"263"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"263"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"263"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"263"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"263"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"263"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"263"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},"1wtfgdf",{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"404"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"404"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"404"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"404"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"404"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"404"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"404"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"404"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"404"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"404"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"404"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"404"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"441","usedDeprecatedRules":"404"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":20,"source":"444","usedDeprecatedRules":"404"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"404"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"404"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"404"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"404"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"404"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"404"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"404"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"404"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"404"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"404"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"404"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"404"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"404"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"344","usedDeprecatedRules":"404"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"404"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"404"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"404"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"404"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":"500","usedDeprecatedRules":"404"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"404"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"404"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":18,"source":"509","usedDeprecatedRules":"404"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"404"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"404"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"404"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"404"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"524","usedDeprecatedRules":"404"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"404"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"404"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"404"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"404"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"404"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"404"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"404"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"546","usedDeprecatedRules":"404"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"404"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"404"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"404"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"404"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"404"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"404"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"404"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"404"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"404"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"404"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"404"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"404"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"404"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"404"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"404"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"404"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"404"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"603","usedDeprecatedRules":"404"},"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\index.js",[],["604","605"],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\App.js",["606"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/SignIn/SignIn'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgetPassword from './Components/SignIn/ForgetPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport RenderProgram from './Components/Program/ProgramBranching'\r\nimport { AuthProvider } from './Firebase/AuthSetup/Auth'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoRender from './Components/PatientInfo/PatientInfoBranching'\r\nimport RenderProgramList from './Components/ProtocolList/ProtocolListBranching'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nimport RegistrationPatient from './Components/RegistrationPatient/RegPatientPage'\r\nimport ProgramTemplate from './Components/ProgramTemplate/ProgramTemplate'\r\nimport ProgramTemplatePublic from './Components/ProgramTemplate/ProgramTemplatePublic'\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n        <HashRouter>\r\n            <AuthProvider>\r\n                \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgetPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={RenderProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={RenderProgramList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoRender}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={TherapyResult}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient_registration\"\r\n                            component={RegistrationPatient}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template\"\r\n                            component={ProgramTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/public-template\"\r\n                            component={ProgramTemplatePublic}\r\n                        />\r\n                    </Switch>\r\n         \r\n            </AuthProvider>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js",["607","608","609"],"import SignUpForm1 from './SignUpForm1'\r\nimport SignUpForm2 from './SignUpForm2'\r\nimport UserRoleChoosing from './UserRoleChoosing'\r\nimport SignUpForm4 from './SignUpForm4'\r\nimport PrivateRouteToReg from '../../Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport MobileRegistration from './MobileRegistration'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { HashRouter} from 'react-router-dom'\r\nimport './Login1.css'\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <>\r\n            <MobileHeader/>\r\n            {/* <MobileRegistration/> */}\r\n            <div className=\"image-form-division-sign-up\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-up-text\">Реєстрація</div>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration\"\r\n                                component={UserRoleChoosing}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup2\"\r\n                                component={SignUpForm1}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup3\"\r\n                                component={SignUpForm2}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup4\"\r\n                                component={SignUpForm4}\r\n                            />\r\n                        </Switch>\r\n                        </HashRouter>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js",["610","611","612","613","614"],"import React, { useCallback, useContext } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './SignIn.css'\r\nimport { AuthContext } from '../../Firebase/AuthSetup/Auth'\r\nimport { Link } from 'react-router-dom'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nfunction SignIn({ history }) {\r\n    const { currentUser } = useContext(AuthContext)\r\n    const handleLogin = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const { email, password } = event.target.elements\r\n\r\n            const db = app.firestore()\r\n            await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n\r\n                    snapshot.docs.map((doc) => {\r\n                        localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                    })\r\n                } else {\r\n                    console.log('Немає професії')\r\n                }\r\n            })\r\n            // .collection('Patient')\r\n            // .doc(localStorage.getItem('child'))\r\n            // .collection('Protocols')\r\n            // .doc(localStorage.getItem('program'))\r\n            // .collection('Stimulus')\r\n            // .onSnapshot((snapshot) => {\r\n            //     if (snapshot.size) {\r\n            //         setStimulus(\r\n            //             snapshot.docs.map((doc) => ({\r\n            //                 ...doc.data(),\r\n            //                 id: doc.id,\r\n            //             }))\r\n            //         )\r\n            //         console.log('Сука ')\r\n            //     } else {\r\n            //         console.log('Сука1')\r\n            //     }\r\n            // })\r\n\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value)\r\n                if (currentUser.emailVerified == true) {\r\n\r\n                    await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                        if (snapshot.size) {\r\n\r\n                            snapshot.docs.map((doc) => {\r\n                                localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                                \r\n                            })\r\n                        } else {\r\n                            console.log('Немає професії')\r\n                        }\r\n                    })\r\n                    \r\n                    localStorage.setItem('user', currentUser.email)\r\n                    history.push('/home')\r\n                } else {\r\n                    alert('please verify your email')\r\n                }\r\n            } catch (error) {\r\n                if (!error.toString().includes(\"TypeError\")) {\r\n                    alert(error)\r\n                }\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n    if (currentUser && currentUser.emailVerified == true) {\r\n        localStorage.setItem('user', currentUser.email)\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <div className=\"light_blue_back\">\r\n                <div className=\"image-form-division\">\r\n                    <div className=\"image\" />\r\n                    <div className=\"form\">\r\n                        <div className=\"sign-in-text\"> Увійти на сайт</div>\r\n                        <form className=\"login_form\" onSubmit={handleLogin}>\r\n                            <div className=\"mobile_signin_label\">Email</div>\r\n                            <div className=\"login_text_input\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"fname\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mobile_signin_label\">Пароль</div>\r\n                            <div className=\"login_text_input_second\">\r\n\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"lname\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Пароль\"\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                class=\"slide-hover-left-3\"\r\n                                type=\"submit\"\r\n                                value=\"Увійти\"\r\n                            />\r\n                        </form>\r\n                        <div className=\"still_no_acc\">\r\n                            <span className=\"still_no_acc_text\">\r\n                                Досі немає акаунту? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                            <Link className=\"login_link_reg\" to=\"/registration\">\r\n                                Зареєструватись\r\n                        </Link>\r\n                        </div>\r\n                        <div className=\"forgot_password\">\r\n                            <span className=\"forgot_password_text\">\r\n                                Забули пароль? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                            <Link className=\"login_link_reg\" to=\"/forgetPassword\">\r\n                                Відновити пароль\r\n                        </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(SignIn)\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js",["615","616","617","618","619"],"import React, { useCallback, useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './ForgetPassword.css'\r\n\r\nfunction recover(Email, history) {\r\n    app.auth()\r\n        .sendPasswordResetEmail(Email)\r\n        .then(function (user) {\r\n            alert('Please check your email...')\r\n            history.push('/')\r\n        })\r\n        .catch(function (e) {\r\n            alert(e)\r\n        })\r\n}\r\n\r\nfunction ForgetPassword() {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    console.log(email)\r\n    return (\r\n        <>\r\n            <div className=\"image-form-division\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-up-text\"> Відновлення паролю</div>\r\n                    <form className=\"forget_form\">\r\n                        <div>\r\n                            **Якщо Ви забули свій пароль, будь ласка, введіть\r\n                            поточну електронну адресу і перевірте свою пошту.\r\n                            Вам має прийти лист з посиланням,за яким Ви повинні\r\n                            перейти і ввести новий пароль.\r\n                        </div>\r\n                        <input\r\n                            className=\"forget_text_input\"\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <p\r\n                            className=\"forget_submit\"\r\n                            onClick={() => recover(email, history)}\r\n                        >\r\n                            Відправити\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ForgetPassword\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js",["620","621","622"],"import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport './TherapyResult.css'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport PaginationRounded from './Pagination'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nfunction TherapyResult ({history}) {\r\n\r\n\r\n    return (\r\n        <>\r\n        <MobileHeader/>\r\n            <Header />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 ><Link to=\"/patient\" className=\"patients_link\" >{localStorage.getItem(\"childName\")}</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <h2 ><Link style={{ color: \"#666666\", cursor: \"default\" }} className=\"patients_link\" to=\"/protocol-list\">Результати терапії</Link></h2>\r\n            </div>\r\n            <div className=\"container\">\r\n                <p class=\"choose-file-title\">\r\n                    Натисніть на файл, щоб завантажити його\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <PaginationRounded history={history}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(TherapyResult)\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"import React, { useState, createRef } from 'react'\r\nimport SimpleHeader from '../Header/SimpleHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { Avatar, Button as MuiButton } from '@material-ui/core'\r\nimport { spacing } from '@material-ui/system'\r\nimport styled from 'styled-components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport app from '../../Firebase/firebase'\r\nimport './RegPatientPage.css'\r\nimport default_avatar from '../../assets/default_avatar.png';\r\nimport { withRouter } from \"react-router\";\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport \"./RegPatientPage.css\"\r\n\r\n/* -\r\n----------------------------\r\n|  Style components block  |\r\n----------------------------\r\n */\r\nconst Button = styled(MuiButton)(spacing)\r\n\r\nconst CenteredContent = styled.div`\r\n    text-align: center;\r\n`\r\n\r\n/* -\r\n------------------------\r\n|    Main component    |\r\n------------------------\r\n */\r\n\r\nconst currenciesGenders = [\r\n    {\r\n        value: 'male',\r\n        label: 'чоловік',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'жінка',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'інше',\r\n    },\r\n]\r\n\r\nconst currenciesBlood = [\r\n    {\r\n        value: '4+',\r\n        label: '4+',\r\n    },\r\n    {\r\n        value: '4-',\r\n        label: '4-',\r\n    },\r\n    {\r\n        value: '3+',\r\n        label: '3+',\r\n    },\r\n    {\r\n        value: '3-',\r\n        label: '3-',\r\n    },\r\n    {\r\n        value: '2+',\r\n        label: '2+',\r\n    },\r\n    {\r\n        value: '2-',\r\n        label: '2-',\r\n    },\r\n    {\r\n        value: '1+',\r\n        label: '1+',\r\n    },\r\n    {\r\n        value: '1-',\r\n        label: '1-',\r\n    },\r\n    {\r\n        value: 'None',\r\n        label: 'None',\r\n    },\r\n]\r\n\r\nfunction RegistrationPatient({ history }) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        rootForTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '28ch',\r\n            },\r\n        },\r\n        rootForSubTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        rootForDate: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n            },\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [diagnose, setDiagnose] = useState('')\r\n    const [parents, setParents] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [weight, setWeight] = useState('')\r\n    const [height, setHeight] = useState('')\r\n    const [blood, setBlood] = useState('')\r\n    const [image, _setImage] = useState(null)\r\n    const inputFileRef = createRef(null)\r\n\r\n    // FOR IMAGE\r\n    const cleanup = () => {\r\n        URL.revokeObjectURL(image)\r\n        inputFileRef.current.value = null\r\n    }\r\n\r\n    const setImage = (newImage) => {\r\n        if (image) {\r\n            cleanup()\r\n        }\r\n        _setImage(newImage)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        const newImage = event.target?.files?.[0]\r\n\r\n        if (newImage) {\r\n            setImage(URL.createObjectURL(newImage))\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     */\r\n    const handleClick = (event) => {\r\n        if (image) {\r\n            event.preventDefault()\r\n            setImage(null)\r\n        }\r\n    }\r\n\r\n    //FOR INPUTS\r\n    const db = app.firestore()\r\n\r\n    const nameChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const diagnoseChange = (event) => {\r\n        setDiagnose(event.target.value)\r\n    }\r\n    const parentsChange = (event) => {\r\n        setParents(event.target.value)\r\n    }\r\n    const genderChange = (event) => {\r\n        setGender(event.target.value)\r\n    }\r\n    const ageChange = (event) => {\r\n        setAge(event.target.value)\r\n    }\r\n    const dateChange = (event) => {\r\n        setDate(event.target.value)\r\n        console.log(date)\r\n    }\r\n    const cityChange = (event) => {\r\n        setCity(event.target.value)\r\n    }\r\n    const countryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const weightChange = (event) => {\r\n        setWeight(event.target.value)\r\n    }\r\n    const heightChange = (event) => {\r\n        setHeight(event.target.value)\r\n        console.log(height)\r\n    }\r\n    const bloodChange = (event) => {\r\n        setBlood(event.target.value)\r\n        console.log(blood)\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        if (name == \"\" || diagnose == \"\" || parents == \"\" || gender == \"\" ||\r\n            age == \"\" || date == \"\" || city == \"\" || country == \"\") {\r\n            alert(\"Заповніть всі поля!\")\r\n        } else {\r\n            const res = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .add({\r\n                    Name: name,\r\n                    Diagnos: diagnose,\r\n                    Parents: parents,\r\n                    Gender: gender,\r\n                    Age: age,\r\n                    BirthDate: date,\r\n                    City: city,\r\n                    Country: country,\r\n                    KidWeight: weight,\r\n                    KidHeight: height,\r\n                    BloodType: blood,\r\n                    Image: default_avatar,\r\n                })\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"general_container\">\r\n            <MobileHeader />\r\n            <SimpleHeader />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2\r\n                    style={{\r\n                        color: 'GrayText',\r\n                    }}\r\n                >\r\n                    Реєстрація пацієнта\r\n                </h2>\r\n            </div>\r\n            {/* --------------------------------- */}\r\n            {/* --------  Main  content  -------- */}\r\n            {/* --------------------------------- */}\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"avatar-reg-wrapper\">\r\n                    <CenteredContent>\r\n                        <Avatar\r\n                            alt=\"Avatar\"\r\n                            src={image}\r\n                            variant=\"square\"\r\n                            style={{ marginLeft: \"auto\", width: \"256px\", height: \"256px\", marginLeft: \"auto\" }}\r\n\r\n                        />\r\n                        <input\r\n                            ref={inputFileRef}\r\n                            accept=\"image/*\"\r\n                            hidden\r\n                            id=\"avatar-image-upload\"\r\n                            type=\"file\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                        <label htmlFor=\"avatar-image-upload\">\r\n                            <Button\r\n                                className=\"upload-image-btn\"\r\n                                variant=\"contained\"\r\n                                color=\"grey\"\r\n                                component=\"span\"\r\n                                mb={2}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {image ? 'Очистити' : 'Завантажити'}\r\n                            </Button>\r\n                        </label>\r\n                    </CenteredContent>\r\n                </div>\r\n                <div className=\"column-direction-list\">\r\n                    {/* Start of inputs */}\r\n                    <div\r\n                        className={classes.rootForTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-title\">\r\n                            <div className=\"label-area\">Ім'я та Прізвище:</div>\r\n\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => nameChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={classes.rootForSubTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-subtitle\">\r\n                            <div className=\"patient-subtitle-label\">\r\n                                Діагноз:\r\n                            </div>\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => diagnoseChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"zebra-table\">\r\n                            <div className=\"zebra-table-left-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Батьки:</div>\r\n\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        onChange={(event) =>\r\n                                            parentsChange(event)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Стать:</div>\r\n                                    <TextField\r\n\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={gender}\r\n                                        onChange={(event) =>\r\n                                            genderChange(event)\r\n                                        }\r\n                                    >\r\n                                        {currenciesGenders.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вік:</div>\r\n                                    <TextField\r\n                                        className=\"big_input\"\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) => ageChange(event)}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    років\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Дата народження:\r\n                                    </div>\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        className={classes.textField}\r\n                                        color=\"secondary\"\r\n                                        size=\"medium\"\r\n                                        onChange={(event) => dateChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Місто:</div>\r\n                                    <TextField\r\n                                        onChange={(event) => cityChange(event)}\r\n                                        color=\"secondary\"\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Країна:</div>\r\n                                    <TextField\r\n                                        onChange={(event) =>\r\n                                            countryChange(event)\r\n                                        }\r\n                                        color=\"secondary\"\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"zebra-table-right-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вага:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            weightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    кг\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Зріст:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            heightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    см\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Група крові:\r\n                                    </div> */}\r\n                            {/* <TextField\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={blood}\r\n                                        onChange={(event) => bloodChange(event)}\r\n                                    >\r\n                                        {currenciesBlood.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField> */}\r\n                            {/* </div> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/\">\r\n                        <button\r\n                            className=\"save_button save_button_add_patient\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Зберегти\r\n                        </button>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(RegistrationPatient)\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx",["638","639","640","641","642","643"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\nimport \"./Patients.css\"\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport { useEffect, useState } from 'react'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport Logo from '../../assets/Logo.svg'\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    let [user, setUser] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setUser(\r\n                        snapshot.docs.filter((u) =>\r\n                        u.id.includes(localStorage.getItem('user'))\r\n                    ).map((doc) => {\r\n                        localStorage.setItem(\"telegramUserName\", (doc.data().TelegramUserID))\r\n                        })\r\n                    )\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n    patients = patients.filter((protocol) =>\r\n        protocol.Name.includes(inputSearch)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <>\r\n            <MobileHeader/>\r\n                <div className=\"header\">\r\n                    <img\r\n                        src={Logo}\r\n                        onClick={() => signOut()}\r\n                        width=\"14.7%\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            left: '4%',\r\n                            marginTop: '1.1%',\r\n                            marginBottom: '-20px',\r\n                        }}\r\n                    />\r\n                    <input className=\"search\" onChange={(e) => (setInputSearch(e.target.value))} type=\"text\" name=\"search\" placeholder=\"Пошук..\"/>\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            position: 'relative',\r\n                            top: '8.2%',\r\n                            left: '3.33%',\r\n                            width: '93.2%',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n            <div className=\"info_title\">\r\n                <div className=\"inter_fing\">\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '45px',\r\n                            fontSize: '25px',\r\n                            color: '#6F6F6F',\r\n                            fontWeight: '700'\r\n                        }}\r\n                    >\r\n                        Пацієнти\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '40px',\r\n                            marginBottom: '20px',\r\n\r\n                            fontSize: '20px',\r\n                            color: \"#48535f\"\r\n                        }}\r\n                    >\r\n                        Кількість: {patients.length}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Link\r\n                to=\"/patient_registration\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '11.5rem',\r\n                    right: '10rem',\r\n                    color: 'grey',\r\n                }}\r\n                className=\"add_patient_button\"\r\n            >\r\n               <BranchingItem/>\r\n            </Link>\r\n            <PatientItem patients={patients} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\nfunction BranchingItem(){\r\n    if (localStorage.getItem('proffesion')=='Supervisors'){\r\n        return(\r\n            <>\r\n            <BsPlusCircle size={50} />\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('proffesion')!=='Supervisors'){\r\n        return(\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx",["644","645","646"],"import React, { useState, useEffect } from 'react'\r\nimport PatientInfoTherapist from './PatientInfoTherapist'\r\nimport PatientInfoUser from './PatientInfoUser'\r\nimport app from '../../Firebase/firebase'\r\nexport default function PatientInfoRender() {\r\n    const db = app.firestore()\r\n    console.log(db.collection(localStorage.getItem('proffesion')).doc(localStorage.getItem(\"user\")).get().then(doc => {\r\n        if (!doc.exists) {\r\n            console.log('No such document!');\r\n        } else {\r\n            localStorage.setItem(\"Name\", doc.data().Name)\r\n            localStorage.setItem(\"Surname\", doc.data().Surname)\r\n        }\r\n    }))\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <PatientInfoUser />\r\n    } else {\r\n        return <PatientInfoTherapist />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx",["647"],"import ProgramEditable from './ProgramEditable'\r\nimport ProgramOnlyView from './ProgramOnlyView'\r\n\r\nexport default function RenderProgram() {\r\n    if (localStorage.getItem('proffesion') == 'Therapists') {\r\n        return <ProgramOnlyView />\r\n    } else {\r\n        return <ProgramEditable />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx",["648","649","650","651"],"import { useState, useEffect } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolListSuperVisor from './ProtocolList'\r\nimport ProtocolListTherapist from './ProtocolListTherapist'\r\n\r\nexport default function RenderProgramList() {\r\n\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <ProtocolListSuperVisor />\r\n    } else {\r\n        return <ProtocolListTherapist />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx",["652","653"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/Item'\r\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\r\nimport './ButtonsTemplate.css'\r\n\r\nfunction ProgramTemplate({ history }) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                    Створити програму на основі шаблону серед наведених нижче АБО\r\n                </div>\r\n                <Link className=\"template_link\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js",["654","655","656"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './SignUpForm2.css'\r\nimport NextButtonComponent from './NextButtonComponent'\r\nimport BackButtonComponent from '../Login/BackButtonComponent'\r\n\r\nfunction SignUpForm2() {\r\n    \r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const [country, setCountry] = useState('')\r\n    console.log(country)\r\n    localStorage.setItem('Country', country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    localStorage.setItem(\"step\",3)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n\r\n            <form className=\"form-second-personal-data\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n\r\n                <div className=\"custom_image_input\">\r\n                    <label for=\"image_input\">\r\n                        <img\r\n                            src={Upload}\r\n                            height=\"25\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                marginLeft: '25px',\r\n                                marginRight: '15px',\r\n                                marginTop: '9px',\r\n                                color: '#EEEEEE',\r\n                            }}\r\n                        />\r\n                        <span className=\"download_image\" id=\"file-chosen\">\r\n                            Завантажити фото профілю\r\n                        </span>\r\n                        <hr />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image_input\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                </div>\r\n                {selectedFile && <img src={preview} className=\"input_image\" />}\r\n                <div id=\"div1\" className=\"image_container_simulator\">\r\n                    Фото\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCountry(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Країна\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCity(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Місто\"\r\n                    />\r\n                </div>\r\n               \r\n            </form> \r\n            <NextButtonComponent />\r\n            <BackButtonComponent />\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm2\r\n// function addSecondInputRegistr(photo, country, city) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Photo: photo, Country: country, City: city})\r\n// }\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js",["657"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport app from '../../Firebase/firebase'\r\nimport SwitchSelector from 'react-switch-selector'\r\nimport './UserRoleChoosing.css'\r\nimport NextButtonComponent from '../Login/NextButtonComponent'\r\nfunction SignUpForm3() {\r\n    const options = [\r\n        {\r\n            label: 'Супервізор',\r\n            value: {\r\n                role: 'Supervisors',\r\n            },\r\n        },\r\n        {\r\n            label: 'Терапіст',\r\n            value: {\r\n                role: 'Therapists',\r\n            },\r\n        },\r\n    ]\r\n\r\n    const onChange = (newValue) => {\r\n        localStorage.setItem('proffesion', newValue.role)\r\n        console.log(newValue.role)\r\n    }\r\n    localStorage.setItem(\"step\",1)\r\n    localStorage.setItem(\"proffesion\",\"Supervisors\")\r\n    return (\r\n        <div>\r\n            <LoginNavigation colorBackground={\"white\"} colorText={'#48535F'}/>\r\n            <div className=\"before_register\">\r\n                Передусім оберіть вашу роль як користувача:\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: 350,\r\n                    height: 55,\r\n                    paddingTop: '70px',\r\n                    fontSize: '28px',\r\n                    textAlign: 'center',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                }}\r\n            >\r\n                <SwitchSelector\r\n                    onChange={onChange}\r\n                    options={options}\r\n                    backgroundColor={'#48535F'}\r\n                    fontColor={'#FFFFFF'}\r\n                    selectedFontColor={'#48535F'}\r\n                    selectionIndicatorMargin=\"4\"\r\n                    wrapperBorderRadius=\"8\"\r\n                    optionBorderRadius=\"7\"\r\n                    fontSize=\"15px\"\r\n                    selectedBackgroundColor=\"#FFFFFF\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"have_acc\">\r\n                <span className=\"still_no_acc_text\">\r\n                    Вже маєте акаунт? &nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                <div className=\"login_link_reg\">\r\n                    <a href=\"/\" className=\"login_please\">\r\n                        Залогуватись\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <NextButtonComponent />\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm3\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js",["658"],"import React, { useCallback, useState } from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport './SignUpForm4.css'\r\nimport { withRouter } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport BackButtonComponent from '../Login/BackButtonComponent'\r\n\r\nfunction SignUpForm4({ history }) {\r\n    localStorage.setItem(\"step\", 4)\r\n    const handleSignUp = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const {\r\n                email,\r\n                password,\r\n                passwordCheck,\r\n                phone,\r\n            } = event.target.elements\r\n            try {\r\n                if (password.value === passwordCheck.value) {\r\n                    await app\r\n                        .auth()\r\n                        .createUserWithEmailAndPassword(\r\n                            email.value,\r\n                            password.value\r\n                        )\r\n\r\n                    await app.auth().currentUser.sendEmailVerification()\r\n\r\n                    addInputRegistr()\r\n                    history.push('/')\r\n                } else {\r\n                    alert('Будь ласка, перевірте ваш пароль')\r\n                }\r\n            } catch (error) {\r\n                alert(error)\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n\r\n    const [phone, setPhoneNumber] = useState('')\r\n    console.log(phone)\r\n    localStorage.setItem('PhoneNumber', phone)\r\n\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n            <form className=\"forth_form\" onSubmit={handleSignUp}>\r\n                <div className=\"contact_text\">Контакти</div>\r\n                <div className=\"inputE\">\r\n                    <input\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputP\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputCp\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"passwordCheck\"\r\n                        placeholder=\"Підтвердження паролю\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputPh\">\r\n                    <input\r\n                        onChange={(event) => setPhoneNumber(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Номер телефону\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    class=\"slide-hover-left-4\"\r\n                    type=\"submit\"\r\n                    value=\"Зареєструватись\"\r\n                />\r\n            </form>\r\n            <BackButtonComponent />\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm4)\r\nfunction addInputRegistr() {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('userEmail'))\r\n        .set({\r\n            Name: localStorage.getItem('Name'),\r\n            Surname: localStorage.getItem('Surname'),\r\n            Birthday: localStorage.getItem('Birthday'),\r\n            Gender: localStorage.getItem('Gender'),\r\n            Country: localStorage.getItem('Country'),\r\n            City: localStorage.getItem('City'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\r\n            TelegramUserID: '',\r\n        })\r\n        db.collection(\"Users\")\r\n        .doc()\r\n        .set({\r\n            Email:localStorage.getItem('userEmail'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n        })\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js",["659","660"],"import './MobileRegistration.css';\r\nimport DataPicker from './DataPicker';\r\nimport {Link} from 'react-router-dom';\r\nimport SwitchSelector from 'react-switch-selector';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\n\r\nfunction MobileRegistration() {\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const options = [\r\n        {\r\n            label: 'Супервізор',\r\n            value: {\r\n                role: 'Supervisors',\r\n            },\r\n        },\r\n        {\r\n            label: 'Терапіст',\r\n            value: {\r\n                role: 'Therapists',\r\n            },\r\n        },\r\n    ]\r\n    \r\n    const onChange = (newValue) => {\r\n        localStorage.setItem('proffesion', newValue.role)\r\n        console.log(newValue.role)\r\n    }\r\n    localStorage.setItem(\"proffesion\",\"Supervisors\")\r\n    const [firstName, setFirstName] = useState('')\r\n    localStorage.setItem('Name', firstName)\r\n    console.log(firstName)\r\n    const [lastName, setLastName] = useState('')\r\n    localStorage.setItem('Surname', lastName)\r\n    console.log(lastName)\r\n    const [sex, setSex] = useState('')\r\n    localStorage.setItem('Gender', sex)\r\n    console.log(sex)\r\n    const [country, setCountry] = useState('')\r\n    localStorage.setItem('Country', country)\r\n    console.log(country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    const [phone, setPhoneNumber] = useState('')\r\n    localStorage.setItem('PhoneNumber', phone)\r\n    console.log(phone)\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div className=\"mobile_lightblue_background\">\r\n        <div className=\"mobile_registration\">  \r\n\r\n           \r\n            <div className=\"sign-up-text-mobile\">Реєстрація</div>\r\n            \r\n            <div className=\"input_form\">\r\n            <div className=\"mobile_registration_label_centre\">Оберіть вашу роль</div>\r\n            <div\r\n                style={{\r\n                    width: '50vw',\r\n                    height: '10vw',\r\n                    paddingTop: '5vw',\r\n                    paddingBottom: '5vw',\r\n\r\n                    fontSize: '4vw',\r\n                    textAlign: 'center',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                }}\r\n            >\r\n                <SwitchSelector\r\n                    onChange={onChange}\r\n                    options={options}\r\n                    backgroundColor={'#48535F'}\r\n                    fontColor={'#FFFFFF'}\r\n                    selectedFontColor={'#48535F'}\r\n                    selectionIndicatorMargin=\"4\"\r\n                    wrapperBorderRadius=\"8\"\r\n                    optionBorderRadius=\"7\"\r\n                    fontSize=\"15px\"\r\n                    selectedBackgroundColor=\"#FFFFFF\"\r\n                />\r\n            </div>\r\n            <div className=\"mobile_registration_label\">Ім'я</div>\r\n            <div className=\"input_text_mobile input_name\">\r\n                    <input\r\n                        onChange={(event) => setFirstName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Прізвище</div>\r\n                <div className=\"input_text_mobile input_name\">\r\n                    <input\r\n                        onChange={(event) => setLastName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"lastname\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label_centre birthday_mobile\">Ваша дата народження</div>\r\n                <div className=\"birthday_date_picker_mobile\">\r\n                    <DataPicker />\r\n                </div>\r\n                <div className=\"mobile_registration_label_centre gender_up\">Оберіть вашу стать</div>\r\n                <div className=\"gender_container_mobile gender_down\">\r\n                    <div className=\"group_mobile\">\r\n                        <input\r\n                            onClick={() => setSex('Чоловіча')}\r\n                            className=\"gender_checks_mobile\"\r\n                            type=\"checkbox\"\r\n                            id=\"xd\"\r\n                        />\r\n                        <label for=\"xd\">Чоловіча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group_mobile\">\r\n                        <input\r\n                            onClick={() => setSex('Жіноча')}\r\n                            type=\"checkbox\"\r\n                            id=\"figma\"\r\n                            className=\"gender_checks_mobile\"\r\n                        />\r\n                        <label for=\"figma\">Жіноча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group_mobile\">\r\n                        <input\r\n                            onClick={() => setSex('Інше')}\r\n                            type=\"checkbox\"\r\n                            id=\"sketch\"\r\n                            className=\"gender_checks_mobile\"\r\n                        />\r\n                        <label for=\"sketch\">Інше</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"custom_image_input\">\r\n                    <label for=\"image_input\">\r\n                        <img\r\n                            src={Upload}\r\n                            height=\"25\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                marginLeft: '25px',\r\n                                marginRight: '15px',\r\n                                marginTop: '9px',\r\n                                color: '#EEEEEE',\r\n                            }}\r\n                        />\r\n                        <span className=\"download_image\" id=\"file-chosen\">\r\n                            Завантажити\r\n                        </span>\r\n                        <hr />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image_input\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Країна</div>\r\n                <div className=\"input_text_mobile input_country\">\r\n                    <input\r\n                        onChange={(event) => setCountry(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Місто</div>\r\n                <div className=\"input_text_mobile input_city\">\r\n                    <input\r\n                        onChange={(event) => setCity(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Email</div>\r\n                <div className=\"input_text_mobile input_email\">\r\n                    <input\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"email\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Пароль</div>\r\n                <div className=\"input_text_mobile input_password\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"password\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Підтвердження паролю</div>\r\n                <div className=\"input_text_mobile input_password\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"passwordCheck\"\r\n                    />\r\n                </div>\r\n                <div className=\"mobile_registration_label\">Номер телефону</div>\r\n                <div className=\"input_text_mobile input_phone\">\r\n                    <input\r\n                        onChange={(event) => setPhoneNumber(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"phone\"\r\n                    />\r\n                </div>\r\n                <input\r\n                            class=\"slide-hover-left-3_mobile\"\r\n                            type=\"submit\"\r\n                            value=\"Зареєструватись\"\r\n                        />\r\n                </div>\r\n                <div className=\"already_acc\">\r\n                        <span className=\"already_acc_text\">\r\n                            Вже маєте акаунт? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                        <Link className=\"signin_link\" to=\"/\">\r\n                            Залогуватись\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default MobileRegistration;\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js",["661","662","663"],"import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { List, makeStyles, Divider, Box } from '@material-ui/core'\r\nimport app from '../../Firebase/firebase'\r\nimport File from './File'\r\nimport './Pagination.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n    },\r\n    items: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nfunction PaginationRounded ({history}) {\r\n    const classes = useStyles()\r\n    const [files, setFiles] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [filesPerPage] = useState(4)\r\n\r\n    console.log('')\r\n    var storageRef = app.storage().ref()\r\n    var patientResultRef = storageRef.child(\r\n        'patients/' + localStorage.getItem('child') + '/results'\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            patientResultRef.listAll().then(function (result) {\r\n                setFiles(\r\n                    result.items.map((url) => {\r\n                        return url\r\n                            .toString()\r\n                            .replace(\r\n                                'gs://ionkid-abd2f.appspot.com/patients/' +\r\n                                    localStorage.getItem('child') +\r\n                                    '/results/',\r\n                                ''\r\n                            )\r\n                    })\r\n                )\r\n            })\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, []) // [files, setFiles]\r\n\r\n    console.log(files)\r\n    const handleChange = (event, value) => {\r\n        setPage(value)\r\n    }\r\n\r\n    console.log('sho?   \\n' + files.length)\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"table-wrapper\"\r\n                style={{ position: 'relative', bottom: '5rem' }}\r\n            >\r\n                {files\r\n                    .slice((page - 1) * filesPerPage, page * filesPerPage)\r\n                    .map((file) => {\r\n                        return <File history={history} file={file} loading={loading} />\r\n                    })}\r\n                {/* 'Divider' protrudes to the left || Need to fix or delete */}\r\n                {/* <Divider /> */}\r\n            </div>\r\n            <Box component=\"span\" className=\"pagination-box\">\r\n                <Pagination\r\n                    count={Math.ceil(files.length / filesPerPage)}\r\n                    page={page}\r\n                    onChange={handleChange}\r\n                    defaultPage={1}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                    classes={{ ul: classes.paginator }}\r\n                />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginationRounded\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js",["664","665"],"\r\nimport React from 'react'\r\nimport './ProgramHeader.css'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport SignOut from '../../assets/SignOut.svg'\r\n\r\nimport app from '../../Firebase/firebase'\r\nfunction signOut() {\r\n    localStorage.setItem(\"user\",'@gmail')\r\n    app.auth().signOut()\r\n    \r\n}\r\n\r\nfunction MobileHeader() {\r\n    return (\r\n        <div className=\"logo_container\">\r\n            <img\r\n                    src={SignOut}\r\n                    onClick={() => signOut()}\r\n                    height=\"100%\"\r\n                    width= \"10%\"\r\n                    className=\"sign_out_button\"\r\n                    style={{\r\n                        cursor: 'pointer',\r\n                        position: 'relative',\r\n                        marginLeft: '10%',\r\n                    }}\r\n                />\r\n            <img\r\n                    src={Logo}\r\n                    height=\"100%\"\r\n                    width= \"50%\"\r\n                    style={{\r\n                        marginLeft: '7%',\r\n                        position: 'relative',\r\n                    }}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default MobileHeader","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js",["666","667","668"],"import React, { useState } from 'react'\r\nimport './ProgramHeader.css'\r\nimport './Header.css'\r\nimport Logo from '../../assets/Logo.svg';\r\nimport app from '../../Firebase/firebase'\r\nfunction signOut() {\r\n    localStorage.setItem(\"user\",'@gmail')\r\n    app.auth().signOut()\r\n    \r\n}\r\nfunction Header() {\r\n\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => signOut()}\r\n                    width=\"14.7%\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: \"-20px\"\r\n                    }}\r\n                />\r\n                <input\r\n                    className=\"search\"\r\n                    onChange={console.log(\"qqq\")}\r\n                    placeholder=\"Пошук...\"\r\n                />\r\n                <h1\r\n                    style={{\r\n                        border: 'none',\r\n                        borderBottom: ' 1px solid #6F6F6F',\r\n                        position: 'relative',\r\n                        top: '8.2%',\r\n                        left: '3.33%',\r\n                        width: '93.2%',\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js",["669","670"],"import React from 'react'\r\nimport './ProgramHeader.css'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport app from '../../Firebase/firebase'\r\n\r\nfunction SimpleHeader() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => app.auth().signOut()}\r\n                    width=\"14.7%\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: '-20px',\r\n                    }}\r\n                />\r\n\r\n                <h1\r\n                    style={{\r\n                        border: 'none',\r\n                        borderBottom: ' 1px solid #6F6F6F',\r\n                        position: 'relative',\r\n                        top: '8.2%',\r\n                        left: '3.33%',\r\n                        width: '93.2%',\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SimpleHeader","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js",["671","672","673","674","675","676"],"import React, { useEffect, useState } from 'react'\r\nimport { Item, Name, ButtonItem, Amount, Patient } from './PatientItem.styled'\r\nimport { Link } from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nfunction PatientItem({ patients }) {\r\n    console.log(patients)\r\n    return (\r\n        <div className=\"all_inter\">\r\n            {patients.map((patient) => (\r\n                <Item className=\"hover_patient\" style={{ height: '26rem' }}>\r\n                    <img\r\n                        src={Kid}\r\n                        width=\"250\"\r\n                        height=\"240\"\r\n                        style={{ marginLeft: '0.8rem', marginTop: '0.9rem' }}\r\n                    />\r\n\r\n                    <Name style={{ marginLeft: \"-3.8rem\", textAlign: \"center\", height: '4rem' }}>{patient.Name}</Name>\r\n\r\n                        <Link to=\"/patient\" className=\"viewmore_patient button_item\" onClick={() =>\r\n                            localStorage.setItem('child', patient.id)}>\r\n                            Переглянути\r\n                        </Link>\r\n                </Item>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx",["677","678","679"],"import ProgramHeader from '../Header/ProgramHeader'\r\nimport './Program.css'\r\nimport { TextInput } from 'react-native-paper'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditable() {\r\n    let test = []\r\n\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        fetch(`/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n    }\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                 <>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_name\"\r\n            >\r\n                Критерій узагальнення навику:{' '}\r\n            </div>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_value\"\r\n            >\r\n                <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriteriongenGenerSkill}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addCriteriongenGenerSkill(e.target.value)\r\n                                    }\r\n                                />\r\n                </div>\r\n            </div>\r\n        </>\r\n                        \r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Оберіть інтервал часу або тип виконання:\r\n                                    <select\r\n                                    defaultValue={protocol.Interval}\r\n                                        onChange={(event) =>\r\n                                            addInterval(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '0.5rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"false\"> </option>\r\n                                        <option value=\"0\">0 секунд</option>\r\n                                        <option value=\"2\">2 секунди</option>\r\n                                        <option value=\"4\">4 секунди</option>\r\n                                        <option value=\"6\">6 секунд</option>\r\n                                        <option value=\"Самостійна реакція\">\r\n                                            Самостійна реакція\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                     defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '-1rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"false\">\r\n                                        </option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                            }}\r\n                                        >\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_button\"\r\n                                            >\r\n                                                <h1\r\n                                                    style={{\r\n                                                        marginTop: '5px',\r\n                                                        marginBottom: '5px',\r\n                                                        textAlign: 'center',\r\n                                                        width: '22px',\r\n                                                        height: '20px',\r\n                                                        color: '#4d4d4d',\r\n                                                        fontSize: '20px',\r\n                                                    }}\r\n                                                >\r\n                                                    +\r\n                                                </h1>\r\n                                            </button>\r\n                                            <div className=\"transparent_input\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) =>\r\n                                                        setStimulInput(\r\n                                                            event.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Додати стимул....\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">Етап 1</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{ fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 2*/}\r\n                                <div className=\"element_name\">Етап 2</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep2\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep2(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 3*/}\r\n                                <div className=\"element_name\">Етап 3</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep3\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep3(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{ fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <button\r\n                        className=\"save_button_supervisor_mobile btn-background-slide\"\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                    >\r\n                        Зберегти файл\r\n            </button>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions1: instructionInput })\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions2: instructionInput })\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions3: instructionInput })\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .add({ Name: stimulInput })\r\n    }else {alert(\"Неможливо надіслати пустий стимул\")}\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Skill: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Method: params })\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ DesirableReaction: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ ReductionСriterion: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriterionIncrease: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ StepDescription: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep3: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep2: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep1: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Interval: interval })\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ MethodTakingHint: method })\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriteriongenGenerSkill: generSkill })\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx",["680","681","682","683","684","685","686","687","688","689"],"import './ProtocolList.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItem from './PageComponent/ProtocolItem'\r\nimport Header from '../Header/Header'\r\nimport ArrowHeader from './PageComponent/ArrowHeader'\r\nimport Popup from '../ModalWindow/Popup'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\n\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n    const [protocolsToTerapists, setProtocolsToTerapists] = useState([])\r\n    let listTest = JSON.parse(localStorage.getItem('therapistID'))\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocolsToTerapists(\r\n                        snapshot.docs.map((doc) => {\r\n                            console.log('UPD', doc.data())\r\n                            listTest.map((terapist) => {\r\n\r\n\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .collection('Protocols').doc(doc.id).set(doc.data())\r\n\r\n\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .set(JSON.parse(localStorage.getItem('childData')))\r\n\r\n                            }\r\n                            )\r\n                        })\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [stimulusToTerapists, setStimulusToTerapists] = useState([])\r\n\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n\r\n                if (snapshot.size) {\r\n\r\n                    snapshot.docs.map((doc) => {\r\n                        db\r\n                            .collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols').doc(doc.id).collection(\"Stimulus\")\r\n                            .onSnapshot((snapshot) => {\r\n                                if (snapshot.size) {\r\n\r\n                                    setStimulusToTerapists(snapshot.docs.map((docStim) => {\r\n                                        listTest.map((terapist) => {\r\n                                            db.collection('Therapists')\r\n                                                .doc(terapist)\r\n                                                .collection('Patient')\r\n                                                .doc(localStorage.getItem('child'))\r\n                                                .collection('Protocols').doc(doc.id)\r\n                                                .collection(\"Stimulus\").doc(docStim.id).set(docStim.data())\r\n                                        }\r\n                                        )\r\n                                    }))\r\n                                } else {\r\n                                    console.log('Сука1')\r\n                                }\r\n                            })\r\n                    })\r\n\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const db = app.firestore()\r\n    //     var test=1\r\n    //     const unsubscribe = db\r\n    //         .collection(localStorage.getItem(\"proffesion\"))\r\n    //         .doc(localStorage.getItem('user'))\r\n    //         .collection('Patient')\r\n    //         .doc(localStorage.getItem('child'))\r\n    //         .collection('Protocols')\r\n    //         .onSnapshot((snapshot) => {\r\n    //             if (snapshot.size) {\r\n    //                 setProtocols(\r\n    //                     snapshot.docs.sort((a, b) => +a.data().ProtocolId - +b.data().ProtocolId).map((doc) => {\r\n    //                         db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                         .doc(localStorage.getItem('user'))\r\n    //                         .collection('Patient')\r\n    //                         .doc(localStorage.getItem('child'))\r\n    //                         .collection('Protocols').doc(doc.data().id)\r\n    //                         .update({ ProtocolId: test })\r\n    //                         test+=1\r\n    //                         console.log(\"СУКАААААААААААА_1\"+ test)\r\n    //                     })\r\n                        \r\n    //                 )\r\n    //                 console.log('Сука')\r\n    //                 // for (let i = 0; i < protocols.length; i++) {\r\n    //                 //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n    //                 //     db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                 //         .doc(localStorage.getItem('user'))\r\n    //                 //         .collection('Patient')\r\n    //                 //         .doc(localStorage.getItem('child'))\r\n    //                 //         .collection('Protocols').doc(protocols[i].id)\r\n    //                 //         .update({ ProtocolId: i + 1 })\r\n                \r\n    //                 // }\r\n\r\n    //             } else {\r\n    //                 console.log('Сука1')\r\n    //             }\r\n    //         })\r\n    //     return () => {\r\n    //         unsubscribe()\r\n    //     }\r\n    // }, [])\r\n    \r\n\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\r\n    function dragStartHandler(event, protocol) {\r\n        console.log(\"DRAG\" + protocol.ProtocolId)\r\n        setcurrrentProtocoll(protocol)\r\n\r\n    }\r\n\r\n    function dragEndHandler(event, protocol) {\r\n\r\n\r\n    }\r\n    function dragOverHandler(event) {\r\n        event.preventDefault()\r\n        // fetch(`http://127.0.0.1:5000/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n        // })\r\n    }\r\n\r\n    function dropHandler(event, protocol) {\r\n\r\n\r\n        const db = app.firestore()\r\n        event.preventDefault()\r\n        console.log(\"DROP\" + protocol.ProtocolId)\r\n        setProtocols(protocols.map(proto => {\r\n\r\n            // if (proto.ProtocolId == protocol.ProtocolId) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //     .doc(localStorage.getItem('user'))\r\n            //     .collection('Patient')\r\n            //     .doc(localStorage.getItem('child'))\r\n            //     .collection('Protocols').doc(protocol.id)\r\n            //     .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //                 })\r\n            //     }\r\n\r\n            if (proto.ProtocolId == protocol.ProtocolId) {\r\n                db.collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('Patient')\r\n                    .doc(localStorage.getItem('child'))\r\n                    .collection('Protocols').doc(currrentProtocoll.id)\r\n                    .update({ ProtocolId: protocol.ProtocolId })\r\n                    db.collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('Patient')\r\n                    .doc(localStorage.getItem('child'))\r\n                    .collection('Protocols').doc(protocol.id)\r\n                    .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId>protocol.ProtocolId ) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId})\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId<protocol.ProtocolId ) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId+1})\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId>protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==1) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocol.id)\r\n            //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n                // })\r\n\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId<protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==-1) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocol.id)\r\n            //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n                // })\r\n\r\n           \r\n            // if (visited == true) {\r\n            //     protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n            //     for (let i = startVar; i < protocols.length+1 ; i++) {\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //             .doc(localStorage.getItem('user'))\r\n            //             .collection('Patient')\r\n            //             .doc(localStorage.getItem('child'))\r\n            //             .collection('Protocols').doc(protocols[i-1])\r\n            //             .update({ ProtocolId: i })\r\n            //     }\r\n            // }\r\n\r\n\r\n            return proto\r\n        }\r\n\r\n        ))\r\n\r\n        // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n        // })\r\n    }\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <ArrowHeader />\r\n            <button class=\"create_template_button btn-background-slide\" onClick={togglePopup}>Зберегти як шаблон</button>\r\n            <div\r\n                onClick={() => addProto(protocols.length)}\r\n                className=\"add-proto-mobile\"\r\n            >\r\n                <BsPlusCircle />\r\n            </div>\r\n            {isOpen && <Popup protocols={protocols} child={child[0]}\r\n                content={<>\r\n                    <b className=\"text_modul\">Будь ласка, оберіть тип даного шаблону:</b>\r\n                    <div className=\"button_modul\">\r\n\r\n                    </div>\r\n                </>}\r\n                handleClose={togglePopup}\r\n            />}\r\n            <div className=\"create_element\" >\r\n                {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                {protocolsNumber.map((protocol) => (\r\n                    <>\r\n                        <div draggable='true'\r\n                            onDragStart={(event) => { dragStartHandler(event, protocols[protocol - 1]) }}\r\n                            onDragLeave={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragEnd={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragOver={(event) => { dragOverHandler(event) }}\r\n                            onDrop={(event) => { dropHandler(event, protocols[protocol - 1]) }}\r\n                        >\r\n                            <ProtocolItem\r\n                            protocols={protocols}\r\n\r\n                                number={protocol}\r\n                                protocolId={protocols[protocol - 1].id}\r\n                                protocolName={protocols[protocol - 1].ProtocolId}\r\n                                sphereOfDevelopment={protocols[protocol - 1].SphereOfDevelopment}\r\n                                length={protocols.length}\r\n                                skill={protocols[protocol - 1].Skill}\r\n                                statusCopied={protocols[protocol - 1].StatusCopied}\r\n                                isActive={protocols[protocol - 1].IsActive}\r\n                                interval={protocols[protocol - 1].Interval}\r\n                                correctionProcedureStep1={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep1\r\n                                }\r\n                                correctionProcedureStep2={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep2\r\n                                }\r\n                                correctionProcedureStep3={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep3\r\n                                }\r\n                                criterionIncrease={protocols[protocol - 1].CriterionIncrease}\r\n                                desirableReaction={protocols[protocol - 1].DesirableReaction}\r\n                                method={protocols[protocol - 1].Method}\r\n                                methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                                reductionСriterion={protocols[protocol - 1].ReductionСriterion}\r\n                                stepDescription={protocols[protocol - 1].StepDescription}\r\n                                CriteriongenGenerSkill={protocols[protocol - 1].CriteriongenGenerSkill}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ))}\r\n                {/* </ReactSortable> */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: \"\",\r\n            Interval: \"\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx",["690","691","692","693"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItemTherapist from './PageComponent/ProtocolItemTherapist'\r\nimport Header from '../Header/Header'\r\nimport { Link } from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport './ProtocolList.css'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let protocolsNumber = []\r\n    for (let i = 0; i <protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader/>\r\n            <Header />\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                        style={{ color: '#6F6F6F' }}\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>Програма</h2>\r\n            </div>\r\n\r\n            {protocolsNumber.map((protocol) => (\r\n                        <ProtocolItemTherapist\r\n                            number={protocol}\r\n                            protocolId={protocols[protocol-1].id}\r\n                            protocolName={protocols[protocol-1].ProtocolId}\r\n                            sphereOfDevelopment={protocols[protocol-1].SphereOfDevelopment}\r\n                            length={protocols.length}\r\n                            skill={protocols[protocol-1].Skill}\r\n                            statusCopied={protocols[protocol-1].StatusCopied}\r\n                            isActive={protocols[protocol-1] .IsActive}\r\n                            interval={protocols[protocol-1].Interval}\r\n                            correctionProcedureStep1={\r\n                                protocols[protocol-1].CorrectionProcedureStep1\r\n                            }\r\n                            correctionProcedureStep2={\r\n                                protocols[protocol-1].CorrectionProcedureStep2\r\n                            }\r\n                            correctionProcedureStep3={\r\n                                protocols[protocol-1].CorrectionProcedureStep3\r\n                            }\r\n                            criterionIncrease={protocols[protocol-1].CriterionIncrease}\r\n                            desirableReaction={protocols[protocol-1].DesirableReaction}\r\n                            method={protocols[protocol-1].Method}\r\n                            methodTakingHint={protocols[protocol-1].MethodTakingHint}\r\n                            reductionСriterion={protocols[protocol-1].ReductionСriterion}\r\n                            stepDescription={protocols[protocol-1].StepDescription}\r\n                            CriteriongenGenerSkill={protocols[protocol-1].CriteriongenGenerSkill}\r\n                        />\r\n                    ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx",["694","695","696","697","698"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\n\r\nexport default function PatientInfoTherapist() {\r\n    let [patients, setPatients] = useState([])\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Therapists')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <div >\r\n            {/* className=\"grey_back\" */}\r\n            <ul >\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{ color: '#6F6F6F' }}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n\r\n                            <img\r\n                                src={Kid}\r\n                                height=\"200\"\r\n                                className=\"mobile_child_image\"\r\n                            />\r\n                            <img\r\n                                src={Kid}\r\n                                height=\"270\"\r\n                                className=\"child_image\"\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div> */}\r\n                            </div> \r\n                        \r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    {/* <div>Терапевти:</div>\r\n                                    <div>\r\n                                        \r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            fontSize: '20px',\r\n                                                            display: 'flex',\r\n                                                            flexDirection:\r\n                                                                'row',\r\n                                                            justifyContent:\r\n                                                                'space-between',\r\n                                                        }}\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '-20px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                    </div> */}\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            marginLeft: '2rem',\r\n                                        }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={'/protocol-list'}\r\n                                onClick={() =>\r\n                                    localStorage.setItem('program', 'ok')\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx",["699","700","701","702","703","704","705"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\n\r\nexport default function PatientInfoUser() {\r\n    let [patients, setPatients] = useState([])\r\n\r\n    let [therapistInput, setTherapistInput] = useState('')\r\n\r\n    let test = []\r\n\r\n    const [terapists, setTerapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTerapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    terapists.map((terapist) => test.push(terapist.id))\r\n    console.log(test)\r\n    localStorage.setItem('therapistID', JSON.stringify(test))\r\n\r\n    const [therapists, setTherapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTherapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Supervisors')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    let path = '/protocol-list'\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    if (protocols.length == 0) {\r\n        path = '/program-template'\r\n    } else {\r\n        path = '/protocol-list'\r\n    }\r\n    localStorage.setItem('childData', JSON.stringify(patients[0]))\r\n    return (\r\n        <div >\r\n            <MobileHeader/>\r\n            <Header />\r\n            <ul>\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{ color: '#6F6F6F' }}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                        <img\r\n                                    src={Kid}\r\n                                    height=\"200\"\r\n                                    className=\"mobile_child_image\"\r\n                                />\r\n                            <img\r\n                                src={Kid}\r\n                                height=\"270\"\r\n                                className=\"child_image\"\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div> */}\r\n                                {/* </div> */}\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <div>Терапевти:</div>\r\n                                    <div className=\"therapist_info\">\r\n                                        {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        className = \"therapist_container\"\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '0px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"icon_place_therapist\">\r\n                                                            <img\r\n                                                                className=\"icon_patient\"\r\n                                                                onClick={() =>\r\n                                                                    DeleteTherapist(\r\n                                                                        therapist.id\r\n                                                                    )\r\n                                                                }\r\n                                                                src={Delete}\r\n                                                                width=\"8px\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                   \r\n                                    </div>\r\n                                   \r\n                                    <div\r\n                                        className=\"add_patient_container\"\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            marginLeft: '2rem',\r\n                                        }}\r\n                                    >\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                addTherapist(therapistInput)\r\n                                            }\r\n                                            className=\"add_button\"\r\n                                        >\r\n                                            <h1\r\n                                                \r\n                                                style={{\r\n                                                    marginTop: '5px',\r\n                                                    marginBottom: '5px',\r\n                                                    textAlign: 'center',\r\n                                                    width: '22px',\r\n                                                    height: '20px',\r\n                                                    color: '#4d4d4d',\r\n                                                    fontSize: '20px',\r\n                                                }}\r\n                                            >\r\n                                                +\r\n                                            </h1>\r\n                                        </button>\r\n                                        <div className=\"transparent_input\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setTherapistInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати за поштою....\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={path}\r\n                                onClick={() =>\r\n                                   setData()\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction setData(){\r\n    localStorage.setItem(\"templateType\",\"private\")\r\n    localStorage.setItem('program', 'ok')\r\n}\r\n\r\nfunction DeleteTherapist(therapistId) {\r\n    console.log('хуй')\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Therapists')\r\n        .doc(therapistId)\r\n        .delete()\r\n        db.collection('Therapists')\r\n        .doc(therapistId)\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .delete()\r\n        alert(`Видалено терапіста за електронною поштою ${therapistId}`)\r\n\r\n}\r\n\r\nfunction addTherapist(therapistInput) {\r\n    const db = app.firestore()\r\n    if (therapistInput != '') {\r\n        db.collection('Therapists')\r\n            .doc(therapistInput)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    console.log('zaebis pashe')\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: doc.data().Name })\r\n                        alert(`Терапіст ${doc.data().Name} доданий за електронною поштою ${therapistInput}`)\r\n                        fetch(`https://john-steck-api.herokuapp.com/email/reg_child/${localStorage.getItem(\"Name\")+\" \"+localStorage.getItem(\"Surname\")}/${localStorage.getItem(\"childName\")}/${therapistInput}`).then((data) => {\r\n                          \r\n                        })\r\n                } else {\r\n                    alert(`Відправлено лист на реєстрацію на ${therapistInput}`)\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: 'Очікуємо реєстрації' })\r\n\r\n\r\n                    db.collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: 'Очікуємо реєстрації' })\r\n                    fetch(`https://john-steck-api.herokuapp.com/email/reg/${localStorage.getItem(\"Name\")+\" \"+localStorage.getItem(\"Surname\")}/${localStorage.getItem(\"childName\")}/${therapistInput}`).then((data) => {\r\n                       \r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    } else {\r\n        alert('Спочатку вкажіть пошту терапевта')\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx",["706","707","708","709","710","711"],"import { Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nfunction AHeader() {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                        style={{ color: '#6F6F6F' }}\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>Програма</h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AHeader\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx",["712","713"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <img\r\n                    className=\"template_img\"\r\n                    onClick={() => DeleteTemplate(idTemplate)}\r\n                    src={Delete}\r\n                ></img>\r\n\r\n                <div\r\n                    className=\"template_categories\"\r\n                    onClick={() => CreateDuplicateTemplate(idTemplate, history)}\r\n                >\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n\r\n\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx",["714"],"import React from 'react'\r\nimport '../SignUpForm1.css'\r\nimport 'fontsource-dm-sans'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction LoginNavigation() {\r\n    let colorBackground = 'white'\r\n    let colorText = '#48535f'\r\n\r\n    return (\r\n        <nav className=\"number-buttons\">\r\n            <Link to=\"/registration\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={1} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup2\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={2} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup3\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={3} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup4\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={4} />\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\nexport default LoginNavigation\r\n\r\nfunction StepButton({ colorBackground, colorText, stepNumber }) {\r\n    if (localStorage.getItem(\"step\") == stepNumber) {\r\n        return (\r\n            <button style={{ backgroundColor: colorBackground, color: colorText }} className=\"number-button\">{stepNumber}</button>)\r\n    } else {\r\n        return (\r\n            <button className=\"number-button\">{stepNumber}</button>)\r\n\r\n    }\r\n}","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js",["715","716","717"],"import React, { useState, useEffect } from 'react'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport './ProgramHeader.css'\r\nimport { Link } from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\n\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction ProgramHeader() {\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        console.log(fetch(`https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`))\r\n        fetch(`https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n        alert(\"Протокол збережено успішно!\")\r\n    }\r\n    return (\r\n        <>\r\n         <div className=\"full_program_header\">\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => signOut()}\r\n                    width=\"220\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: '-20px',\r\n                    }}\r\n                />\r\n                <div style={{ position: 'absolute', top: '0.9%', left: '20%' }}>\r\n                  <Link to='/protocol-list'>\r\n                    <button\r\n                        className=\"save_button btn-background-slide\"\r\n                        style={{ top: '1rem', cursor: 'pointer' }}\r\n                        onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                    >\r\n                        Зберегти файл\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <hr\r\n                style={{\r\n                    border: 'none',\r\n                    borderBottom: ' 1px solid #6F6F6F',\r\n                    position: 'relative',\r\n                    top: '1.5rem',\r\n                    left: '1.7%',\r\n                    width: '93.2%',\r\n                    marginBottom: '2rem',\r\n                    marginRight: '4.5rem',\r\n                }}\r\n            />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgramHeader;\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx",["718","719"],"import { Link } from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport '../Program.css'\r\nimport '../../PatientItem/PatientItem.css'\r\nfunction ArrowHeader() {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        className=\"program_link\"\r\n                        to=\"/protocol-list\"\r\n                    >\r\n                        Програма\r\n                    </Link>\r\n                </h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx",["720"],"import Delete from '../../../assets/delete.png'\r\nimport app from '../../../Firebase/firebase'\r\nfunction StimulusItem({ name, stimulId }) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx",["721","722","723","724","725","726","727","728","729","730"],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx",["731","732","733"],"import { Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport '../ProtocolList.css'\r\nfunction ArrowHeader() {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 ><Link to=\"/patient\" className=\"patients_link\" >{localStorage.getItem(\"childName\")}</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <h2 style={{ color: \"#6F6F6F\" }}>Програма</h2>\r\n\r\n                <div\r\n                    onClick={() => addProto(protocols.length)}\r\n                    className=\"add-proto\"\r\n                >\r\n                    <BsPlusCircle size={50} style={{marginTop:\"30px\"}} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))   \r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: \"\",\r\n            Interval: \"\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nexport default ArrowHeader","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx",["734","735","736","737","738"],"import Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport { useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ProtocolItemTherapist({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{ backgroundColor: colorItem, marginLeft: '7vw' }}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number} {statusCopied}.{' '}\r\n                    {sphereOfDevelopment}. {skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <CheckIsActive\r\n                        isActive={isActive}\r\n                        protocolId={protocolId}\r\n                    />\r\n                    <Link\r\n                    title=\"Переглянути\"\r\n                        onClick={() =>\r\n                            {setData(protocolId,number)}\r\n                        }\r\n                        to=\"/program\"\r\n                    >\r\n                        <AiOutlineArrowRight\r\n                            className='icon go_icon'\r\n                            color=\"black\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CheckIsActive({ isActive, protocolId }) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({ IsActive: valueStatus })\r\n}\r\n\r\nfunction setData(param1,param2){\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem(\"programNumber\",param2)\r\n}","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx",["739","740","741"],"import React from \"react\";\r\nimport './Modal.css'\r\nimport app from '../../Firebase/firebase'\r\nconst Popup = props => {\r\n    console.log(props.protocols)\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n                {props.content}\r\n                <div className=\"button-popup\">\r\n                    <button onClick={() => CreateProgramTemplates(props.protocols, props.child, \"Приватний\")} className=\"button_private\">Приватний</button>\r\n                    <button onClick={() => CreateProgramTemplates(props.protocols, props.child, \"Публічний\")} className=\"button_public\">Публічний</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;\r\n\r\n\r\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\r\n    var endCycle=0\r\n    console.log(protocols)\r\n    const db = app.firestore()\r\n    if (typeTemplates == \"Приватний\") {\r\n        db.collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: child.Age,\r\n                Diagnos: child.Diagnos,\r\n                KidWeight: child.KidWeight,\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection(localStorage.getItem(\"proffesion\"))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n\r\n                )\r\n                db\r\n                    .collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: child.Age,\r\n                        Diagnos: child.Diagnos,\r\n                        KidWeight: child.KidWeight, CountOfProtocol: protocols.length\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n            endCycle=1\r\n    }\r\n    if (typeTemplates == \"Публічний\") {\r\n        db\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: child.Age,\r\n                Diagnos: child.Diagnos,\r\n                KidWeight: child.KidWeight,\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: child.Age,\r\n                        Diagnos: child.Diagnos,\r\n                        KidWeight: child.KidWeight, CountOfProtocol: protocols.length\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n            endCycle=1\r\n    }\r\n\r\n  \r\nif (endCycle==1){         \r\nsetTimeout(() => {\r\n    alert(`${typeTemplates} шаблон протоколів успішно створений!`)\r\n        window.location.reload()\r\n    }, );\r\n}\r\n}","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx",["742"],"import React from \"react\";\r\nimport './SecondModal.css'\r\nimport app from \"../../Firebase/firebase\";\r\n//import DeleteProtocol from '../ProtocolList/PageComponent/ProtocolItem'\r\n\r\nfunction SecondModal({protocolId,handleClose,content}){\r\n  return (\r\n    <div className=\"second-popup-box\">\r\n      <div className=\"second-box\">\r\n        <span className=\"second-close-icon\" onClick={handleClose}>x</span>\r\n        {content}\r\n        <div className=\"second-button-popup\">\r\n        <button onClick={handleClose} className=\"second-button_private\">Скасувати</button>\r\n        <button onClick={(()=>DeleteProtocol(protocolId))} className=\"second-button_public\">Підтвердити</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default SecondModal;\r\n\r\nfunction DeleteProtocol(protocolId) {\r\n\r\n  console.log(protocolId)\r\n\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .delete()\r\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\r\n        db.collection('Therapists')\r\n            .doc(terapist)\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(protocolId)\r\n            .delete()\r\n    })\r\n\r\n    alert(`Протокол успішно видалений!`)\r\n    setTimeout(() => {\r\n      window.location.reload()\r\n  }, 100);\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx",["743","744","745"],"import React,{useState} from 'react';\r\nimport './ButtonsTemplate.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function ButtonsTemplate() {\r\n   \r\n    // const [colorButtonPublic, setcolorButtonPublic] = useState(\"#000000\") \r\n    // const [colorButtonPrivate, setcolorButtonPrivate] = useState(\"#000000\") \r\n    let colorButtonPublic = \"#000000\"\r\n    let colorButtonPrivate = \"#000000\"\r\n\r\n    if (localStorage.getItem(\"templateType\")==\"public\"){\r\n        colorButtonPrivate = \"#000000\"\r\n        colorButtonPublic = \"#EF4F59\"\r\n    }\r\n    if (localStorage.getItem(\"templateType\")==\"private\"){\r\n        colorButtonPrivate  = \"#EF4F59\"\r\n        colorButtonPublic = \"#000000\"\r\n    }\r\n    return(  \r\n        <>\r\n            <div className=\"buttons-template\">\r\n                <Link to=\"/program-template\">\r\n                <button id=\"temp-button-prv\" className=\"buttons-template-private\" onClick={() =>localStorage.setItem(\"templateType\",\"private\")} style={{color: colorButtonPrivate}}>Мої шаблони</button>\r\n                </Link>\r\n                <Link to=\"/public-template\">\r\n                <button id=\"temp-button-pub\" className=\"buttons-template-public\" onClick={() =>localStorage.setItem(\"templateType\",\"public\")} style={{color: colorButtonPublic}}>Загальні шаблони</button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx",["746","747"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/ItemPublic'\r\nimport './ButtonsTemplate'\r\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\r\n\r\nfunction ProgramTemplate({history}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                    Створити програму на основі шаблону серед наведених нижче АБО\r\n                </div>\r\n                <Link className=\"template_link\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx",["748","749"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div\r\n                    className=\"template_categories\"\r\n                    onClick={() => CreateDuplicateTemplate(idTemplate, history)}\r\n                >\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n","C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\NextButtonComponent.jsx",[],"C:\\Users\\пк\\ionkid1603\\PROMETHEUS_web_project\\src\\Components\\Login\\BackButtonComponent.jsx",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\index.js",[],["750","751"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\App.js",["752"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/SignIn/SignIn'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgetPassword from './Components/SignIn/ForgetPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport RenderProgram from './Components/Program/ProgramBranching'\r\nimport { AuthProvider } from './Firebase/AuthSetup/Auth'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoRender from './Components/PatientInfo/PatientInfoBranching'\r\nimport RenderProgramList from './Components/ProtocolList/ProtocolListBranching'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nimport RegistrationPatient from './Components/RegistrationPatient/RegPatientPage'\r\nimport ProgramTemplate from './Components/ProgramTemplate/ProgramTemplate'\r\nimport HomeTemplate from './Components/HomeTemplate/HomeTemplate'\r\nimport ProgramTemplatePublic from './Components/ProgramTemplate/ProgramTemplatePublic'\r\nimport ProtocolListTemplate from './Components/HomeTemplate/TemplateProtocolList/ProtocolListTemplate'\r\nimport ProgramEditableTemplate from \"./Components/HomeTemplate/EditProgramTemplate/ProgramEditableTemplate\";\r\nimport ListMoreInfoTemplate from \"./Components/HomeTemplate/TemplateMoreInfo/ListMoreInfoTemplate\";\r\nimport ProgramTemplateView from \"./Components/HomeTemplate/TemplateMoreInfo/ProgramTemplateView\";\r\nfunction App() {\r\n    return (\r\n        <>\r\n        <HashRouter>\r\n            <AuthProvider>\r\n                \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgetPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={RenderProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={RenderProgramList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoRender}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={TherapyResult}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient_registration\"\r\n                            component={RegistrationPatient}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template\"\r\n                            component={ProgramTemplate}\r\n                        />\r\n                              <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home-template\"\r\n                            component={HomeTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/public-template\"\r\n                            component={ProgramTemplatePublic}\r\n                        />\r\n                          <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/create-template\"\r\n                            component={ProtocolListTemplate}\r\n                        />\r\n                            <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template-edit\"\r\n                            component={ProgramEditableTemplate}\r\n                        />\r\n                          \r\n                          <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info\"\r\n                            component={ListMoreInfoTemplate}\r\n                        />\r\n                       < PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info-protocol\"\r\n                            component={ProgramTemplateView}\r\n                        />\r\n\r\n                    </Switch>\r\n         \r\n            </AuthProvider>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js",["753","754","755"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js",["756","757","758","759","760"],"import React, { useCallback, useContext } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './SignIn.css'\r\nimport { AuthContext } from '../../Firebase/AuthSetup/Auth'\r\nimport { Link } from 'react-router-dom'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nfunction SignIn({ history }) {\r\n    const { currentUser } = useContext(AuthContext)\r\n    const handleLogin = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const { email, password } = event.target.elements\r\n\r\n            const db = app.firestore()\r\n            await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n\r\n                    snapshot.docs.map((doc) => {\r\n                        localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                    })\r\n                } else {\r\n                    console.log('Немає професії')\r\n                }\r\n            })\r\n            // .collection('Patient')\r\n            // .doc(localStorage.getItem('child'))\r\n            // .collection('Protocols')\r\n            // .doc(localStorage.getItem('program'))\r\n            // .collection('Stimulus')\r\n            // .onSnapshot((snapshot) => {\r\n            //     if (snapshot.size) {\r\n            //         setStimulus(\r\n            //             snapshot.docs.map((doc) => ({\r\n            //                 ...doc.data(),\r\n            //                 id: doc.id,\r\n            //             }))\r\n            //         )\r\n            //         console.log('Сука ')\r\n            //     } else {\r\n            //         console.log('Сука1')\r\n            //     }\r\n            // })\r\n\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value)\r\n                if (currentUser.emailVerified == true) {\r\n\r\n                    await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                        if (snapshot.size) {\r\n\r\n                            snapshot.docs.map((doc) => {\r\n                                localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                                \r\n                            })\r\n                        } else {\r\n                            console.log('Немає професії')\r\n                        }\r\n                    })\r\n                    \r\n                    localStorage.setItem('user', currentUser.email)\r\n                    history.push('/home')\r\n                } else {\r\n                    alert('please verify your email')\r\n                }\r\n            } catch (error) {\r\n                if (!error.toString().includes(\"TypeError\")) {\r\n                    alert(error)\r\n                }\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n    if (currentUser && currentUser.emailVerified == true) {\r\n        localStorage.setItem('user', currentUser.email)\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <div className=\"light_blue_back\">\r\n                <div className=\"image-form-division\">\r\n                    <div className=\"image\" />\r\n                    <div className=\"form\">\r\n                        <div className=\"sign-in-text\"> Увійти на сайт</div>\r\n                        <form className=\"login_form\" onSubmit={handleLogin}>\r\n                            <div className=\"mobile_signin_label\">Email</div>\r\n                            <div className=\"login_text_input\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"fname\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mobile_signin_label\">Пароль</div>\r\n                            <div className=\"login_text_input_second\">\r\n\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"lname\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Пароль\"\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                class=\"slide-hover-left-3\"\r\n                                type=\"submit\"\r\n                                value=\"Увійти\"\r\n                            />\r\n                        </form>\r\n                        <div className=\"still_no_acc\">\r\n                            <span className=\"still_no_acc_text\">\r\n                                Досі немає акаунту? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                            <Link className=\"login_link_reg\" to=\"/registration\">\r\n                                Зареєструватись\r\n                        </Link>\r\n                        </div>\r\n                        <div className=\"forgot_password\">\r\n                            <span className=\"forgot_password_text\">\r\n                                Забули пароль? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                            <Link className=\"login_link_reg\" to=\"/forgetPassword\">\r\n                                Відновити пароль\r\n                        </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(SignIn)","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js",["761","762","763","764","765"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js",["766","767","768"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js",["769","770","771","772","773","774","775","776","777","778","779","780","781","782","783"],"import React, { useState, createRef } from 'react'\r\nimport SimpleHeader from '../Header/SimpleHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { Avatar, Button as MuiButton } from '@material-ui/core'\r\nimport { spacing } from '@material-ui/system'\r\nimport styled from 'styled-components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport app from '../../Firebase/firebase'\r\nimport './RegPatientPage.css'\r\nimport default_avatar from '../../assets/default_avatar.png';\r\nimport { withRouter } from \"react-router\";\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\n/* -\r\n----------------------------\r\n|  Style components block  |\r\n----------------------------\r\n */\r\nconst Button = styled(MuiButton)(spacing)\r\n\r\nconst CenteredContent = styled.div`\r\n    text-align: center;\r\n`\r\n\r\n/* -\r\n------------------------\r\n|    Main component    |\r\n------------------------\r\n */\r\n\r\nconst currenciesGenders = [\r\n    {\r\n        value: 'male',\r\n        label: 'чоловік',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'жінка',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'інше',\r\n    },\r\n]\r\n\r\nconst currenciesBlood = [\r\n    {\r\n        value: '4+',\r\n        label: '4+',\r\n    },\r\n    {\r\n        value: '4-',\r\n        label: '4-',\r\n    },\r\n    {\r\n        value: '3+',\r\n        label: '3+',\r\n    },\r\n    {\r\n        value: '3-',\r\n        label: '3-',\r\n    },\r\n    {\r\n        value: '2+',\r\n        label: '2+',\r\n    },\r\n    {\r\n        value: '2-',\r\n        label: '2-',\r\n    },\r\n    {\r\n        value: '1+',\r\n        label: '1+',\r\n    },\r\n    {\r\n        value: '1-',\r\n        label: '1-',\r\n    },\r\n    {\r\n        value: 'None',\r\n        label: 'None',\r\n    },\r\n]\r\n\r\nfunction RegistrationPatient({ history }) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        rootForTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '28ch',\r\n            },\r\n        },\r\n        rootForSubTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        rootForDate: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n            },\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [diagnose, setDiagnose] = useState('')\r\n    const [parents, setParents] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [weight, setWeight] = useState('')\r\n    const [height, setHeight] = useState('')\r\n    const [blood, setBlood] = useState('')\r\n    const [image, _setImage] = useState(null)\r\n    const inputFileRef = createRef(null)\r\n\r\n    // FOR IMAGE\r\n    const cleanup = () => {\r\n        URL.revokeObjectURL(image)\r\n        inputFileRef.current.value = null\r\n    }\r\n\r\n    const setImage = (newImage) => {\r\n        if (image) {\r\n            cleanup()\r\n        }\r\n        _setImage(newImage)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        const newImage = event.target?.files?.[0]\r\n\r\n        if (newImage) {\r\n            setImage(URL.createObjectURL(newImage))\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     */\r\n    const handleClick = (event) => {\r\n        if (image) {\r\n            event.preventDefault()\r\n            setImage(null)\r\n        }\r\n    }\r\n\r\n    //FOR INPUTS\r\n    const db = app.firestore()\r\n\r\n    const nameChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const diagnoseChange = (event) => {\r\n        setDiagnose(event.target.value)\r\n    }\r\n    const parentsChange = (event) => {\r\n        setParents(event.target.value)\r\n    }\r\n    const genderChange = (event) => {\r\n        setGender(event.target.value)\r\n    }\r\n    const ageChange = (event) => {\r\n        setAge(event.target.value)\r\n    }\r\n    const dateChange = (event) => {\r\n        setDate(event.target.value)\r\n        console.log(date)\r\n    }\r\n    const cityChange = (event) => {\r\n        setCity(event.target.value)\r\n    }\r\n    const countryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const weightChange = (event) => {\r\n        setWeight(event.target.value)\r\n    }\r\n    const heightChange = (event) => {\r\n        setHeight(event.target.value)\r\n        console.log(height)\r\n    }\r\n    const bloodChange = (event) => {\r\n        setBlood(event.target.value)\r\n        console.log(blood)\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        if (name == \"\" || diagnose == \"\" || parents == \"\" || gender == \"\" ||\r\n            age == \"\" || date == \"\" || city == \"\" || country == \"\") {\r\n            alert(\"Заповніть всі поля!\")\r\n        } else {\r\n            const res = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .add({\r\n                    Name: name,\r\n                    Diagnos: diagnose,\r\n                    Parents: parents,\r\n                    Gender: gender,\r\n                    Age: age,\r\n                    BirthDate: date,\r\n                    City: city,\r\n                    Country: country,\r\n                    KidWeight: weight,\r\n                    KidHeight: height,\r\n                    BloodType: blood,\r\n                    Image: default_avatar,\r\n                    Supervisor:localStorage.getItem(\"user\"),\r\n                })\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"general_container\">\r\n            <MobileHeader />\r\n            <SimpleHeader />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2\r\n                    style={{\r\n                        color: 'GrayText',\r\n                    }}\r\n                >\r\n                    Реєстрація пацієнта\r\n                </h2>\r\n            </div>\r\n            {/* --------------------------------- */}\r\n            {/* --------  Main  content  -------- */}\r\n            {/* --------------------------------- */}\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"avatar-reg-wrapper\">\r\n                    <CenteredContent>\r\n                        <Avatar\r\n                            alt=\"Avatar\"\r\n                            src={image}\r\n                            variant=\"square\"\r\n                            style={{ marginLeft: \"auto\", width: \"256px\", height: \"256px\", marginLeft: \"auto\" }}\r\n\r\n                        />\r\n                        <input\r\n                            ref={inputFileRef}\r\n                            accept=\"image/*\"\r\n                            hidden\r\n                            id=\"avatar-image-upload\"\r\n                            type=\"file\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                        <label htmlFor=\"avatar-image-upload\">\r\n                            <Button\r\n                                className=\"upload-image-btn\"\r\n                                variant=\"contained\"\r\n                                color=\"grey\"\r\n                                component=\"span\"\r\n                                mb={2}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {image ? 'Очистити' : 'Завантажити'}\r\n                            </Button>\r\n                        </label>\r\n                    </CenteredContent>\r\n                </div>\r\n                <div className=\"column-direction-list\">\r\n                    {/* Start of inputs */}\r\n                    <div\r\n                        className={classes.rootForTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-title\">\r\n                            <div className=\"label-area\">Ім'я та Прізвище:</div>\r\n\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => nameChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={classes.rootForSubTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-subtitle\">\r\n                            <div className=\"patient-subtitle-label\">\r\n                                Діагноз:\r\n                            </div>\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => diagnoseChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"zebra-table\">\r\n                            <div className=\"zebra-table-left-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Батьки:</div>\r\n\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        onChange={(event) =>\r\n                                            parentsChange(event)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Стать:</div>\r\n                                    <TextField\r\n\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={gender}\r\n                                        onChange={(event) =>\r\n                                            genderChange(event)\r\n                                        }\r\n                                    >\r\n                                        {currenciesGenders.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вік:</div>\r\n                                    <TextField\r\n                                        className=\"big_input\"\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) => ageChange(event)}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    років\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Дата народження:\r\n                                    </div>\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        className={classes.textField}\r\n                                        color=\"secondary\"\r\n                                        size=\"medium\"\r\n                                        onChange={(event) => dateChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Місто:</div>\r\n                                    <TextField\r\n                                        onChange={(event) => cityChange(event)}\r\n                                        color=\"secondary\"\r\n\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Країна:</div>\r\n                                    <TextField\r\n                                        onChange={(event) =>\r\n                                            countryChange(event)\r\n                                        }\r\n                                        color=\"secondary\"\r\n\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"zebra-table-right-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вага:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            weightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    кг\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Зріст:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            heightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    см\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Група крові:\r\n                                    </div> */}\r\n                            {/* <TextField\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={blood}\r\n                                        onChange={(event) => bloodChange(event)}\r\n                                    >\r\n                                        {currenciesBlood.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField> */}\r\n                            {/* </div> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/\">\r\n                        <input\r\n                            type=\"submit\"\r\n                            className=\"save_button save_button_add_patient\"\r\n                            onClick={handleSubmit}\r\n                            value=\"Зберегти\"\r\n                        />\r\n                            \r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(RegistrationPatient)\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx",["784","785","786","787","788","789","790","791"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\nimport HeaderHomeTemplate from '../Header/HeaderHomeTemplate'\r\nimport \"./Patients.css\"\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport { useEffect, useState } from 'react'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    let [user, setUser] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setUser(\r\n                        snapshot.docs.filter((u) =>\r\n                            u.id.includes(localStorage.getItem('user'))\r\n                        ).map((doc) => {\r\n                            localStorage.setItem(\"telegramUserName\", (doc.data().TelegramUserID))\r\n                        })\r\n                    )\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n  localStorage.setItem(\"templateType\",\"private\")\r\nlocalStorage.setItem(\"homeType\",\"home\")\r\n\r\n    patients = patients.filter((protocol) =>\r\n        protocol.Name.includes(inputSearch)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <MobileHeader />\r\n                <HeaderHomeTemplate/>\r\n            </>\r\n            <div className=\"info_title\">\r\n                <div className=\"inter_fing\">\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '45px',\r\n                            fontSize: '25px',\r\n                            color: '#6F6F6F',\r\n                            fontWeight: '700'\r\n                        }}\r\n                    >\r\n                        Пацієнти\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '40px',\r\n                            marginBottom: '20px',\r\n\r\n                            fontSize: '20px',\r\n                            color: \"#48535f\"\r\n                        }}\r\n                    >\r\n                        Кількість: {patients.length}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Link\r\n                to=\"/patient_registration\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '11.5rem',\r\n                    right: '10rem',\r\n                    color: 'grey',\r\n                }}\r\n                className=\"add_patient_button\"\r\n            >\r\n                <BranchingItem />\r\n            </Link>\r\n            <PatientItem patients={patients} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\nfunction BranchingItem() {\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return (\r\n            <>\r\n                <BsPlusCircle size={50} />\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('proffesion') !== 'Supervisors') {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx",["792"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx",["793","794","795"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx",["796","797","798","799"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx",["800","801"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/Item'\r\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\r\nimport './ButtonsTemplate.css'\r\n\r\nfunction ProgramTemplate({ history }) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                    Створити програму на основі шаблону серед наведених нижче АБО\r\n                </div>\r\n                <Link className=\"template_link btn-background-slide\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx",["802","803"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\HomeTemplate.jsx",["804","805"],"import HeaderHomeTemplate from '../Header/HeaderHomeTemplate'\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport HomeProgramTemplate from './TemplatePages/HomeProgramTemplate'\r\nimport HomeProgramTemplatePublic from './TemplatePages/HomeProgramTemplatePublic'\r\nfunction HomeTemplate(params) {\r\n \r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\nconsole.log(\"БЛЯЯЯЯЯ\"+protocols.length)\r\n// localStorage.setItem(\"newTemplateCount\",protocols.length)\r\n    return(<>\r\n    <HeaderHomeTemplate/>\r\n    {/* <ArrowHeader /> */}\r\n   <RenderTemplateType protocols={protocols} type={localStorage.getItem(\"templateType\")}/>\r\n    </>)\r\n}\r\n\r\nexport default HomeTemplate\r\nfunction RenderTemplateType({protocols,type}) {\r\nif(type==\"private\"){\r\n    \r\n    return(<>\r\n     <HomeProgramTemplate countProto={protocols.length}/>\r\n    </>)\r\n}    \r\nif(type==\"public\"){\r\n    return(<><HomeProgramTemplatePublic countProto={protocols.length}/></>)\r\n}\r\n\r\n}","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx",["806","807","808","809","810"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItem from './ProtocolItem'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeader from './ArrowHeader'\r\nimport Popup from './Popup'\r\nimport { withRouter } from 'react-router'\r\nfunction ProtocolListTemplate({history}) {\r\n    let test = []\r\n    localStorage.setItem(\"homeType\",\"createTemplate\")\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\r\n    function dragStartHandler(event, protocol) {\r\n        console.log(\"DRAG\" + protocol.ProtocolId)\r\n        setcurrrentProtocoll(protocol)\r\n\r\n    }\r\n    function dragEndHandler(event, protocol) {\r\n        event.target.style.border = 'none'\r\n    }\r\n    function dragOverHandler(event) {\r\n        event.preventDefault()\r\n        event.target.style.border = 'solid 3px #c9c9c9'\r\n    }\r\n\r\n    function dropHandler(event, protocol) {\r\n\r\n\r\n        const db = app.firestore()\r\n        event.preventDefault()\r\n        event.target.style.border = 'none'\r\n        console.log(\"DROP\" + protocol.ProtocolId)\r\n        setProtocols(protocols.map(proto => {\r\n            if (proto.ProtocolId == protocol.ProtocolId) {\r\n                db .collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('CreateTemplate').doc(currrentProtocoll.id)\r\n                    .update({ ProtocolId: protocol.ProtocolId })\r\n                    db .collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('CreateTemplate').doc(protocol.id)\r\n                    .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                }\r\n          \r\n\r\n            return proto\r\n        }\r\n\r\n        ))\r\n    }\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <HeaderHomeTemplate/>\r\n    <ArrowHeader />\r\n            <button class=\"create_template_button btn-background-slide\" onClick={togglePopup}>Зберегти шаблон</button>\r\n           \r\n\r\n            {isOpen && <Popup protocols={protocols} \r\n                content={<>\r\n                    <b className=\"text_modul\">Будь ласка, оберіть тип даного шаблону:</b>\r\n                    <div className=\"button_modul\">\r\n\r\n                    </div>\r\n                </>}\r\n                handleClose={togglePopup}\r\n            />}\r\n            <div className=\"create_element\" >\r\n                {protocolsNumber.map((protocol) => (\r\n                    <>\r\n                        <div draggable='true'\r\n                            onDragStart={(event) => { dragStartHandler(event, protocols[protocol - 1]) }}\r\n                            onDragLeave={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragEnd={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragOver={(event) => { dragOverHandler(event) }}\r\n                            onDrop={(event) => { dropHandler(event, protocols[protocol - 1]) }}\r\n                        >\r\n                            <ProtocolItem\r\n                            protocols={protocols}\r\n\r\n                                number={protocol}\r\n                                protocolId={protocols[protocol - 1].id}\r\n                                protocolName={protocols[protocol - 1].ProtocolId}\r\n                                sphereOfDevelopment={protocols[protocol - 1].SphereOfDevelopment}\r\n                                length={protocols.length}\r\n                                skill={protocols[protocol - 1].Skill}\r\n                                statusCopied={protocols[protocol - 1].StatusCopied}\r\n                                isActive={protocols[protocol - 1].IsActive}\r\n                                interval={protocols[protocol - 1].Interval}\r\n                                correctionProcedureStep1={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep1\r\n                                }\r\n                                correctionProcedureStep2={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep2\r\n                                }\r\n                                correctionProcedureStep3={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep3\r\n                                }\r\n                                criterionIncrease={protocols[protocol - 1].CriterionIncrease}\r\n                                desirableReaction={protocols[protocol - 1].DesirableReaction}\r\n                                method={protocols[protocol - 1].Method}\r\n                                methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                                reductionСriterion={protocols[protocol - 1].ReductionСriterion}\r\n                                stepDescription={protocols[protocol - 1].StepDescription}\r\n                                CriteriongenGenerSkill={protocols[protocol - 1].CriteriongenGenerSkill}\r\n                                instruction1={protocols[protocol - 1].Instructions1}\r\n                                instruction2={protocols[protocol - 1].Instructions2}\r\n                                instruction3={protocols[protocol - 1].Instructions3}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ))}\r\n                {/* </ReactSortable> */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('CreateTemplate')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: \"\",\r\n            Interval: \"\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\n\r\nexport default withRouter(ProtocolListTemplate)","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx",["811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836"],"import { TextInput } from 'react-native-paper'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeader from '../PageComponent/ArrowHeaderSimple'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditableTemplate() {\r\n\r\n    localStorage.setItem(\"templateType\", \"editProgram\")\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = \r\n        db .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = \r\n        db .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n  \r\n\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeader />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                                            <TextInput\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={protocol.CriteriongenGenerSkill}\r\n                                                style={{ fontSize: '20px' }}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: { background: '#fcfcfc' },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { backgroundColor: 'white' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '-1rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"false\">\r\n                                        </option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                            }}\r\n                                        >\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_button\"\r\n                                            >\r\n                                                <h1\r\n                                                    style={{\r\n                                                        marginTop: '5px',\r\n                                                        marginBottom: '5px',\r\n                                                        textAlign: 'center',\r\n                                                        width: '22px',\r\n                                                        height: '20px',\r\n                                                        color: '#4d4d4d',\r\n                                                        fontSize: '20px',\r\n                                                    }}\r\n                                                >\r\n                                                    +\r\n                                                </h1>\r\n                                            </button>\r\n                                            <div className=\"transparent_input\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) =>\r\n                                                        setStimulInput(\r\n                                                            event.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Додати стимул....\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background='white'\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'white' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE' }}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: \"#EEEEEE\" }}>\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n             \r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions1: instructionInput })\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions2: instructionInput })\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions3: instructionInput })\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({ Name: stimulInput })\r\n    } else { alert(\"Неможливо надіслати пустий стимул\") }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Skill: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Method: params })\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ DesirableReaction: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ ReductionСriterion: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriterionIncrease: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ StepDescription: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep3: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep2: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep1: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Interval: interval })\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ MethodTakingHint: method })\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriteriongenGenerSkill: generSkill })\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx",["837","838","839","840","841","842","843","844","845","846","847"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\n\r\nimport ListMoreInfoPrivate from \"./ListMoreInfoPrivate\";\r\nimport ListMoreInfoPublic from \"./ListMoreInfoPublic\";\r\nexport default function ListMoreInfoTemplate() {\r\n    let test = []\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    if (localStorage.getItem(\"templateType\") == \"private\") {\r\n        return (<>\r\n<ListMoreInfoPrivate/>\r\n                </>)\r\n    }\r\n    if (localStorage.getItem(\"templateType\") == \"public\") {\r\n        return (<>\r\n        <ListMoreInfoPublic/>\r\n                </>)\r\n    }\r\n\r\n}","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx",["848","849","850","851","852","853","854","855","856","857"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport ProgramTemplateViewPrivate from \"./ProgramTemplateViewPrivate\";\r\nimport ProgramTemplateViewPublic from \"./ProgramTemplateViewPublic\";\r\nimport ProgramEditableTemplate from \"./ProgramEditableTemplate\";\r\n\r\n\r\n// MAIN COMPONENT\r\nexport default function ProgramTemplateView() {\r\n    if (localStorage.getItem(\"templateType\") == \"private\") {\r\n        return (<>\r\n            <ProgramEditableTemplate />\r\n        </>)\r\n    }\r\n    if (localStorage.getItem(\"templateType\") == \"public\") {\r\n        return (<>\r\n            <ProgramTemplateViewPublic />\r\n        </>)\r\n    }\r\n\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js",["858","859","860"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js",["861","862","863","864"],"import React, { useState } from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport { withRouter } from 'react-router'\r\nimport DataPicker from './DataPicker'\r\nimport NextButtonComponent from './NextButtonComponent'\r\nimport BackButtonComponent from '../Login/BackButtonComponent'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SignUpForm1() {\r\n    localStorage.setItem(\"step\",2)\r\n    const [firstName, setFirstName] = useState('')\r\n    localStorage.setItem('Name', firstName)\r\n    console.log(firstName)\r\n    const [lastName, setLastName] = useState('')\r\n    localStorage.setItem('Surname', lastName)\r\n    console.log(lastName)\r\n    const [sex, setSex] = useState('')\r\n    localStorage.setItem('Gender', sex)\r\n    console.log(sex)\r\n\r\n    \r\n    const [formData,setFormData] = useState({\r\n        isAgree : false,\r\n        gender : \"\"\r\n    })\r\n\r\n    const handleChanage = event =>{\r\n        const target = event.target\r\n        const name = target.name\r\n        const value = target.value\r\n        setFormData({\r\n            ...formData,\r\n            [name] : value\r\n        })\r\n        console.log(target.value)\r\n    }\r\n\r\n \r\n    return (\r\n        <div className=\"first_sign\">\r\n            <LoginNavigation />\r\n            <form className=\"form-itself\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n                <div className=\"input_text_name\">\r\n                    <input\r\n                        onChange={(event) => setFirstName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Ім'я\"\r\n                    />\r\n                </div>\r\n                <div className=\"input_text_name\">\r\n                    <input\r\n                        onChange={(event) => setLastName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Прізвище\"\r\n                    />\r\n                </div>\r\n                <div className=\"birthday_date\">\r\n                    Вкажіть вашу дату народження:\r\n                </div>\r\n                <div className=\"birthday_date_picker\">\r\n                    <DataPicker />\r\n                </div>\r\n                <p className=\"gender\">Стать</p>\r\n                <div className=\"gender_container\">\r\n                    <div className=\"group\">\r\n                    <input\r\n                            onClick={handleChanage} checked={formData.gender==\"male\"}\r\n                            className=\"gender_checks\"\r\n                            name=\"gender\"\r\n                            type=\"checkbox\"\r\n                            id=\"xd\"\r\n                            value=\"male\"\r\n                        />\r\n                        <label for=\"xd\">Чоловіча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <input\r\n                            onClick={handleChanage} checked={formData.gender==\"female\"}\r\n                            type=\"checkbox\"\r\n                            name=\"gender\"\r\n                            id=\"figma\"\r\n                            className=\"gender_checks\"\r\n                            value=\"female\"\r\n                        />\r\n                        <label for=\"figma\">Жіноча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <input\r\n                            onClick={handleChanage} checked={formData.gender==\"other\"}\r\n                            type=\"checkbox\"\r\n                            name=\"gender\"\r\n                            id=\"sketch\"\r\n                            className=\"gender_checks\"\r\n                            value=\"other\"\r\n                        />\r\n                        <label for=\"sketch\">Інше</label>\r\n                    </div>\r\n                </div>\r\n               \r\n\r\n                </form>\r\n\r\n            <Link\r\n                to=\"/registration/signup3\"\r\n            >\r\n                <NextButtonComponent/>\r\n\r\n            </Link>\r\n\r\n            <Link\r\n                to=\"/registration\"\r\n            >\r\n             <BackButtonComponent />\r\n             </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm1)\r\n\r\n// function addFirstInputRegistr(firstName,lastName,sex) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Name: firstName, Surname: lastName, Gender: sex})\r\n// }\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js",["865","866","867"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './SignUpForm2.css'\r\nimport NextButtonComponent from './NextButtonComponent'\r\nimport BackButtonComponent from '../Login/BackButtonComponent'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SignUpForm2() {\r\n    \r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const [country, setCountry] = useState('')\r\n    console.log(country)\r\n    localStorage.setItem('Country', country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    localStorage.setItem(\"step\",3)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n\r\n            <form className=\"form-second-personal-data\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n\r\n                <div className=\"custom_image_input\">\r\n                    <label for=\"image_input\">\r\n                        <img\r\n                            src={Upload}\r\n                            height=\"25\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                marginLeft: '25px',\r\n                                marginRight: '15px',\r\n                                marginTop: '9px',\r\n                                color: '#EEEEEE',\r\n                            }}\r\n                        />\r\n                        <span className=\"download_image\" id=\"file-chosen\">\r\n                            Завантажити фото профілю\r\n                        </span>\r\n                        <hr />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image_input\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                </div>\r\n                {selectedFile && <img src={preview} className=\"input_image\" />}\r\n                <div id=\"div1\" className=\"image_container_simulator\">\r\n                    Фото\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCountry(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Країна\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCity(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Місто\"\r\n                    />\r\n                </div>\r\n               \r\n\r\n            </form>\r\n\r\n            <Link\r\n                to=\"/registration/signup4\"\r\n            >\r\n                <NextButtonComponent/>\r\n\r\n            </Link>\r\n\r\n            <Link\r\n                to=\"/registration/signup2\"\r\n            >\r\n            <BackButtonComponent />\r\n\r\n            </Link>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm2\r\n// function addSecondInputRegistr(photo, country, city) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Photo: photo, Country: country, City: city})\r\n// }\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js",["868"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport app from '../../Firebase/firebase'\r\nimport SwitchSelector from 'react-switch-selector'\r\nimport './UserRoleChoosing.css'\r\nimport NextButtonComponent from '../Login/NextButtonComponent'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SignUpForm3() {\r\n    const options = [\r\n        {\r\n            label: 'Супервізор',\r\n            value: {\r\n                role: 'Supervisors',\r\n            },\r\n        },\r\n        {\r\n            label: 'Терапіст',\r\n            value: {\r\n                role: 'Therapists',\r\n            },\r\n        },\r\n    ]\r\n\r\n    const onChange = (newValue) => {\r\n        localStorage.setItem('proffesion', newValue.role)\r\n        console.log(newValue.role)\r\n    }\r\n    localStorage.setItem(\"step\", 1)\r\n    localStorage.setItem(\"proffesion\", \"Supervisors\")\r\n    return (\r\n        <div>\r\n            <LoginNavigation colorBackground={\"white\"} colorText={'#48535F'}/>\r\n            <div className=\"before_register\">\r\n                Передусім оберіть вашу роль як користувача:\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: 350,\r\n                    height: 55,\r\n                    paddingTop: '70px',\r\n                    fontSize: '28px',\r\n                    textAlign: 'center',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                }}\r\n            >\r\n                <SwitchSelector\r\n                    onChange={onChange}\r\n                    options={options}\r\n                    backgroundColor={'#48535F'}\r\n                    fontColor={'#FFFFFF'}\r\n                    selectedFontColor={'#48535F'}\r\n                    selectionIndicatorMargin=\"4\"\r\n                    wrapperBorderRadius=\"8\"\r\n                    optionBorderRadius=\"7\"\r\n                    fontSize=\"15px\"\r\n                    selectedBackgroundColor=\"#FFFFFF\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"have_acc\">\r\n                <span className=\"still_no_acc_text\">\r\n                    Вже маєте акаунт? &nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                <div className=\"login_link_reg\">\r\n                    <a href=\"/\" className=\"login_please\">\r\n                        Залогуватись\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Link\r\n                to=\"/registration/signup2\"\r\n            >\r\n                <NextButtonComponent/>\r\n\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm3\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js",["869"],"import React, { useCallback, useState } from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport './SignUpForm4.css'\r\nimport { withRouter } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport BackButtonComponent from '../Login/BackButtonComponent'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction SignUpForm4({ history }) {\r\n    localStorage.setItem(\"step\", 4)\r\n    const handleSignUp = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const {\r\n                email,\r\n                password,\r\n                passwordCheck,\r\n                phone,\r\n            } = event.target.elements\r\n            try {\r\n                if (password.value === passwordCheck.value) {\r\n                    await app\r\n                        .auth()\r\n                        .createUserWithEmailAndPassword(\r\n                            email.value,\r\n                            password.value\r\n                        )\r\n\r\n                    await app.auth().currentUser.sendEmailVerification()\r\n\r\n                    addInputRegistr()\r\n                    history.push('/')\r\n                } else {\r\n                    alert('Будь ласка, перевірте ваш пароль')\r\n                }\r\n            } catch (error) {\r\n                alert(error)\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n\r\n    const [phone, setPhoneNumber] = useState('')\r\n    console.log(phone)\r\n    localStorage.setItem('PhoneNumber', phone)\r\n\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n            <form className=\"forth_form\" onSubmit={handleSignUp}>\r\n                <div className=\"contact_text\">Контакти</div>\r\n                <div className=\"inputE\">\r\n                    <input\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputP\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputCp\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"passwordCheck\"\r\n                        placeholder=\"Підтвердження паролю\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputPh\">\r\n                    <input\r\n                        onChange={(event) => setPhoneNumber(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Номер телефону\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    class=\"slide-hover-left-4\"\r\n                    type=\"submit\"\r\n                    value=\"Зареєструватись\"\r\n                />\r\n            </form>\r\n            <Link\r\n                to=\"/registration/signup3\"\r\n            >\r\n                <BackButtonComponent />\r\n\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm4)\r\nfunction addInputRegistr() {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('userEmail'))\r\n        .set({\r\n            Name: localStorage.getItem('Name'),\r\n            Surname: localStorage.getItem('Surname'),\r\n            Birthday: localStorage.getItem('Birthday'),\r\n            Gender: localStorage.getItem('Gender'),\r\n            Country: localStorage.getItem('Country'),\r\n            City: localStorage.getItem('City'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\r\n            TelegramUserID: '',\r\n        })\r\n        db.collection(\"Users\")\r\n        .doc()\r\n        .set({\r\n            Email:localStorage.getItem('userEmail'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n        })\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js",["870","871"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js",["872","873"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js",["874","875","876","877"],"import React, { useState } from 'react'\r\nimport './ProgramHeader.css'\r\nimport './Header.css'\r\nimport Logo from '../../assets/Logo.svg';\r\nimport app from '../../Firebase/firebase'\r\nimport PatientTemplateSwitch from './PatientTemplateSwitch';\r\nfunction signOut() {\r\n    localStorage.setItem(\"user\", '@gmail')\r\n    app.auth().signOut()\r\n\r\n}\r\nfunction Header() {\r\n    let someText = `&#8203`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div style={{ width: '93.2%', alignSelf: \"center\" }}>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\"\r\n                    }}>\r\n                        <img\r\n                            src={Logo}\r\n                            onClick={() => signOut()}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                            className = \"logo_hover\"\r\n\r\n                        />\r\n                            <PatientTemplateSwitch/>\r\n\r\n\r\n                        <input className=\"search\" type=\"text\" name=\"search\" placeholder=\" ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎ Пошук..\" />\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: \"center\",\r\n\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js",["878","879"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js",["880","881","882","883","884","885"],"import React, { useEffect, useState } from 'react'\r\nimport { Item, Name, ButtonItem, Amount, Patient } from './PatientItem.styled'\r\nimport { Link } from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nfunction PatientItem({ patients }) {\r\n    console.log(patients)\r\n    return (\r\n        <div className=\"all_inter\">\r\n            {patients.map((patient) => (\r\n                <Item className=\"hover_patient\" style={{ height: '26rem' }}>\r\n                   <Link to=\"/patient\"onClick={() =>\r\n                            localStorage.setItem('child', patient.id)}>\r\n                    <img\r\n                        src={Kid}\r\n                        width=\"250\"\r\n                        height=\"240\"\r\n                        style={{ marginLeft: '0.8rem', marginTop: '0.9rem' }}\r\n                    />\r\n</Link>\r\n                    <Name style={{ marginLeft: \"-3.8rem\", textAlign: \"center\", height: '4rem' }}>{patient.Name}</Name>\r\n\r\n                        <Link to=\"/patient\" className=\"viewmore_patient button_item\" onClick={() =>\r\n                            localStorage.setItem('child', patient.id)}>\r\n                            Переглянути\r\n                        </Link>\r\n                </Item>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx",["886","887","888"],"import { Link } from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport React from 'react'\r\nimport Logo from '../../assets/Logo.svg'\r\n\r\nimport PatientTemplateSwitch from \"./PatientTemplateSwitch\";\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction HeaderHomeTemplate(params) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div style={{ width: '93.2%', alignSelf: \"center\" }}>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\"\r\n                    }}>\r\n                        <img\r\n                            src={Logo}\r\n                            onClick={() => signOut()}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                        />\r\n\r\n                        <PatientTemplateSwitch />\r\n\r\n\r\n                        <input className=\"search\" type=\"text\" name=\"search\" placeholder=\"‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎ ‎Пошук..\" />\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: \"center\",\r\n\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default HeaderHomeTemplate","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx",["889","890","891","892"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx",["893","894","895","896","897","898","899","900","901","902"],"import './ProtocolList.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItem from './PageComponent/ProtocolItem'\r\nimport Header from '../Header/Header'\r\nimport ArrowHeader from './PageComponent/ArrowHeader'\r\nimport Popup from '../ModalWindow/Popup'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\n\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n    const [protocolsToTerapists, setProtocolsToTerapists] = useState([])\r\n    let listTest = JSON.parse(localStorage.getItem('therapistID'))\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocolsToTerapists(\r\n                        snapshot.docs.map((doc) => {\r\n                            console.log('UPD', doc.data())\r\n                            listTest.map((terapist) => {\r\n\r\n\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .collection('Protocols').doc(doc.id).set(doc.data())\r\n\r\n\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .set(JSON.parse(localStorage.getItem('childData')))\r\n\r\n                            }\r\n                            )\r\n                        })\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [stimulusToTerapists, setStimulusToTerapists] = useState([])\r\n\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n\r\n                if (snapshot.size) {\r\n\r\n                    snapshot.docs.map((doc) => {\r\n                        db\r\n                            .collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols').doc(doc.id).collection(\"Stimulus\")\r\n                            .onSnapshot((snapshot) => {\r\n                                if (snapshot.size) {\r\n\r\n                                    setStimulusToTerapists(snapshot.docs.map((docStim) => {\r\n                                        listTest.map((terapist) => {\r\n                                            db.collection('Therapists')\r\n                                                .doc(terapist)\r\n                                                .collection('Patient')\r\n                                                .doc(localStorage.getItem('child'))\r\n                                                .collection('Protocols').doc(doc.id)\r\n                                                .collection(\"Stimulus\").doc(docStim.id).set(docStim.data())\r\n                                        }\r\n                                        )\r\n                                    }))\r\n                                } else {\r\n                                    console.log('Сука1')\r\n                                }\r\n                            })\r\n                    })\r\n\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const db = app.firestore()\r\n    //     var test=1\r\n    //     const unsubscribe = db\r\n    //         .collection(localStorage.getItem(\"proffesion\"))\r\n    //         .doc(localStorage.getItem('user'))\r\n    //         .collection('Patient')\r\n    //         .doc(localStorage.getItem('child'))\r\n    //         .collection('Protocols')\r\n    //         .onSnapshot((snapshot) => {\r\n    //             if (snapshot.size) {\r\n    //                 setProtocols(\r\n    //                     snapshot.docs.sort((a, b) => +a.data().ProtocolId - +b.data().ProtocolId).map((doc) => {\r\n    //                         db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                         .doc(localStorage.getItem('user'))\r\n    //                         .collection('Patient')\r\n    //                         .doc(localStorage.getItem('child'))\r\n    //                         .collection('Protocols').doc(doc.data().id)\r\n    //                         .update({ ProtocolId: test })\r\n    //                         test+=1\r\n    //                         console.log(\"СУКАААААААААААА_1\"+ test)\r\n    //                     })\r\n                        \r\n    //                 )\r\n    //                 console.log('Сука')\r\n    //                 // for (let i = 0; i < protocols.length; i++) {\r\n    //                 //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n    //                 //     db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                 //         .doc(localStorage.getItem('user'))\r\n    //                 //         .collection('Patient')\r\n    //                 //         .doc(localStorage.getItem('child'))\r\n    //                 //         .collection('Protocols').doc(protocols[i].id)\r\n    //                 //         .update({ ProtocolId: i + 1 })\r\n                \r\n    //                 // }\r\n\r\n    //             } else {\r\n    //                 console.log('Сука1')\r\n    //             }\r\n    //         })\r\n    //     return () => {\r\n    //         unsubscribe()\r\n    //     }\r\n    // }, [])\r\n    \r\n\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\r\n    function dragStartHandler(event, protocol) {\r\n        console.log(\"DRAG\" + protocol.ProtocolId)\r\n        setcurrrentProtocoll(protocol)\r\n\r\n    }\r\n    function dragEndHandler(event, protocol) {\r\n        event.target.style.border = 'none'\r\n    }\r\n    function dragOverHandler(event) {\r\n        event.preventDefault()\r\n        event.target.style.border = 'solid 3px #c9c9c9'\r\n    }\r\n\r\n    function dropHandler(event, protocol) {\r\n\r\n\r\n        const db = app.firestore()\r\n        event.preventDefault()\r\n        event.target.style.border = 'none'\r\n        console.log(\"DROP\" + protocol.ProtocolId)\r\n        setProtocols(protocols.map(proto => {\r\n\r\n            // if (proto.ProtocolId == protocol.ProtocolId) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //     .doc(localStorage.getItem('user'))\r\n            //     .collection('Patient')\r\n            //     .doc(localStorage.getItem('child'))\r\n            //     .collection('Protocols').doc(protocol.id)\r\n            //     .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //                 })\r\n            //     }\r\n\r\n            if (proto.ProtocolId == protocol.ProtocolId) {\r\n                db.collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('Patient')\r\n                    .doc(localStorage.getItem('child'))\r\n                    .collection('Protocols').doc(currrentProtocoll.id)\r\n                    .update({ ProtocolId: protocol.ProtocolId })\r\n                    db.collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('Patient')\r\n                    .doc(localStorage.getItem('child'))\r\n                    .collection('Protocols').doc(protocol.id)\r\n                    .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId>protocol.ProtocolId ) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId})\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId<protocol.ProtocolId ) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId+1})\r\n            //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n            //     })\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId>protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==1) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocol.id)\r\n            //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n                // })\r\n\r\n            // }\r\n            // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId<protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==-1) {\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(currrentProtocoll.id)\r\n            //         .update({ ProtocolId: protocol.ProtocolId })\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocol.id)\r\n            //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n                // })\r\n\r\n           \r\n            // if (visited == true) {\r\n            //     protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n            //     for (let i = startVar; i < protocols.length+1 ; i++) {\r\n            //         db.collection(localStorage.getItem(\"proffesion\"))\r\n            //             .doc(localStorage.getItem('user'))\r\n            //             .collection('Patient')\r\n            //             .doc(localStorage.getItem('child'))\r\n            //             .collection('Protocols').doc(protocols[i-1])\r\n            //             .update({ ProtocolId: i })\r\n            //     }\r\n            // }\r\n\r\n\r\n            return proto\r\n        }\r\n\r\n        ))\r\n\r\n        // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n           \r\n        // })\r\n    }\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <ArrowHeader />\r\n            <button class=\"create_template_button btn-background-slide\" onClick={togglePopup}>Зберегти як шаблон</button>\r\n            <div\r\n                onClick={() => addProto(protocols.length)}\r\n                className=\"add-proto-mobile\"\r\n            >\r\n                <BsPlusCircle />\r\n            </div>\r\n            {isOpen && <Popup protocols={protocols} child={child[0]}\r\n                content={<>\r\n                    <b className=\"text_modul\">Будь ласка, оберіть тип даного шаблону:</b>\r\n                    <div className=\"button_modul\">\r\n\r\n                    </div>\r\n                </>}\r\n                handleClose={togglePopup}\r\n            />}\r\n            <div className=\"create_element\" >\r\n                {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                {protocolsNumber.map((protocol) => (\r\n                    <>\r\n                        <div draggable='true'\r\n                            onDragStart={(event) => { dragStartHandler(event, protocols[protocol - 1]) }}\r\n                            onDragLeave={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragEnd={(event) => { dragEndHandler(event, protocols[protocol - 1]) }}\r\n                            onDragOver={(event) => { dragOverHandler(event) }}\r\n                            onDrop={(event) => { dropHandler(event, protocols[protocol - 1]) }}\r\n                        >\r\n                            <ProtocolItem\r\n                            protocols={protocols}\r\n\r\n                                number={protocol}\r\n                                protocolId={protocols[protocol - 1].id}\r\n                                protocolName={protocols[protocol - 1].ProtocolId}\r\n                                sphereOfDevelopment={protocols[protocol - 1].SphereOfDevelopment}\r\n                                length={protocols.length}\r\n                                skill={protocols[protocol - 1].Skill}\r\n                                statusCopied={protocols[protocol - 1].StatusCopied}\r\n                                isActive={protocols[protocol - 1].IsActive}\r\n                                interval={protocols[protocol - 1].Interval}\r\n                                correctionProcedureStep1={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep1\r\n                                }\r\n                                correctionProcedureStep2={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep2\r\n                                }\r\n                                correctionProcedureStep3={\r\n                                    protocols[protocol - 1].CorrectionProcedureStep3\r\n                                }\r\n                                criterionIncrease={protocols[protocol - 1].CriterionIncrease}\r\n                                desirableReaction={protocols[protocol - 1].DesirableReaction}\r\n                                method={protocols[protocol - 1].Method}\r\n                                methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                                reductionСriterion={protocols[protocol - 1].ReductionСriterion}\r\n                                stepDescription={protocols[protocol - 1].StepDescription}\r\n                                CriteriongenGenerSkill={protocols[protocol - 1].CriteriongenGenerSkill}\r\n                                instruction1={protocols[protocol - 1].Instructions1}\r\n                                instruction2={protocols[protocol - 1].Instructions2}\r\n                                instruction3={protocols[protocol - 1].Instructions3}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ))}\r\n                {/* </ReactSortable> */}\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: \"\",\r\n            Interval: \"\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx",["903","904","905","906","907"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx",["908","909","910","911","912","913","914"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\n\r\nexport default function PatientInfoUser() {\r\n    let [patients, setPatients] = useState([])\r\n\r\n    let [therapistInput, setTherapistInput] = useState('')\r\n\r\n    let test = []\r\n\r\n    const [terapists, setTerapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTerapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    terapists.map((terapist) => test.push(terapist.id))\r\n    console.log(test)\r\n    localStorage.setItem('therapistID', JSON.stringify(test))\r\n\r\n    const [therapists, setTherapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child')).update({Supervisor:localStorage.getItem(\"user\")})\r\n                if (snapshot.size) {\r\n                    setTherapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Supervisors')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    let path = '/protocol-list'\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    if (protocols.length == 0) {\r\n        path = '/program-template'\r\n    } else {\r\n        path = '/protocol-list'\r\n    }\r\n    localStorage.setItem('childData', JSON.stringify(patients[0]))\r\n    return (\r\n        <div >\r\n            <MobileHeader />\r\n            <Header />\r\n            <ul>\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{ color: '#6F6F6F' }}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                            <img\r\n                                src={Kid}\r\n                                height=\"200\"\r\n                                className=\"mobile_child_image\"\r\n                            />\r\n                            <img\r\n                                src={Kid}\r\n                                height=\"270\"\r\n                                className=\"child_image\"\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                {/* <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div> */}\r\n                                {/* </div> */}\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <div>Терапевти:</div>\r\n                                    <div className=\"therapist_info\">\r\n                                        {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        className=\"therapist_container\"\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '0px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"icon_place_therapist\">\r\n                                                            <img\r\n                                                                className=\"icon_patient\"\r\n                                                                onClick={() =>\r\n                                                                    DeleteTherapist(\r\n                                                                        therapist.id\r\n                                                                    )\r\n                                                                }\r\n                                                                src={Delete}\r\n                                                                width=\"8px\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"add_therapist_container\"\r\n\r\n                                    >\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                addTherapist(therapistInput)\r\n                                            }\r\n                                            className=\"add_therapist_button\"\r\n                                        >\r\n                                            +\r\n                                        </button>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={(event) =>\r\n                                                setTherapistInput(\r\n                                                    event.target.value\r\n                                                )\r\n                                            }\r\n                                            name=\"name\"\r\n                                            placeholder=\"Додати за поштою....\"\r\n                                            className=\"add_therapist_input\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={path}\r\n                                onClick={() =>\r\n                                    setData()\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction setData() {\r\n    localStorage.setItem(\"templateType\", \"private\")\r\n    localStorage.setItem('program', 'ok')\r\n}\r\n\r\nfunction DeleteTherapist(therapistId) {\r\n    console.log('хуй')\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Therapists')\r\n        .doc(therapistId)\r\n        .delete()\r\n    db.collection('Therapists')\r\n        .doc(therapistId)\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .delete()\r\n    alert(`Видалено терапіста за електронною поштою ${therapistId}`)\r\n\r\n}\r\n\r\nfunction addTherapist(therapistInput) {\r\n    const db = app.firestore()\r\n    if (therapistInput != '') {\r\n        db.collection('Therapists')\r\n            .doc(therapistInput)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    console.log('zaebis pashe')\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: doc.data().Name })\r\n                    alert(`Терапіст ${doc.data().Name} доданий за електронною поштою ${therapistInput}`)\r\n                    fetch(`https://john-steck-api.herokuapp.com/email/reg_child/${localStorage.getItem(\"Name\") + \" \" + localStorage.getItem(\"Surname\")}/${localStorage.getItem(\"childName\")}/${therapistInput}`).then((data) => {\r\n\r\n                    })\r\n                } else {\r\n                    alert(`Відправлено лист на реєстрацію на ${therapistInput}`)\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: 'Очікуємо реєстрації' })\r\n\r\n\r\n                    db.collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: 'Очікуємо реєстрації' })\r\n                    fetch(`https://john-steck-api.herokuapp.com/email/reg/${localStorage.getItem(\"Name\") + \" \" + localStorage.getItem(\"Surname\")}/${localStorage.getItem(\"childName\")}/${therapistInput}`).then((data) => {\r\n\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    } else {\r\n        alert('Спочатку вкажіть пошту терапевта')\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx",["915","916","917"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx",["918","919","920","921","922","923","924","925","926","927","928","929"],"import Duplicate from '../../../assets/duplicate_task.svg'\r\nimport Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport { Link } from 'react-router-dom'\r\nimport EditIcon from '../../../assets/edit_new.svg'\r\nimport SecondModal from '../../ModalWindow/SecondModal'\r\nexport default function ProtocolItem({protocols,\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill,instruction1,instruction2,instruction3\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{ backgroundColor: colorItem, marginLeft: '5rem' }}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number}{statusCopied}.\r\n                     {sphereOfDevelopment}.{skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    \r\n                    <Link\r\n                \r\n                            onClick={() =>\r\n                                {setData(protocolId,number)}\r\n                            \r\n                        }\r\n                        to=\"/program-template-edit\"\r\n                    >\r\n            \r\n                    <img\r\n                        title=\"Редагувати\"\r\n                        className=\"icon edit_icon\"\r\n                        src={EditIcon}\r\n                    />\r\n                    </Link>\r\n                    \r\n\r\n                    <img\r\n                        title=\"Дублікат\"\r\n                        className=\"icon\"\r\n                        onClick={() =>\r\n                            CreateDuplicateProtocol(\r\n                                protocolId,\r\n                                +length + 1,\r\n                                sphereOfDevelopment,\r\n                                skill,\r\n                                protocolName,\r\n                                interval,\r\n                                correctionProcedureStep1,\r\n                                correctionProcedureStep2,\r\n                                correctionProcedureStep3,\r\n                                criterionIncrease,\r\n                                desirableReaction,\r\n                                method,\r\n                                methodTakingHint,\r\n                                reductionСriterion,\r\n                                stepDescription, CriteriongenGenerSkill,instruction1,instruction2,instruction3\r\n                            )\r\n                        }\r\n                        src={Duplicate}\r\n                    />\r\n                    <CheckIsActive  className=\"icon\" isActive={isActive} protocolId={protocolId} />\r\n                    {isOpen && (\r\n                        <SecondModal\r\n                        protocolId={protocolId}\r\n                            content={\r\n                                <>\r\n                                    <b className=\"second-text_modul\">\r\n                                        Ви впевнені, що хочете видалити\r\n                                        протокол?\r\n                                    </b>\r\n                                    <div className=\"second-button_modul\"/>\r\n                                </>\r\n                            }\r\n                            handleClose={toggleModal}\r\n                        />\r\n                    )}\r\n\r\n                    <img\r\n                        title=\"Видалити\"\r\n                        className=\"icon\"\r\n                        onClick={() => DeleteProtocol(protocolId,protocols)}\r\n                        src={Delete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction CheckIsActive({ isActive, protocolId }) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CreateDuplicateProtocol(\r\n    protocolId,\r\n    id,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    copiId,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill,instruction1,instruction2,instruction3\r\n) {\r\n    localStorage.setItem('program', protocolId)\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('CreateTemplate')\r\n        .add({\r\n            SphereOfDevelopment: sphereOfDevelopment,\r\n            ProtocolId: id,\r\n            Skill: skill,\r\n            StatusCopied: '(Копія Протоколу )',\r\n            IsActive: '0',\r\n            Interval: interval,\r\n            CorrectionProcedureStep1: correctionProcedureStep1,\r\n            CorrectionProcedureStep2: correctionProcedureStep2,\r\n            CorrectionProcedureStep3: correctionProcedureStep3,\r\n            CriterionIncrease: criterionIncrease,\r\n            DesirableReaction: desirableReaction,\r\n            Method: method,\r\n            MethodTakingHint: methodTakingHint,\r\n            ReductionСriterion: reductionСriterion,\r\n            StepDescription: stepDescription,\r\n            CriteriongenGenerSkill: CriteriongenGenerSkill,Instructions1: instruction1,Instructions2: instruction2,Instructions3: instruction3\r\n        })\r\n        \r\n\r\n    // console.log(data.key)\r\n}\r\nfunction DeleteProtocol(protocolId,protocols) {\r\n    const db = app.firestore()\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .doc(protocolId)\r\n        .delete().then(doc=>{\r\n            // for (let i = 0; i < protocols.length; i++) {\r\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocols[i].id)\r\n            //         .update({ ProtocolId: i + 1 })\r\n        \r\n            // }\r\n        })\r\n    \r\n  \r\n\r\n   \r\n\r\n\r\n}\r\n\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('CreateTemplate')\r\n        .doc(protocolId)\r\n        .update({ IsActive: valueStatus })\r\n}\r\nfunction setData(param1,param2){\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem(\"programNumber\",param2)\r\n}","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx",["930"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProgramHeader from '../Header/ProgramHeader'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\n\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport './Program.css'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramOnlyView() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Ok')\r\n                } else {\r\n                    console.log('Error in Program/ProgramOnlyView')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader/>\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                           \r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_name\"\r\n            >\r\n                Критерій узагальнення навику:{' '}\r\n            </div>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_value\"\r\n            >\r\n                <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                {protocol.CriteriongenGenerSkill}\r\n                </div>\r\n            </div>\r\n        </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ fontSize: '20px' }}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                            \r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE'}}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{ fontSize: '20px' ,backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n                                \r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n                               \r\n                                \r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE'}}>\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ backgroundColor: '#EEEEEE',fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx",["931","932","933","934","935"],"import ProgramHeader from '../Header/ProgramHeader'\r\nimport './Program.css'\r\nimport './ProgramTest.css'\r\nimport { TextInput } from 'react-native-paper'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditable() {\r\n    let test = []\r\n\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        fetch(`/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n    }\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати сферу розвитку...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати навик...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати метод...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати бажану реакцію...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                                            <TextInput\r\n                                                placeholder=\"Вказати критерій...\"\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={protocol.CriteriongenGenerSkill}\r\n                                                style={{ fontSize: '20px' }}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: { background: '#fcfcfc' },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { backgroundColor: 'white' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '-1rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"false\">\r\n                                        </option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div\r\n                                            className=\"add_stymul_container_test\" >\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_stymul_button_test\"\r\n                                            >\r\n                                                +\r\n                                        </button>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setStimulInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати стимул....\"\r\n                                                className=\"add_stymul_input_test\"\r\n                                            />\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати опис етапів...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background='white'\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'white' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE' }}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: \"#EEEEEE\" }}>\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <button\r\n                    className=\"save_button_supervisor_mobile btn-background-slide\"\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                >\r\n                    Зберегти файл\r\n            </button>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions1: instructionInput })\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions2: instructionInput })\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions3: instructionInput })\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db.collection(\"Supervisors\")\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({ Name: stimulInput })\r\n    } else { alert(\"Неможливо надіслати пустий стимул\") }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Skill: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Method: params })\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ DesirableReaction: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ ReductionСriterion: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriterionIncrease: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ StepDescription: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep3: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep2: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep1: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Interval: interval })\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ MethodTakingHint: method })\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriteriongenGenerSkill: generSkill })\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx",["936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960"],"import { TextInput } from 'react-native-paper'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeaderEdit from '../PageComponent/ArrowHeaderEdit'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditableTemplate() {\r\n\r\n  \r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = \r\n        db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = \r\n        db  .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n  \r\n\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeaderEdit />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                                            <TextInput\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={protocol.CriteriongenGenerSkill}\r\n                                                style={{ fontSize: '20px' }}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: { background: '#fcfcfc' },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(e.target.value)\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { backgroundColor: 'white' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '-1rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"false\">\r\n                                        </option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                            }}\r\n                                        >\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_button\"\r\n                                            >\r\n                                                <h1\r\n                                                    style={{\r\n                                                        marginTop: '5px',\r\n                                                        marginBottom: '5px',\r\n                                                        textAlign: 'center',\r\n                                                        width: '22px',\r\n                                                        height: '20px',\r\n                                                        color: '#4d4d4d',\r\n                                                        fontSize: '20px',\r\n                                                    }}\r\n                                                >\r\n                                                    +\r\n                                                </h1>\r\n                                            </button>\r\n                                            <div className=\"transparent_input\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) =>\r\n                                                        setStimulInput(\r\n                                                            event.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Додати стимул....\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background='white'\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px', backgroundColor: 'white' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'white' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE' }}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: \"#EEEEEE\" }}>\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n             \r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions1: instructionInput })\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions2: instructionInput })\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions3: instructionInput })\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db  .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({ Name: stimulInput })\r\n    } else { alert(\"Неможливо надіслати пустий стимул\") }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Skill: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Method: params })\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ DesirableReaction: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ ReductionСriterion: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriterionIncrease: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ StepDescription: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep3: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep2: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep1: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Interval: interval })\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ MethodTakingHint: method })\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db  .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriteriongenGenerSkill: generSkill })\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx",["961"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\n\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\n\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramTemplateViewPublic() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n    \r\n    let [protocols, setProtocols] = useState([])\r\n    \r\n        useEffect(() => {\r\n            const db = app.firestore()\r\n            const unsubscribe = db\r\n            \r\n            .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n                .onSnapshot((snapshot) => {\r\n                    if (snapshot.size) {\r\n                        setProtocols(\r\n                            snapshot.docs.map((doc) => ({\r\n                                ...doc.data(),\r\n                                id: doc.id,\r\n                            }))\r\n                        )\r\n                        console.log('yeah')\r\n                    } else {\r\n                        console.log(\r\n                            'error in ProtocolList/ProtocolListTherapist.js'\r\n                        )\r\n                    }\r\n                })\r\n            return () => {\r\n                unsubscribe()\r\n            }\r\n        }, [])\r\n    \r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n            <HeaderHomeTemplate/>\r\n            <ArrowHeaderTemplate/>\r\n            \r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                           \r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_name\"\r\n            >\r\n                Критерій узагальнення навику:{' '}\r\n            </div>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_value\"\r\n            >\r\n                <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                {protocol.CriteriongenGenerSkill}\r\n                </div>\r\n            </div>\r\n        </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ fontSize: '20px' }}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                            \r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE'}}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{ fontSize: '20px' ,backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n                                \r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n                               \r\n                                \r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE'}}>\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ backgroundColor: '#EEEEEE',fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx",["962"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\n\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\n\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramTemplateViewPrivate() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeaderTemplate />\r\n\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\"programNumber\")}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                                            {protocol.CriteriongenGenerSkill}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ fontSize: '20px' }}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: 'white' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE' }}>\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{ fontSize: '20px', backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\" style={{ backgroundColor: '#EEEEEE' }}>\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ backgroundColor: '#EEEEEE', fontSize: '20px' }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx",["963"],"import { Link } from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderTemplate() {\r\n    return (\r\n        <>\r\n     <div className=\"patient_upper_flex_container\">\r\n                \r\n                <h2 style={{ marginLeft: '6rem' }}><Link to=\"/home-template\" className=\"patients_link\"onClick={()=>localStorage.setItem(\"templateType\",\"private\")} >Шаблони</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <Link to=\"/template-more-info\">\r\n                <h2 style={{ color: \"#6F6F6F\" }} >Список протоколів шаблону</h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderTemplate\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx",["964"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\n\r\n\r\nexport default function ListMoreInfoPublic() {\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n\r\n            .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <HeaderHomeTemplate />\r\n            <ArrowHeaderTemplate />\r\n\r\n\r\n            {protocolsNumber.map((protocol) => (\r\n\r\n                < ProtocolItemTemplate\r\n                    number={protocol}\r\n                    protocolId={protocols[protocol - 1].id}\r\n                    protocolName={protocols[protocol - 1].ProtocolId}\r\n                    sphereOfDevelopment={protocols[protocol - 1].SphereOfDevelopment}\r\n                    length={protocols.length}\r\n                    skill={protocols[protocol - 1].Skill}\r\n                    statusCopied={protocols[protocol - 1].StatusCopied}\r\n                    isActive={protocols[protocol - 1].IsActive}\r\n                    interval={protocols[protocol - 1].Interval}\r\n                    correctionProcedureStep1={\r\n                        protocols[protocol - 1].CorrectionProcedureStep1\r\n                    }\r\n                    correctionProcedureStep2={\r\n                        protocols[protocol - 1].CorrectionProcedureStep2\r\n                    }\r\n                    correctionProcedureStep3={\r\n                        protocols[protocol - 1].CorrectionProcedureStep3\r\n                    }\r\n                    criterionIncrease={protocols[protocol - 1].CriterionIncrease}\r\n                    desirableReaction={protocols[protocol - 1].DesirableReaction}\r\n                    method={protocols[protocol - 1].Method}\r\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                    reductionСriterion={protocols[protocol - 1].ReductionСriterion}\r\n                    stepDescription={protocols[protocol - 1].StepDescription}\r\n                    CriteriongenGenerSkill={protocols[protocol - 1].CriteriongenGenerSkill}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx",["965","966"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport  ProtocolItemTemplateEdit from './ProtocolItemTemplateEdit'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\n\r\n\r\n\r\nexport default function ListMoreInfoPrivate() {\r\n    \r\n    const [protocols, setProtocols] = useState([])\r\n   \r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i <protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n<HeaderHomeTemplate/>\r\n            <ArrowHeaderTemplate/>\r\n            \r\n        \r\n            {protocolsNumber.map((protocol) => (\r\n\r\n                        < ProtocolItemTemplateEdit\r\n                            number={protocol}\r\n                            protocolId={protocols[protocol-1].id}\r\n                            protocolName={protocols[protocol-1].ProtocolId}\r\n                            sphereOfDevelopment={protocols[protocol-1].SphereOfDevelopment}\r\n                            length={protocols.length}\r\n                            skill={protocols[protocol-1].Skill}\r\n                            statusCopied={protocols[protocol-1].StatusCopied}\r\n                            isActive={protocols[protocol-1] .IsActive}\r\n                            interval={protocols[protocol-1].Interval}\r\n                            correctionProcedureStep1={\r\n                                protocols[protocol-1].CorrectionProcedureStep1\r\n                            }\r\n                            correctionProcedureStep2={\r\n                                protocols[protocol-1].CorrectionProcedureStep2\r\n                            }\r\n                            correctionProcedureStep3={\r\n                                protocols[protocol-1].CorrectionProcedureStep3\r\n                            }\r\n                            criterionIncrease={protocols[protocol-1].CriterionIncrease}\r\n                            desirableReaction={protocols[protocol-1].DesirableReaction}\r\n                            method={protocols[protocol-1].Method}\r\n                            methodTakingHint={protocols[protocol-1].MethodTakingHint}\r\n                            reductionСriterion={protocols[protocol-1].ReductionСriterion}\r\n                            stepDescription={protocols[protocol-1].StepDescription}\r\n                            CriteriongenGenerSkill={protocols[protocol-1].CriteriongenGenerSkill}\r\n                        />\r\n                    ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx",["967","968"],"import { useState } from 'react'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ProtocolItemTemplate({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link\r\n                title=\"Переглянути\"\r\n                onClick={() => { setData(protocolId, number) }\r\n                }\r\n                to=\"template-more-info-protocol\"\r\n            >\r\n                <div \r\n                    className=\"protocol_item\"\r\n                    style={{ backgroundColor: colorItem, marginLeft: '7vw' }}\r\n                >\r\n                    <p className=\"protocol_item_text \">\r\n                        Протокол {number} {statusCopied}.{' '}\r\n                        {sphereOfDevelopment}. {skill}\r\n                    </p>\r\n                    <div className=\"icon_place\">\r\n                   \r\n                        <Link\r\n                            title=\"Переглянути\"\r\n                            onClick={() => { setData(protocolId, number) }\r\n                            }\r\n                            to=\"template-more-info-protocol\"\r\n                        >\r\n                            <AiOutlineArrowRight\r\n                                className='icon go_icon'\r\n                                color=\"black\"\r\n                            />\r\n                        </Link>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem(\"programNumber\", param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx",["969","970"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div  id=\"template\" className=\"template_place\">\r\n                <img style={{cursor:\"pointer\"}}\r\n                    className=\"template_img\"\r\n                    onClick={() => DeleteTemplate(idTemplate)}\r\n                    src={Delete}\r\n                ></img>\r\n\r\n                <div\r\n                    className=\"template_categories\"\r\n                    onClick={() => CreateDuplicateTemplate(idTemplate, history)}\r\n                >\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n\r\n\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx",["971","972","973","974","975","976"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx",["977","978"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplate.jsx",["979","980"],"import { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport TemplateItem from '../PageComponent/Item'\r\nimport ButtonsTemplate from '../TemplatePages/ButtonsTemplate'\r\n\r\n\r\nfunction HomeProgramTemplate({ history,countProto }) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\nlet btnText=\"Створити шаблон з нуля\"\r\nif(countProto!=0){\r\n \r\n    btnText=\"Продовжіть створення шаблону\"\r\n}\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>   \r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                    Переглянути шаблони програм АБО\r\n                </div>\r\n                <Link  className=\"template_link\" to=\"/create-template\">\r\n               {btnText}\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(HomeProgramTemplate)\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplatePublic.jsx",["981","982"],"import { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport TemplateItem from '../PageComponent/ItemPublic'\r\nimport ButtonsTemplate from '../../HomeTemplate/TemplatePages/ButtonsTemplate'\r\n\r\nfunction HomeProgramTemplatePublic({history,countProto}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n    let btnText=\"Створити шаблон з нуля\"\r\n    if(countProto!=0){\r\n        btnText=\"Продовжіть створення шаблону\"\r\n    }\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n\r\n        <>   \r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                     Переглянути шаблони програм АБО\r\n                </div>\r\n                <Link style={{width:\"25%\"}}  className=\"template_link\" to=\"/create-template\" >\r\n                   {btnText}\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(HomeProgramTemplatePublic)\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx",["983","984","985","986"],"import React from \"react\";\r\nimport { withRouter } from 'react-router'\r\nimport app from '../../../Firebase/firebase'\r\nconst Popup = (props,{history}) => {\r\n    console.log(props.protocols)\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n                {props.content}\r\n                <div className=\"button-popup\">\r\n                    <button onClick={() => CreateProgramTemplates(props.protocols, props.child, \"Приватний\")} className=\"button_private\">Приватний</button>\r\n                    <button onClick={() => CreateProgramTemplates(props.protocols, props.child, \"Публічний\")} className=\"button_public\">Публічний</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;\r\n\r\n\r\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\r\n    var endCycle = 0\r\n    console.log(protocols)\r\n    const db = app.firestore()\r\n    if (typeTemplates == \"Приватний\") {\r\n        db.collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: \"\",\r\n                Diagnos: \"\",\r\n                KidWeight: \"\",\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection(localStorage.getItem(\"proffesion\"))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n\r\n                )\r\n                db\r\n                    .collection(localStorage.getItem(\"proffesion\"))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: \"\",\r\n                        Diagnos: \"\",\r\n                        KidWeight: \"\", CountOfProtocol: protocols.length\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n    if (typeTemplates == \"Публічний\") {\r\n        db\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: \"\",\r\n                Diagnos: \"\",\r\n                KidWeight: \"\",\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: \"\",\r\n                        Diagnos: \"\",\r\n                        KidWeight: \"\", CountOfProtocol: protocols.length\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n\r\n\r\n    if (endCycle == 1) {\r\n\r\n        protocols.map((proto) => db.collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate').doc(proto.id).delete())\r\n        setTimeout(() => {\r\n\r\n            alert(`${typeTemplates} шаблон протоколів успішно створений!`)\r\n            \r\n            window.location.reload()\r\n        \r\n        });\r\n    }\r\n}","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx",["987","988","989"],"import { Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport ArrowHeaderSimple from \"../PageComponent/ArrowHeaderSimple\";\r\nimport app from '../../../Firebase/firebase'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\n\r\nfunction ArrowHeader() {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n        .collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n        <ArrowHeaderSimple/>\r\n           \r\n                \r\n              \r\n                <div\r\n                    onClick={() => addProto(protocols.length)}\r\n                    className=\"add-proto\"\r\n                >\r\n                    <BsPlusCircle size={50} style={{marginTop:\"30px\"}} />\r\n                </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('CreateTemplate')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: \"\",\r\n            Interval: \"\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nexport default ArrowHeader","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx",["990"],"import { Link } from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderSimple() {\r\n    return (\r\n        <>\r\n     <div className=\"patient_upper_flex_container\">\r\n                \r\n                <h2 style={{ marginLeft: '6rem' }}><Link to=\"/home-template\" className=\"patients_link\"onClick={()=>localStorage.setItem(\"templateType\",\"private\")} >Шаблони</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <Link to=\"/create-template\">\r\n                <h2 style={{ color: \"#6F6F6F\" }} >Створення шаблона</h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderSimple\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx",["991"],"import Delete from '../../../../assets/delete.png'\r\nimport app from '../../../../Firebase/firebase'\r\nfunction StimulusItem({ name, stimulId }) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\NextButtonComponent.jsx",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\BackButtonComponent.jsx",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js",[],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx",["992"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx",["993","994"],"import { Link } from \"react-router-dom\"\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\nfunction PatientTemplateSwitch(params) {\r\n\r\n    if (localStorage.getItem(\"homeType\") == \"home\") {\r\n        return (\r\n            <>\r\n                <div style={{\r\n                    width: \"35%\",\r\n                    height: \"5%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignSelf:\"center\",\r\n                    justifyContent: \"center\",\r\n                    fontSize: \"80%\"\r\n                }}>\r\n                    <Link to=\"/home\"\r\n                        style={{ color: '#6F6F6F' }}>\r\n                        <h1>\r\n                            Пацієнти\r\n                        </h1>\r\n                    </Link>\r\n                    <div style={{\r\n                        alignSelf: \"center\",\r\n                        margin: \"1.5% 1% 0 1%\"\r\n                    }}>\r\n                        <GoPrimitiveDot />\r\n                    </div>\r\n                    <Link to=\"/home-template\"  onClick={()=>localStorage.setItem(\"templateType\",\"private\")}style={{ color: \"black\" }}><h1\r\n                    >Шаблони</h1>\r\n                    </Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem(\"homeType\") != \"home\" ) {\r\n\r\n        return (\r\n            <>\r\n                <div style={{\r\n                    width: \"30%\",\r\n                    height: \"5%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"center\",\r\n                    fontSize: \"80%\"\r\n                }}>\r\n                    <Link to=\"/home\"\r\n                        style={{ color:\"black\" }}>\r\n                        <h1>\r\n                            Пацієнти\r\n                        </h1>\r\n                    </Link>\r\n                    <div style={{\r\n                        alignSelf: \"center\",\r\n                        margin: \"1.5% 1% 0 1%\"\r\n                    }}>\r\n                        <GoPrimitiveDot />\r\n                    </div>\r\n                    <Link to=\"/home-template\" onClick={()=>localStorage.setItem(\"templateType\",\"private\")} style={{ color:  '#6F6F6F' }}><h1\r\n                    >Шаблони</h1>\r\n                    </Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n   \r\n}\r\nexport default PatientTemplateSwitch","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js",["995","996","997","998"],"import React, { useState, useEffect } from 'react'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport './ProgramHeader.css'\r\nimport { Link } from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\r\n\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction ProgramHeader() {\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        console.log(fetch(`https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`))\r\n        fetch(`https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n        alert(\"Протокол збережено успішно!\")\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"header\">\r\n                <div style={{ width: '93.2%', alignSelf: \"center\" }}>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\"\r\n                    }}>\r\n                        <img\r\n                            src={Logo}\r\n                            onClick={() => signOut()}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                            className=\"ionkid_logo\"\r\n                        />\r\n                         <PatientTemplateSwitch/>\r\n    <Link to='/protocol-list'>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"save_button_header btn-background-slide\"\r\n                        style={{ top: '1rem', cursor: 'pointer' }}\r\n                        onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                    >\r\n                        Зберегти файл\r\n                    </button>\r\n                    </Link>\r\n\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: \"center\",\r\n\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgramHeader;\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx",["999"],"import { Link } from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderEdit() {\r\n    return (\r\n        <>\r\n     <div className=\"patient_upper_flex_container\">\r\n                \r\n                <h2 style={{ marginLeft: '6rem' }}><Link to=\"/home-template\" className=\"patients_link\"onClick={()=>localStorage.setItem(\"templateType\",\"private\")} >Шаблони</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <Link to=\"/template-more-info\">\r\n                <h2 style={{ color: \"#6F6F6F\" }} >Редагування шаблона</h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderEdit\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx",["1000","1001","1002"],"import { useState } from 'react'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\nimport app from '../../../Firebase/firebase'\r\nimport Delete from '../../../assets/delete.svg'\r\nexport default function ProtocolItemTemplate({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n                <div\r\n                    className=\"protocol_item\"\r\n                    style={{ backgroundColor: colorItem, marginLeft: '7vw' }}\r\n                >\r\n                    <p className=\"protocol_item_text \">\r\n                        Протокол {number} {statusCopied}.{' '}\r\n                        {sphereOfDevelopment}. {skill}\r\n                    </p>\r\n                    <div className=\"icon_place\">\r\n                        <>\r\n                            <img\r\n                                title=\"Видалити\"\r\n                                className=\"icon\"\r\n                                onClick={() => DeleteProtocol(protocolId)}\r\n                                src={Delete}\r\n                            />\r\n                        </>\r\n\r\n                        <Link\r\n                            title=\"Переглянути\"\r\n                            onClick={() => { setData(protocolId, number) }\r\n                            }\r\n                            to=\"template-more-info-protocol\"\r\n                        >\r\n                            <AiOutlineArrowRight\r\n                                className='icon go_icon'\r\n                                color=\"black\"\r\n                            />\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction DeleteProtocol(protocolId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(protocolId)\r\n        .delete().then(doc => {\r\n         \r\n        })\r\n}\r\n\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem(\"programNumber\", param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx",["1003","1004","1005","1006","1007"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx",["1008","1009","1010","1011","1012","1013","1014","1015","1016","1017"],"import Duplicate from '../../../assets/duplicate_task.svg'\r\nimport Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport { Link } from 'react-router-dom'\r\nimport EditIcon from '../../../assets/edit_new.svg'\r\nimport SecondModal from '../../ModalWindow/SecondModal'\r\nexport default function ProtocolItem({protocols,\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill,instruction1,instruction2,instruction3\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{ backgroundColor: colorItem, marginLeft: '5rem' }}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number}{statusCopied}.\r\n                     {sphereOfDevelopment}.{skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <CheckIsActive  className=\"icon\" isActive={isActive} protocolId={protocolId} />\r\n                    <Link\r\n                \r\n                            onClick={() =>\r\n                                {setData(protocolId,number)}\r\n                            \r\n                        }\r\n                        to=\"/program\"\r\n                    >\r\n            \r\n                    <img\r\n                        title=\"Редагувати\"\r\n                        className=\"icon edit_icon\"\r\n                        src={EditIcon}\r\n                    />\r\n                    </Link>\r\n                    \r\n\r\n                    <img\r\n                        title=\"Дублікат\"\r\n                        className=\"icon\"\r\n                        onClick={() =>\r\n                            CreateDuplicateProtocol(\r\n                                protocolId,\r\n                                +length + 1,\r\n                                sphereOfDevelopment,\r\n                                skill,\r\n                                protocolName,\r\n                                interval,\r\n                                correctionProcedureStep1,\r\n                                correctionProcedureStep2,\r\n                                correctionProcedureStep3,\r\n                                criterionIncrease,\r\n                                desirableReaction,\r\n                                method,\r\n                                methodTakingHint,\r\n                                reductionСriterion,\r\n                                stepDescription, CriteriongenGenerSkill,instruction1,instruction2,instruction3\r\n                            )\r\n                        }\r\n                        src={Duplicate}\r\n                    />\r\n                    \r\n                    {isOpen && (\r\n                        <SecondModal\r\n                        protocolId={protocolId}\r\n                            content={\r\n                                <>\r\n                                    <b className=\"second-text_modul\">\r\n                                        Ви впевнені, що хочете видалити\r\n                                        протокол?\r\n                                    </b>\r\n                                    <div className=\"second-button_modul\"/>\r\n                                </>\r\n                            }\r\n                            handleClose={toggleModal}\r\n                        />\r\n                    )}\r\n\r\n                    <img\r\n                        title=\"Видалити\"\r\n                        className=\"icon\"\r\n                        onClick={() => DeleteProtocol(protocolId,protocols)}\r\n                        src={Delete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction CheckIsActive({ isActive, protocolId }) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CreateDuplicateProtocol(\r\n    protocolId,\r\n    id,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    copiId,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill ,instruction1,instruction2,instruction3\r\n) {\r\n    localStorage.setItem('program', protocolId)\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            SphereOfDevelopment: sphereOfDevelopment,\r\n            ProtocolId: id,\r\n            Skill: skill,\r\n            StatusCopied: '(Копія Протоколу )',\r\n            IsActive: '0',\r\n            Interval: interval,\r\n            CorrectionProcedureStep1: correctionProcedureStep1,\r\n            CorrectionProcedureStep2: correctionProcedureStep2,\r\n            CorrectionProcedureStep3: correctionProcedureStep3,\r\n            CriterionIncrease: criterionIncrease,\r\n            DesirableReaction: desirableReaction,\r\n            Method: method,\r\n            MethodTakingHint: methodTakingHint,\r\n            ReductionСriterion: reductionСriterion,\r\n            StepDescription: stepDescription,\r\n            CriteriongenGenerSkill: CriteriongenGenerSkill,Instructions1: instruction1,Instructions2: instruction2,Instructions3: instruction3\r\n        })\r\n        .then(function (docRef) {\r\n            db.collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols').doc(docRef.id)\r\n                .collection(\"CriteriongenGenerSkill\")\r\n                .add({ Text: \"\" })\r\n            db.collection('User')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols').doc(docRef.id)\r\n                .collection(\"Stimulus\")\r\n                .add({ Name: \"\" })\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n    // console.log(data.key)\r\n}\r\nfunction DeleteProtocol(protocolId,protocols) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .delete().then(doc=>{\r\n            // for (let i = 0; i < protocols.length; i++) {\r\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocols[i].id)\r\n            //         .update({ ProtocolId: i + 1 })\r\n        \r\n            // }\r\n        })\r\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\r\n        db.collection('Therapists')\r\n            .doc(terapist)\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols').doc(protocolId).delete()\r\n    })\r\n  \r\n\r\n   \r\n\r\n\r\n}\r\n\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({ IsActive: valueStatus })\r\n}\r\nfunction setData(param1,param2){\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem(\"programNumber\",param2)\r\n}","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx",["1018","1019","1020"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx",["1021","1022","1023"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx",["1024"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\ButtonsTemplate.jsx",["1025","1026","1027"],"import React,{useState} from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function ButtonsTemplate() {\r\n   \r\n    // const [colorButtonPublic, setcolorButtonPublic] = useState(\"#000000\") \r\n    // const [colorButtonPrivate, setcolorButtonPrivate] = useState(\"#000000\") \r\n    let colorButtonPublic = \"#000000\"\r\n    let colorButtonPrivate = \"#000000\"\r\n    localStorage.setItem(\"homeType\",\"template\")\r\n    if (localStorage.getItem(\"templateType\")==\"public\"){\r\n        colorButtonPrivate = \"#000000\"\r\n        colorButtonPublic = \"#EF4F59\"\r\n    }\r\n    if (localStorage.getItem(\"templateType\")==\"private\"){\r\n        colorButtonPrivate  = \"#EF4F59\"\r\n        colorButtonPublic = \"#000000\"\r\n    }\r\n    return(  \r\n        <>\r\n            <div className=\"buttons-template\">\r\n                <Link to=\"/home-template\">\r\n                <button id=\"temp-button-prv\" className=\"buttons-template-private\" onClick={() =>localStorage.setItem(\"templateType\",\"private\")} style={{color: colorButtonPrivate}}>Мої шаблони</button>\r\n                </Link>\r\n                <Link to=\"/home-template\">\r\n                <button id=\"temp-button-pub\" className=\"buttons-template-public\" onClick={() =>localStorage.setItem(\"templateType\",\"public\")} style={{color: colorButtonPublic}}>Загальні шаблони</button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ItemPublic.jsx",["1028","1029"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div\r\n                    className=\"template_categories\"\r\n                    onClick={() => (moreInfoTemplate(idTemplate,history))} \r\n                    // onClick={() => CreateDuplicateTemplate(idTemplate, history)}\r\n                >\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\nfunction moreInfoTemplate(id,history) {\r\n    localStorage.setItem(\"templateIdMore\",id)\r\n    history.push(\"/template-more-info\")\r\n}\r\n\r\n\r\n// function CreateDuplicateTemplate(idTemplate, history) {\r\n//     const db = app.firestore()\r\n\r\n//     console.log(\r\n//         db\r\n//             .collection('ProgramTemplates')\r\n//             .doc(idTemplate)\r\n//             .collection('protocols')\r\n//             .onSnapshot((snapshot) => {\r\n//                 if (snapshot.size) {\r\n//                     snapshot.docs.map((doc) => {\r\n//                         db.collection(localStorage.getItem(\"proffesion\"))\r\n//                             .doc(localStorage.getItem('user'))\r\n//                             .collection('Patient')\r\n//                             .doc(localStorage.getItem('child'))\r\n//                             .collection('Protocols')\r\n//                             .add(doc.data())\r\n//                         console.log(doc.data())\r\n//                     })\r\n\r\n//                     console.log('Сука ')\r\n//                 } else {\r\n//                     console.log(\r\n//                         'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n//                     )\r\n//                 }\r\n//             })\r\n//     )\r\n//     history.push('/protocol-list')\r\n// }\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\Item.jsx",["1030"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div onClick={() => (moreInfoTemplate(idTemplate,history))} id=\"template\" className=\"template_place\">\r\n\r\n                <div className=\"template_categories\">\r\n                    <img\r\n                        className=\"template_img\"\r\n                        onClick={() => DeleteTemplate(idTemplate)}\r\n                        src={Delete}\r\n                    > \r\n                    </img>\r\n\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\nfunction moreInfoTemplate(id,history) {\r\n    localStorage.setItem(\"templateIdMore\",id)\r\n    history.push(\"/template-more-info\")\r\n}\r\n\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx",["1031","1032"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx",["1033"],"C:\\Users\\пк\\ionkid_21_0\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx",["1034","1035"],"import Delete from '../../../../assets/delete.png'\r\nimport app from '../../../../Firebase/firebase'\r\nfunction StimulusItem({ name, stimulId }) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db .collection(localStorage.getItem(\"proffesion\"))\r\n    .doc(localStorage.getItem('user'))\r\n    .collection('ProgramTemplates').doc(localStorage.getItem(\"templateIdMore\")).collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n\r\n}\r\n",{"ruleId":"1036","replacedBy":"1037"},{"ruleId":"1038","replacedBy":"1039"},{"ruleId":"1040","severity":1,"message":"1041","line":9,"column":27,"nodeType":"1042","messageId":"1043","endLine":9,"endColumn":33},{"ruleId":"1040","severity":1,"message":"1044","line":7,"column":8,"nodeType":"1042","messageId":"1043","endLine":7,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1041","line":8,"column":27,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":33},{"ruleId":"1040","severity":1,"message":"1045","line":8,"column":43,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":48},{"ruleId":"1046","severity":1,"message":"1047","line":21,"column":45,"nodeType":"1048","messageId":"1049","endLine":21,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":51,"column":47,"nodeType":"1052","messageId":"1053","endLine":51,"endColumn":49},{"ruleId":"1046","severity":1,"message":"1047","line":56,"column":53,"nodeType":"1048","messageId":"1049","endLine":56,"endColumn":55},{"ruleId":"1054","severity":1,"message":"1055","line":76,"column":9,"nodeType":"1056","endLine":76,"endColumn":18,"suggestions":"1057"},{"ruleId":"1050","severity":1,"message":"1051","line":78,"column":50,"nodeType":"1052","messageId":"1053","endLine":78,"endColumn":52},{"ruleId":"1040","severity":1,"message":"1058","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":28},{"ruleId":"1040","severity":1,"message":"1059","line":1,"column":30,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":40},{"ruleId":"1040","severity":1,"message":"1060","line":3,"column":10,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":20},{"ruleId":"1040","severity":1,"message":"1061","line":3,"column":22,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":30},{"ruleId":"1040","severity":1,"message":"1062","line":4,"column":10,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":6,"column":22,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":30},{"ruleId":"1063","severity":1,"message":"1064","line":25,"column":17,"nodeType":"1065","endLine":34,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":36,"column":17,"nodeType":"1065","endLine":36,"endColumn":135},{"ruleId":"1040","severity":1,"message":"1066","line":51,"column":7,"nodeType":"1042","messageId":"1043","endLine":51,"endColumn":22},{"ruleId":"1040","severity":1,"message":"1067","line":192,"column":11,"nodeType":"1042","messageId":"1043","endLine":192,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1068","line":195,"column":11,"nodeType":"1042","messageId":"1043","endLine":195,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1069","line":199,"column":11,"nodeType":"1042","messageId":"1043","endLine":199,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":18,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":36,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":38},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":53,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":55},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":69,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":71},{"ruleId":"1050","severity":1,"message":"1051","line":206,"column":17,"nodeType":"1052","messageId":"1053","endLine":206,"endColumn":19},{"ruleId":"1050","severity":1,"message":"1051","line":206,"column":31,"nodeType":"1052","messageId":"1053","endLine":206,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1051","line":206,"column":45,"nodeType":"1052","messageId":"1053","endLine":206,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":206,"column":62,"nodeType":"1052","messageId":"1053","endLine":206,"endColumn":64},{"ruleId":"1040","severity":1,"message":"1070","line":209,"column":19,"nodeType":"1042","messageId":"1043","endLine":209,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1064","line":243,"column":17,"nodeType":"1065","endLine":252,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":271,"column":91,"nodeType":"1073","messageId":"1053","endLine":271,"endColumn":101},{"ruleId":"1040","severity":1,"message":"1074","line":7,"column":8,"nodeType":"1042","messageId":"1043","endLine":7,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1075","line":17,"column":10,"nodeType":"1042","messageId":"1043","endLine":17,"endColumn":14},{"ruleId":"1046","severity":1,"message":"1047","line":43,"column":33,"nodeType":"1048","messageId":"1049","endLine":43,"endColumn":35},{"ruleId":"1063","severity":1,"message":"1064","line":67,"column":21,"nodeType":"1065","endLine":77,"endColumn":23},{"ruleId":"1076","severity":1,"message":"1077","line":79,"column":21,"nodeType":"1065","endLine":88,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":138,"column":43,"nodeType":"1052","messageId":"1053","endLine":138,"endColumn":45},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":25},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":27,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1050","severity":1,"message":"1051","line":15,"column":44,"nodeType":"1052","messageId":"1053","endLine":15,"endColumn":46},{"ruleId":"1050","severity":1,"message":"1051","line":5,"column":44,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":46},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":10,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":18},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":20,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":29},{"ruleId":"1040","severity":1,"message":"1080","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":11},{"ruleId":"1050","severity":1,"message":"1051","line":8,"column":44,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":46},{"ruleId":"1040","severity":1,"message":"1081","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":4,"column":22,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":30},{"ruleId":"1040","severity":1,"message":"1080","line":8,"column":8,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":11},{"ruleId":"1063","severity":1,"message":"1064","line":54,"column":25,"nodeType":"1065","endLine":64,"endColumn":27},{"ruleId":"1063","severity":1,"message":"1064","line":76,"column":34,"nodeType":"1065","endLine":76,"endColumn":79},{"ruleId":"1040","severity":1,"message":"1080","line":5,"column":8,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1082","line":19,"column":17,"nodeType":"1042","messageId":"1043","endLine":19,"endColumn":22},{"ruleId":"1040","severity":1,"message":"1083","line":11,"column":12,"nodeType":"1042","messageId":"1043","endLine":11,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":165,"column":25,"nodeType":"1065","endLine":175,"endColumn":27},{"ruleId":"1040","severity":1,"message":"1084","line":3,"column":10,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1085","line":3,"column":28,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":35},{"ruleId":"1054","severity":1,"message":"1086","line":52,"column":8,"nodeType":"1056","endLine":52,"endColumn":10,"suggestions":"1087"},{"ruleId":"1063","severity":1,"message":"1064","line":17,"column":13,"nodeType":"1065","endLine":28,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":29,"column":13,"nodeType":"1065","endLine":37,"endColumn":19},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":25},{"ruleId":"1063","severity":1,"message":"1064","line":17,"column":17,"nodeType":"1065","endLine":27,"endColumn":19},{"ruleId":"1076","severity":1,"message":"1077","line":33,"column":17,"nodeType":"1065","endLine":42,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":10,"column":17,"nodeType":"1065","endLine":20,"endColumn":19},{"ruleId":"1076","severity":1,"message":"1077","line":22,"column":17,"nodeType":"1065","endLine":31,"endColumn":19},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1088","line":2,"column":22,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":32},{"ruleId":"1040","severity":1,"message":"1089","line":2,"column":34,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":40},{"ruleId":"1040","severity":1,"message":"1090","line":2,"column":42,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":49},{"ruleId":"1063","severity":1,"message":"1064","line":13,"column":21,"nodeType":"1065","endLine":18,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1091","line":39,"column":9,"nodeType":"1042","messageId":"1043","endLine":39,"endColumn":13},{"ruleId":"1040","severity":1,"message":"1092","line":104,"column":12,"nodeType":"1042","messageId":"1043","endLine":104,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1093","line":759,"column":21,"nodeType":"1052","messageId":"1053","endLine":759,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1094","line":14,"column":12,"nodeType":"1042","messageId":"1043","endLine":14,"endColumn":32},{"ruleId":"1046","severity":1,"message":"1047","line":29,"column":49,"nodeType":"1048","messageId":"1049","endLine":29,"endColumn":51},{"ruleId":"1046","severity":1,"message":"1047","line":31,"column":53,"nodeType":"1048","messageId":"1049","endLine":31,"endColumn":55},{"ruleId":"1054","severity":1,"message":"1095","line":59,"column":8,"nodeType":"1056","endLine":59,"endColumn":10,"suggestions":"1096"},{"ruleId":"1040","severity":1,"message":"1097","line":61,"column":12,"nodeType":"1042","messageId":"1043","endLine":61,"endColumn":31},{"ruleId":"1046","severity":1,"message":"1047","line":77,"column":45,"nodeType":"1048","messageId":"1049","endLine":77,"endColumn":47},{"ruleId":"1046","severity":1,"message":"1047","line":87,"column":88,"nodeType":"1048","messageId":"1049","endLine":87,"endColumn":90},{"ruleId":"1046","severity":1,"message":"1047","line":88,"column":65,"nodeType":"1048","messageId":"1049","endLine":88,"endColumn":67},{"ruleId":"1054","severity":1,"message":"1095","line":112,"column":8,"nodeType":"1056","endLine":112,"endColumn":10,"suggestions":"1098"},{"ruleId":"1050","severity":1,"message":"1051","line":278,"column":34,"nodeType":"1052","messageId":"1053","endLine":278,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1099","line":47,"column":12,"nodeType":"1042","messageId":"1043","endLine":47,"endColumn":17},{"ruleId":"1063","severity":1,"message":"1064","line":88,"column":17,"nodeType":"1065","endLine":97,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":107,"column":17,"nodeType":"1065","endLine":116,"endColumn":19},{"ruleId":"1100","severity":1,"message":"1101","line":129,"column":39,"nodeType":"1102","messageId":"1103","endLine":129,"endColumn":70,"fix":"1104"},{"ruleId":"1040","severity":1,"message":"1081","line":10,"column":8,"nodeType":"1042","messageId":"1043","endLine":10,"endColumn":14},{"ruleId":"1050","severity":1,"message":"1051","line":28,"column":33,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":35},{"ruleId":"1063","severity":1,"message":"1064","line":51,"column":29,"nodeType":"1065","endLine":60,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":70,"column":29,"nodeType":"1065","endLine":74,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":75,"column":29,"nodeType":"1065","endLine":79,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1051","line":92,"column":33,"nodeType":"1052","messageId":"1053","endLine":92,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1051","line":127,"column":26,"nodeType":"1052","messageId":"1053","endLine":127,"endColumn":28},{"ruleId":"1063","severity":1,"message":"1064","line":148,"column":29,"nodeType":"1065","endLine":157,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":166,"column":25,"nodeType":"1065","endLine":170,"endColumn":35},{"ruleId":"1063","severity":1,"message":"1064","line":171,"column":29,"nodeType":"1065","endLine":175,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":288,"column":61,"nodeType":"1065","endLine":297,"endColumn":63},{"ruleId":"1050","severity":1,"message":"1093","line":403,"column":24,"nodeType":"1052","messageId":"1053","endLine":403,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":2,"column":28,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1080","line":5,"column":8,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":11},{"ruleId":"1063","severity":1,"message":"1064","line":16,"column":17,"nodeType":"1065","endLine":25,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":35,"column":17,"nodeType":"1065","endLine":44,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":17,"nodeType":"1065","endLine":13,"endColumn":18},{"ruleId":"1046","severity":1,"message":"1047","line":44,"column":45,"nodeType":"1048","messageId":"1049","endLine":44,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":33,"column":38,"nodeType":"1052","messageId":"1053","endLine":33,"endColumn":40},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":27,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1092","line":12,"column":12,"nodeType":"1042","messageId":"1043","endLine":12,"endColumn":25},{"ruleId":"1063","severity":1,"message":"1064","line":28,"column":17,"nodeType":"1065","endLine":38,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":17,"column":17,"nodeType":"1065","endLine":26,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":35,"column":17,"nodeType":"1065","endLine":44,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":21,"nodeType":"1065","endLine":21,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1079","line":5,"column":20,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":29},{"ruleId":"1040","severity":1,"message":"1105","line":30,"column":21,"nodeType":"1042","messageId":"1043","endLine":30,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":32,"column":21,"nodeType":"1052","messageId":"1053","endLine":32,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":63,"column":21,"nodeType":"1065","endLine":67,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":71,"column":21,"nodeType":"1065","endLine":94,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":112,"column":21,"nodeType":"1065","endLine":117,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":125,"column":18,"nodeType":"1052","messageId":"1053","endLine":125,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":127,"column":13,"nodeType":"1065","endLine":132,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1064","line":136,"column":13,"nodeType":"1065","endLine":141,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":232,"column":68,"nodeType":"1048","messageId":"1049","endLine":232,"endColumn":70},{"ruleId":"1040","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1063","severity":1,"message":"1064","line":43,"column":17,"nodeType":"1065","endLine":52,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":54,"column":17,"nodeType":"1065","endLine":54,"endColumn":135},{"ruleId":"1040","severity":1,"message":"1105","line":28,"column":21,"nodeType":"1042","messageId":"1043","endLine":28,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":31,"column":21,"nodeType":"1052","messageId":"1053","endLine":31,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":70,"column":18,"nodeType":"1052","messageId":"1053","endLine":70,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":72,"column":13,"nodeType":"1065","endLine":77,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1064","line":81,"column":13,"nodeType":"1065","endLine":86,"endColumn":15},{"ruleId":"1050","severity":1,"message":"1051","line":27,"column":23,"nodeType":"1052","messageId":"1053","endLine":27,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":63,"column":23,"nodeType":"1052","messageId":"1053","endLine":63,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":95,"column":13,"nodeType":"1052","messageId":"1053","endLine":95,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":35,"column":68,"nodeType":"1048","messageId":"1049","endLine":35,"endColumn":70},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":15,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":13,"column":45,"nodeType":"1052","messageId":"1053","endLine":13,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":17,"column":45,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1081","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":4,"column":22,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":30},{"ruleId":"1040","severity":1,"message":"1081","line":1,"column":8,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":14},{"ruleId":"1046","severity":1,"message":"1047","line":36,"column":45,"nodeType":"1048","messageId":"1049","endLine":36,"endColumn":47},{"ruleId":"1036","replacedBy":"1106"},{"ruleId":"1038","replacedBy":"1107"},{"ruleId":"1040","severity":1,"message":"1041","line":9,"column":27,"nodeType":"1042","messageId":"1043","endLine":9,"endColumn":33},{"ruleId":"1040","severity":1,"message":"1044","line":7,"column":8,"nodeType":"1042","messageId":"1043","endLine":7,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1041","line":8,"column":27,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":33},{"ruleId":"1040","severity":1,"message":"1045","line":8,"column":43,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":48},{"ruleId":"1046","severity":1,"message":"1047","line":21,"column":45,"nodeType":"1048","messageId":"1049","endLine":21,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":51,"column":47,"nodeType":"1052","messageId":"1053","endLine":51,"endColumn":49},{"ruleId":"1046","severity":1,"message":"1047","line":56,"column":53,"nodeType":"1048","messageId":"1049","endLine":56,"endColumn":55},{"ruleId":"1054","severity":1,"message":"1055","line":76,"column":9,"nodeType":"1056","endLine":76,"endColumn":18,"suggestions":"1108"},{"ruleId":"1050","severity":1,"message":"1051","line":78,"column":50,"nodeType":"1052","messageId":"1053","endLine":78,"endColumn":52},{"ruleId":"1040","severity":1,"message":"1058","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":28},{"ruleId":"1040","severity":1,"message":"1059","line":1,"column":30,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":40},{"ruleId":"1040","severity":1,"message":"1060","line":3,"column":10,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":20},{"ruleId":"1040","severity":1,"message":"1061","line":3,"column":22,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":30},{"ruleId":"1040","severity":1,"message":"1062","line":4,"column":10,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":6,"column":22,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":30},{"ruleId":"1063","severity":1,"message":"1064","line":25,"column":17,"nodeType":"1065","endLine":34,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":36,"column":17,"nodeType":"1065","endLine":36,"endColumn":135},{"ruleId":"1040","severity":1,"message":"1066","line":50,"column":7,"nodeType":"1042","messageId":"1043","endLine":50,"endColumn":22},{"ruleId":"1040","severity":1,"message":"1067","line":191,"column":11,"nodeType":"1042","messageId":"1043","endLine":191,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1068","line":194,"column":11,"nodeType":"1042","messageId":"1043","endLine":194,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1069","line":198,"column":11,"nodeType":"1042","messageId":"1043","endLine":198,"endColumn":22},{"ruleId":"1050","severity":1,"message":"1051","line":204,"column":18,"nodeType":"1052","messageId":"1053","endLine":204,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1051","line":204,"column":36,"nodeType":"1052","messageId":"1053","endLine":204,"endColumn":38},{"ruleId":"1050","severity":1,"message":"1051","line":204,"column":53,"nodeType":"1052","messageId":"1053","endLine":204,"endColumn":55},{"ruleId":"1050","severity":1,"message":"1051","line":204,"column":69,"nodeType":"1052","messageId":"1053","endLine":204,"endColumn":71},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":17,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":19},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":31,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":45,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":205,"column":62,"nodeType":"1052","messageId":"1053","endLine":205,"endColumn":64},{"ruleId":"1040","severity":1,"message":"1070","line":208,"column":19,"nodeType":"1042","messageId":"1043","endLine":208,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1064","line":243,"column":17,"nodeType":"1065","endLine":252,"endColumn":19},{"ruleId":"1071","severity":1,"message":"1072","line":271,"column":91,"nodeType":"1073","messageId":"1053","endLine":271,"endColumn":101},{"ruleId":"1040","severity":1,"message":"1074","line":8,"column":8,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1109","line":11,"column":8,"nodeType":"1042","messageId":"1043","endLine":11,"endColumn":12},{"ruleId":"1040","severity":1,"message":"1110","line":12,"column":10,"nodeType":"1042","messageId":"1043","endLine":12,"endColumn":24},{"ruleId":"1040","severity":1,"message":"1111","line":13,"column":10,"nodeType":"1042","messageId":"1043","endLine":13,"endColumn":17},{"ruleId":"1040","severity":1,"message":"1075","line":19,"column":10,"nodeType":"1042","messageId":"1043","endLine":19,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1112","line":20,"column":25,"nodeType":"1042","messageId":"1043","endLine":20,"endColumn":39},{"ruleId":"1046","severity":1,"message":"1047","line":45,"column":37,"nodeType":"1048","messageId":"1049","endLine":45,"endColumn":39},{"ruleId":"1050","severity":1,"message":"1051","line":117,"column":44,"nodeType":"1052","messageId":"1053","endLine":117,"endColumn":46},{"ruleId":"1050","severity":1,"message":"1051","line":5,"column":44,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":46},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":25},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":27,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1050","severity":1,"message":"1051","line":15,"column":44,"nodeType":"1052","messageId":"1053","endLine":15,"endColumn":46},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":10,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":18},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":20,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":29},{"ruleId":"1040","severity":1,"message":"1080","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":11},{"ruleId":"1050","severity":1,"message":"1051","line":8,"column":44,"nodeType":"1052","messageId":"1053","endLine":8,"endColumn":46},{"ruleId":"1040","severity":1,"message":"1081","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":4,"column":22,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":30},{"ruleId":"1040","severity":1,"message":"1081","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1061","line":4,"column":22,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":30},{"ruleId":"1050","severity":1,"message":"1051","line":44,"column":8,"nodeType":"1052","messageId":"1053","endLine":44,"endColumn":10},{"ruleId":"1050","severity":1,"message":"1051","line":50,"column":8,"nodeType":"1052","messageId":"1053","endLine":50,"endColumn":10},{"ruleId":"1050","severity":1,"message":"1051","line":70,"column":34,"nodeType":"1052","messageId":"1053","endLine":70,"endColumn":36},{"ruleId":"1100","severity":1,"message":"1113","line":71,"column":17,"nodeType":"1102","messageId":"1103","endLine":71,"endColumn":31,"fix":"1114"},{"ruleId":"1100","severity":1,"message":"1113","line":75,"column":21,"nodeType":"1102","messageId":"1103","endLine":75,"endColumn":35,"fix":"1115"},{"ruleId":"1040","severity":1,"message":"1116","line":167,"column":10,"nodeType":"1042","messageId":"1043","endLine":167,"endColumn":18},{"ruleId":"1100","severity":1,"message":"1113","line":170,"column":5,"nodeType":"1102","messageId":"1103","endLine":170,"endColumn":19,"fix":"1117"},{"ruleId":"1100","severity":1,"message":"1113","line":22,"column":9,"nodeType":"1102","messageId":"1103","endLine":22,"endColumn":23,"fix":"1118"},{"ruleId":"1100","severity":1,"message":"1113","line":43,"column":9,"nodeType":"1102","messageId":"1103","endLine":43,"endColumn":23,"fix":"1119"},{"ruleId":"1100","severity":1,"message":"1113","line":71,"column":9,"nodeType":"1102","messageId":"1103","endLine":71,"endColumn":23,"fix":"1120"},{"ruleId":"1040","severity":1,"message":"1092","line":96,"column":12,"nodeType":"1042","messageId":"1043","endLine":96,"endColumn":25},{"ruleId":"1040","severity":1,"message":"1121","line":96,"column":27,"nodeType":"1042","messageId":"1043","endLine":96,"endColumn":43},{"ruleId":"1040","severity":1,"message":"1122","line":98,"column":9,"nodeType":"1042","messageId":"1043","endLine":98,"endColumn":18},{"ruleId":"1100","severity":1,"message":"1113","line":634,"column":5,"nodeType":"1102","messageId":"1103","endLine":634,"endColumn":19,"fix":"1123"},{"ruleId":"1100","severity":1,"message":"1113","line":643,"column":5,"nodeType":"1102","messageId":"1103","endLine":643,"endColumn":19,"fix":"1124"},{"ruleId":"1100","severity":1,"message":"1113","line":652,"column":5,"nodeType":"1102","messageId":"1103","endLine":652,"endColumn":19,"fix":"1125"},{"ruleId":"1050","severity":1,"message":"1093","line":661,"column":21,"nodeType":"1052","messageId":"1053","endLine":661,"endColumn":23},{"ruleId":"1100","severity":1,"message":"1113","line":662,"column":9,"nodeType":"1102","messageId":"1103","endLine":662,"endColumn":23,"fix":"1126"},{"ruleId":"1100","severity":1,"message":"1113","line":673,"column":5,"nodeType":"1102","messageId":"1103","endLine":673,"endColumn":19,"fix":"1127"},{"ruleId":"1100","severity":1,"message":"1113","line":684,"column":5,"nodeType":"1102","messageId":"1103","endLine":684,"endColumn":19,"fix":"1128"},{"ruleId":"1100","severity":1,"message":"1113","line":694,"column":5,"nodeType":"1102","messageId":"1103","endLine":694,"endColumn":19,"fix":"1129"},{"ruleId":"1100","severity":1,"message":"1113","line":705,"column":5,"nodeType":"1102","messageId":"1103","endLine":705,"endColumn":19,"fix":"1130"},{"ruleId":"1100","severity":1,"message":"1113","line":716,"column":5,"nodeType":"1102","messageId":"1103","endLine":716,"endColumn":19,"fix":"1131"},{"ruleId":"1100","severity":1,"message":"1113","line":727,"column":5,"nodeType":"1102","messageId":"1103","endLine":727,"endColumn":19,"fix":"1132"},{"ruleId":"1040","severity":1,"message":"1133","line":734,"column":10,"nodeType":"1042","messageId":"1043","endLine":734,"endColumn":37},{"ruleId":"1100","severity":1,"message":"1113","line":737,"column":5,"nodeType":"1102","messageId":"1103","endLine":737,"endColumn":19,"fix":"1134"},{"ruleId":"1040","severity":1,"message":"1135","line":744,"column":10,"nodeType":"1042","messageId":"1043","endLine":744,"endColumn":37},{"ruleId":"1100","severity":1,"message":"1113","line":747,"column":5,"nodeType":"1102","messageId":"1103","endLine":747,"endColumn":19,"fix":"1136"},{"ruleId":"1100","severity":1,"message":"1113","line":757,"column":5,"nodeType":"1102","messageId":"1103","endLine":757,"endColumn":19,"fix":"1137"},{"ruleId":"1100","severity":1,"message":"1113","line":768,"column":5,"nodeType":"1102","messageId":"1103","endLine":768,"endColumn":19,"fix":"1138"},{"ruleId":"1100","severity":1,"message":"1113","line":779,"column":5,"nodeType":"1102","messageId":"1103","endLine":779,"endColumn":19,"fix":"1139"},{"ruleId":"1100","severity":1,"message":"1113","line":789,"column":5,"nodeType":"1102","messageId":"1103","endLine":789,"endColumn":19,"fix":"1140"},{"ruleId":"1100","severity":1,"message":"1113","line":798,"column":5,"nodeType":"1102","messageId":"1103","endLine":798,"endColumn":19,"fix":"1141"},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1080","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1142","line":3,"column":8,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":28},{"ruleId":"1040","severity":1,"message":"1062","line":5,"column":10,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1143","line":6,"column":8,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":27},{"ruleId":"1040","severity":1,"message":"1144","line":7,"column":8,"nodeType":"1042","messageId":"1043","endLine":7,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1091","line":12,"column":9,"nodeType":"1042","messageId":"1043","endLine":12,"endColumn":13},{"ruleId":"1040","severity":1,"message":"1145","line":14,"column":12,"nodeType":"1042","messageId":"1043","endLine":14,"endColumn":21},{"ruleId":"1040","severity":1,"message":"1146","line":14,"column":23,"nodeType":"1042","messageId":"1043","endLine":14,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1051","line":15,"column":46,"nodeType":"1052","messageId":"1053","endLine":15,"endColumn":48},{"ruleId":"1050","severity":1,"message":"1051","line":20,"column":46,"nodeType":"1052","messageId":"1053","endLine":20,"endColumn":48},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1080","line":2,"column":8,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1143","line":4,"column":8,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":27},{"ruleId":"1040","severity":1,"message":"1144","line":5,"column":8,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1147","line":6,"column":10,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":22},{"ruleId":"1040","severity":1,"message":"1148","line":6,"column":36,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":49},{"ruleId":"1040","severity":1,"message":"1149","line":7,"column":8,"nodeType":"1042","messageId":"1043","endLine":7,"endColumn":34},{"ruleId":"1050","severity":1,"message":"1051","line":14,"column":46,"nodeType":"1052","messageId":"1053","endLine":14,"endColumn":48},{"ruleId":"1050","severity":1,"message":"1051","line":19,"column":46,"nodeType":"1052","messageId":"1053","endLine":19,"endColumn":48},{"ruleId":"1040","severity":1,"message":"1084","line":3,"column":10,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1085","line":3,"column":28,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":35},{"ruleId":"1054","severity":1,"message":"1086","line":52,"column":8,"nodeType":"1056","endLine":52,"endColumn":10,"suggestions":"1150"},{"ruleId":"1040","severity":1,"message":"1151","line":19,"column":17,"nodeType":"1042","messageId":"1043","endLine":19,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":74,"column":77,"nodeType":"1052","messageId":"1053","endLine":74,"endColumn":79},{"ruleId":"1050","severity":1,"message":"1051","line":86,"column":77,"nodeType":"1052","messageId":"1053","endLine":86,"endColumn":79},{"ruleId":"1050","severity":1,"message":"1051","line":98,"column":77,"nodeType":"1052","messageId":"1053","endLine":98,"endColumn":79},{"ruleId":"1040","severity":1,"message":"1080","line":8,"column":8,"nodeType":"1042","messageId":"1043","endLine":8,"endColumn":11},{"ruleId":"1063","severity":1,"message":"1064","line":55,"column":25,"nodeType":"1065","endLine":65,"endColumn":27},{"ruleId":"1063","severity":1,"message":"1064","line":77,"column":34,"nodeType":"1065","endLine":77,"endColumn":79},{"ruleId":"1040","severity":1,"message":"1080","line":5,"column":8,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":11},{"ruleId":"1040","severity":1,"message":"1082","line":20,"column":17,"nodeType":"1042","messageId":"1043","endLine":20,"endColumn":22},{"ruleId":"1040","severity":1,"message":"1083","line":11,"column":12,"nodeType":"1042","messageId":"1043","endLine":11,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":165,"column":25,"nodeType":"1065","endLine":175,"endColumn":27},{"ruleId":"1063","severity":1,"message":"1064","line":17,"column":13,"nodeType":"1065","endLine":28,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":29,"column":13,"nodeType":"1065","endLine":37,"endColumn":19},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":25},{"ruleId":"1040","severity":1,"message":"1152","line":13,"column":9,"nodeType":"1042","messageId":"1043","endLine":13,"endColumn":17},{"ruleId":"1063","severity":1,"message":"1064","line":24,"column":25,"nodeType":"1065","endLine":33,"endColumn":27},{"ruleId":"1076","severity":1,"message":"1077","line":40,"column":21,"nodeType":"1065","endLine":48,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":10,"column":17,"nodeType":"1065","endLine":20,"endColumn":19},{"ruleId":"1076","severity":1,"message":"1077","line":22,"column":17,"nodeType":"1065","endLine":31,"endColumn":19},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":17,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":28,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1088","line":2,"column":22,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":32},{"ruleId":"1040","severity":1,"message":"1089","line":2,"column":34,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":40},{"ruleId":"1040","severity":1,"message":"1090","line":2,"column":42,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":49},{"ruleId":"1063","severity":1,"message":"1064","line":15,"column":21,"nodeType":"1065","endLine":20,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1062","line":1,"column":10,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":14},{"ruleId":"1063","severity":1,"message":"1064","line":22,"column":25,"nodeType":"1065","endLine":29,"endColumn":27},{"ruleId":"1076","severity":1,"message":"1077","line":37,"column":21,"nodeType":"1065","endLine":45,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1099","line":47,"column":12,"nodeType":"1042","messageId":"1043","endLine":47,"endColumn":17},{"ruleId":"1063","severity":1,"message":"1064","line":88,"column":17,"nodeType":"1065","endLine":97,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":107,"column":17,"nodeType":"1065","endLine":116,"endColumn":19},{"ruleId":"1100","severity":1,"message":"1101","line":129,"column":39,"nodeType":"1102","messageId":"1103","endLine":129,"endColumn":70,"fix":"1153"},{"ruleId":"1040","severity":1,"message":"1094","line":14,"column":12,"nodeType":"1042","messageId":"1043","endLine":14,"endColumn":32},{"ruleId":"1046","severity":1,"message":"1047","line":29,"column":49,"nodeType":"1048","messageId":"1049","endLine":29,"endColumn":51},{"ruleId":"1046","severity":1,"message":"1047","line":31,"column":53,"nodeType":"1048","messageId":"1049","endLine":31,"endColumn":55},{"ruleId":"1054","severity":1,"message":"1095","line":59,"column":8,"nodeType":"1056","endLine":59,"endColumn":10,"suggestions":"1154"},{"ruleId":"1040","severity":1,"message":"1097","line":61,"column":12,"nodeType":"1042","messageId":"1043","endLine":61,"endColumn":31},{"ruleId":"1046","severity":1,"message":"1047","line":77,"column":45,"nodeType":"1048","messageId":"1049","endLine":77,"endColumn":47},{"ruleId":"1046","severity":1,"message":"1047","line":87,"column":88,"nodeType":"1048","messageId":"1049","endLine":87,"endColumn":90},{"ruleId":"1046","severity":1,"message":"1047","line":88,"column":65,"nodeType":"1048","messageId":"1049","endLine":88,"endColumn":67},{"ruleId":"1054","severity":1,"message":"1095","line":112,"column":8,"nodeType":"1056","endLine":112,"endColumn":10,"suggestions":"1155"},{"ruleId":"1050","severity":1,"message":"1051","line":275,"column":34,"nodeType":"1052","messageId":"1053","endLine":275,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1081","line":10,"column":8,"nodeType":"1042","messageId":"1043","endLine":10,"endColumn":14},{"ruleId":"1050","severity":1,"message":"1051","line":28,"column":33,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":35},{"ruleId":"1063","severity":1,"message":"1064","line":51,"column":29,"nodeType":"1065","endLine":60,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":70,"column":29,"nodeType":"1065","endLine":74,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":75,"column":29,"nodeType":"1065","endLine":79,"endColumn":31},{"ruleId":"1050","severity":1,"message":"1051","line":97,"column":33,"nodeType":"1052","messageId":"1053","endLine":97,"endColumn":35},{"ruleId":"1050","severity":1,"message":"1051","line":132,"column":26,"nodeType":"1052","messageId":"1053","endLine":132,"endColumn":28},{"ruleId":"1063","severity":1,"message":"1064","line":153,"column":29,"nodeType":"1065","endLine":162,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":171,"column":29,"nodeType":"1065","endLine":175,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":176,"column":29,"nodeType":"1065","endLine":180,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":293,"column":61,"nodeType":"1065","endLine":302,"endColumn":63},{"ruleId":"1050","severity":1,"message":"1093","line":390,"column":24,"nodeType":"1052","messageId":"1053","endLine":390,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":15,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":13,"column":45,"nodeType":"1052","messageId":"1053","endLine":13,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":17,"column":45,"nodeType":"1052","messageId":"1053","endLine":17,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1079","line":5,"column":20,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":29},{"ruleId":"1040","severity":1,"message":"1105","line":30,"column":21,"nodeType":"1042","messageId":"1043","endLine":30,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":32,"column":21,"nodeType":"1052","messageId":"1053","endLine":32,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":63,"column":21,"nodeType":"1065","endLine":67,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":71,"column":21,"nodeType":"1065","endLine":94,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":112,"column":21,"nodeType":"1065","endLine":117,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":125,"column":18,"nodeType":"1052","messageId":"1053","endLine":125,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":127,"column":13,"nodeType":"1065","endLine":132,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1064","line":136,"column":13,"nodeType":"1065","endLine":141,"endColumn":15},{"ruleId":"1100","severity":1,"message":"1113","line":166,"column":5,"nodeType":"1102","messageId":"1103","endLine":166,"endColumn":19,"fix":"1156"},{"ruleId":"1100","severity":1,"message":"1113","line":193,"column":5,"nodeType":"1102","messageId":"1103","endLine":193,"endColumn":19,"fix":"1157"},{"ruleId":"1100","severity":1,"message":"1113","line":220,"column":5,"nodeType":"1102","messageId":"1103","endLine":220,"endColumn":19,"fix":"1158"},{"ruleId":"1040","severity":1,"message":"1159","line":22,"column":10,"nodeType":"1042","messageId":"1043","endLine":22,"endColumn":28},{"ruleId":"1040","severity":1,"message":"1091","line":40,"column":9,"nodeType":"1042","messageId":"1043","endLine":40,"endColumn":13},{"ruleId":"1040","severity":1,"message":"1092","line":105,"column":12,"nodeType":"1042","messageId":"1043","endLine":105,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1093","line":681,"column":21,"nodeType":"1052","messageId":"1053","endLine":681,"endColumn":23},{"ruleId":"1040","severity":1,"message":"1133","line":768,"column":10,"nodeType":"1042","messageId":"1043","endLine":768,"endColumn":37},{"ruleId":"1040","severity":1,"message":"1135","line":780,"column":10,"nodeType":"1042","messageId":"1043","endLine":780,"endColumn":37},{"ruleId":"1040","severity":1,"message":"1160","line":21,"column":15,"nodeType":"1042","messageId":"1043","endLine":21,"endColumn":17},{"ruleId":"1100","severity":1,"message":"1113","line":71,"column":9,"nodeType":"1102","messageId":"1103","endLine":71,"endColumn":24,"fix":"1161"},{"ruleId":"1040","severity":1,"message":"1092","line":96,"column":12,"nodeType":"1042","messageId":"1043","endLine":96,"endColumn":25},{"ruleId":"1040","severity":1,"message":"1121","line":96,"column":27,"nodeType":"1042","messageId":"1043","endLine":96,"endColumn":43},{"ruleId":"1040","severity":1,"message":"1122","line":98,"column":9,"nodeType":"1042","messageId":"1043","endLine":98,"endColumn":18},{"ruleId":"1100","severity":1,"message":"1113","line":634,"column":5,"nodeType":"1102","messageId":"1103","endLine":634,"endColumn":20,"fix":"1162"},{"ruleId":"1100","severity":1,"message":"1113","line":643,"column":5,"nodeType":"1102","messageId":"1103","endLine":643,"endColumn":20,"fix":"1163"},{"ruleId":"1100","severity":1,"message":"1113","line":652,"column":5,"nodeType":"1102","messageId":"1103","endLine":652,"endColumn":20,"fix":"1164"},{"ruleId":"1050","severity":1,"message":"1093","line":661,"column":21,"nodeType":"1052","messageId":"1053","endLine":661,"endColumn":23},{"ruleId":"1100","severity":1,"message":"1113","line":662,"column":9,"nodeType":"1102","messageId":"1103","endLine":662,"endColumn":24,"fix":"1165"},{"ruleId":"1100","severity":1,"message":"1113","line":673,"column":5,"nodeType":"1102","messageId":"1103","endLine":673,"endColumn":20,"fix":"1166"},{"ruleId":"1100","severity":1,"message":"1113","line":684,"column":5,"nodeType":"1102","messageId":"1103","endLine":684,"endColumn":20,"fix":"1167"},{"ruleId":"1100","severity":1,"message":"1113","line":694,"column":5,"nodeType":"1102","messageId":"1103","endLine":694,"endColumn":20,"fix":"1168"},{"ruleId":"1100","severity":1,"message":"1113","line":705,"column":5,"nodeType":"1102","messageId":"1103","endLine":705,"endColumn":20,"fix":"1169"},{"ruleId":"1100","severity":1,"message":"1113","line":716,"column":5,"nodeType":"1102","messageId":"1103","endLine":716,"endColumn":20,"fix":"1170"},{"ruleId":"1100","severity":1,"message":"1113","line":727,"column":5,"nodeType":"1102","messageId":"1103","endLine":727,"endColumn":20,"fix":"1171"},{"ruleId":"1040","severity":1,"message":"1133","line":734,"column":10,"nodeType":"1042","messageId":"1043","endLine":734,"endColumn":37},{"ruleId":"1100","severity":1,"message":"1113","line":737,"column":5,"nodeType":"1102","messageId":"1103","endLine":737,"endColumn":20,"fix":"1172"},{"ruleId":"1040","severity":1,"message":"1135","line":744,"column":10,"nodeType":"1042","messageId":"1043","endLine":744,"endColumn":37},{"ruleId":"1100","severity":1,"message":"1113","line":747,"column":5,"nodeType":"1102","messageId":"1103","endLine":747,"endColumn":20,"fix":"1173"},{"ruleId":"1100","severity":1,"message":"1113","line":757,"column":5,"nodeType":"1102","messageId":"1103","endLine":757,"endColumn":20,"fix":"1174"},{"ruleId":"1100","severity":1,"message":"1113","line":768,"column":5,"nodeType":"1102","messageId":"1103","endLine":768,"endColumn":20,"fix":"1175"},{"ruleId":"1100","severity":1,"message":"1113","line":779,"column":5,"nodeType":"1102","messageId":"1103","endLine":779,"endColumn":20,"fix":"1176"},{"ruleId":"1100","severity":1,"message":"1113","line":789,"column":5,"nodeType":"1102","messageId":"1103","endLine":789,"endColumn":20,"fix":"1177"},{"ruleId":"1100","severity":1,"message":"1113","line":798,"column":5,"nodeType":"1102","messageId":"1103","endLine":798,"endColumn":20,"fix":"1178"},{"ruleId":"1040","severity":1,"message":"1179","line":25,"column":20,"nodeType":"1042","messageId":"1043","endLine":25,"endColumn":31},{"ruleId":"1040","severity":1,"message":"1179","line":25,"column":20,"nodeType":"1042","messageId":"1043","endLine":25,"endColumn":31},{"ruleId":"1063","severity":1,"message":"1064","line":10,"column":17,"nodeType":"1065","endLine":10,"endColumn":135},{"ruleId":"1040","severity":1,"message":"1062","line":6,"column":10,"nodeType":"1042","messageId":"1043","endLine":6,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1062","line":5,"column":10,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":14},{"ruleId":"1100","severity":1,"message":"1101","line":66,"column":39,"nodeType":"1102","messageId":"1103","endLine":66,"endColumn":70,"fix":"1180"},{"ruleId":"1040","severity":1,"message":"1105","line":25,"column":21,"nodeType":"1042","messageId":"1043","endLine":25,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":28,"column":21,"nodeType":"1052","messageId":"1053","endLine":28,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":17,"nodeType":"1065","endLine":13,"endColumn":18},{"ruleId":"1046","severity":1,"message":"1047","line":44,"column":45,"nodeType":"1048","messageId":"1049","endLine":44,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1079","line":2,"column":17,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":26},{"ruleId":"1040","severity":1,"message":"1078","line":2,"column":28,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1080","line":5,"column":8,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":11},{"ruleId":"1063","severity":1,"message":"1064","line":16,"column":17,"nodeType":"1065","endLine":25,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":35,"column":17,"nodeType":"1065","endLine":44,"endColumn":19},{"ruleId":"1040","severity":1,"message":"1081","line":1,"column":8,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":14},{"ruleId":"1046","severity":1,"message":"1047","line":36,"column":45,"nodeType":"1048","messageId":"1049","endLine":36,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1061","line":2,"column":22,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":30},{"ruleId":"1050","severity":1,"message":"1093","line":12,"column":14,"nodeType":"1052","messageId":"1053","endLine":12,"endColumn":16},{"ruleId":"1040","severity":1,"message":"1061","line":2,"column":22,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":30},{"ruleId":"1050","severity":1,"message":"1093","line":11,"column":18,"nodeType":"1052","messageId":"1053","endLine":11,"endColumn":20},{"ruleId":"1040","severity":1,"message":"1060","line":2,"column":10,"nodeType":"1042","messageId":"1043","endLine":2,"endColumn":20},{"ruleId":"1050","severity":1,"message":"1051","line":27,"column":23,"nodeType":"1052","messageId":"1053","endLine":27,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":63,"column":23,"nodeType":"1052","messageId":"1053","endLine":63,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":95,"column":18,"nodeType":"1052","messageId":"1053","endLine":95,"endColumn":20},{"ruleId":"1040","severity":1,"message":"1062","line":1,"column":10,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1181","line":3,"column":8,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":13},{"ruleId":"1100","severity":1,"message":"1113","line":52,"column":5,"nodeType":"1102","messageId":"1103","endLine":52,"endColumn":19,"fix":"1182"},{"ruleId":"1063","severity":1,"message":"1064","line":10,"column":17,"nodeType":"1065","endLine":10,"endColumn":135},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":21,"nodeType":"1065","endLine":21,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":33,"column":38,"nodeType":"1052","messageId":"1053","endLine":33,"endColumn":40},{"ruleId":"1050","severity":1,"message":"1051","line":5,"column":42,"nodeType":"1052","messageId":"1053","endLine":5,"endColumn":44},{"ruleId":"1050","severity":1,"message":"1093","line":36,"column":42,"nodeType":"1052","messageId":"1053","endLine":36,"endColumn":44},{"ruleId":"1040","severity":1,"message":"1079","line":1,"column":27,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":36},{"ruleId":"1040","severity":1,"message":"1092","line":13,"column":12,"nodeType":"1042","messageId":"1043","endLine":13,"endColumn":25},{"ruleId":"1063","severity":1,"message":"1064","line":34,"column":25,"nodeType":"1065","endLine":42,"endColumn":27},{"ruleId":"1076","severity":1,"message":"1077","line":58,"column":21,"nodeType":"1065","endLine":66,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":10,"column":17,"nodeType":"1065","endLine":10,"endColumn":135},{"ruleId":"1040","severity":1,"message":"1105","line":26,"column":21,"nodeType":"1042","messageId":"1043","endLine":26,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":29,"column":21,"nodeType":"1052","messageId":"1053","endLine":29,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":46,"column":29,"nodeType":"1065","endLine":51,"endColumn":31},{"ruleId":"1040","severity":1,"message":"1105","line":28,"column":21,"nodeType":"1042","messageId":"1043","endLine":28,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":31,"column":21,"nodeType":"1052","messageId":"1053","endLine":31,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":70,"column":18,"nodeType":"1052","messageId":"1053","endLine":70,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":72,"column":13,"nodeType":"1065","endLine":77,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1064","line":81,"column":13,"nodeType":"1065","endLine":86,"endColumn":15},{"ruleId":"1040","severity":1,"message":"1079","line":5,"column":20,"nodeType":"1042","messageId":"1043","endLine":5,"endColumn":29},{"ruleId":"1040","severity":1,"message":"1105","line":30,"column":21,"nodeType":"1042","messageId":"1043","endLine":30,"endColumn":33},{"ruleId":"1050","severity":1,"message":"1093","line":32,"column":21,"nodeType":"1052","messageId":"1053","endLine":32,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":63,"column":21,"nodeType":"1065","endLine":67,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":71,"column":21,"nodeType":"1065","endLine":94,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":112,"column":21,"nodeType":"1065","endLine":117,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":125,"column":18,"nodeType":"1052","messageId":"1053","endLine":125,"endColumn":20},{"ruleId":"1063","severity":1,"message":"1064","line":127,"column":13,"nodeType":"1065","endLine":132,"endColumn":15},{"ruleId":"1063","severity":1,"message":"1064","line":136,"column":13,"nodeType":"1065","endLine":141,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":232,"column":68,"nodeType":"1048","messageId":"1049","endLine":232,"endColumn":70},{"ruleId":"1040","severity":1,"message":"1081","line":4,"column":8,"nodeType":"1042","messageId":"1043","endLine":4,"endColumn":14},{"ruleId":"1063","severity":1,"message":"1064","line":43,"column":17,"nodeType":"1065","endLine":52,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":54,"column":17,"nodeType":"1065","endLine":54,"endColumn":135},{"ruleId":"1050","severity":1,"message":"1051","line":27,"column":23,"nodeType":"1052","messageId":"1053","endLine":27,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":63,"column":23,"nodeType":"1052","messageId":"1053","endLine":63,"endColumn":25},{"ruleId":"1050","severity":1,"message":"1051","line":95,"column":13,"nodeType":"1052","messageId":"1053","endLine":95,"endColumn":15},{"ruleId":"1046","severity":1,"message":"1047","line":35,"column":68,"nodeType":"1048","messageId":"1049","endLine":35,"endColumn":70},{"ruleId":"1040","severity":1,"message":"1078","line":1,"column":15,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":23},{"ruleId":"1050","severity":1,"message":"1051","line":12,"column":45,"nodeType":"1052","messageId":"1053","endLine":12,"endColumn":47},{"ruleId":"1050","severity":1,"message":"1051","line":16,"column":45,"nodeType":"1052","messageId":"1053","endLine":16,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1081","line":1,"column":8,"nodeType":"1042","messageId":"1043","endLine":1,"endColumn":14},{"ruleId":"1040","severity":1,"message":"1080","line":3,"column":8,"nodeType":"1042","messageId":"1043","endLine":3,"endColumn":11},{"ruleId":"1063","severity":1,"message":"1064","line":11,"column":21,"nodeType":"1065","endLine":15,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1064","line":17,"column":17,"nodeType":"1065","endLine":26,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":35,"column":17,"nodeType":"1065","endLine":44,"endColumn":19},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":21,"nodeType":"1065","endLine":21,"endColumn":23},{"ruleId":"1063","severity":1,"message":"1064","line":9,"column":21,"nodeType":"1065","endLine":21,"endColumn":23},{"ruleId":"1100","severity":1,"message":"1113","line":30,"column":5,"nodeType":"1102","messageId":"1103","endLine":30,"endColumn":19,"fix":"1183"},"no-native-reassign",["1184"],"no-negated-in-lhs",["1185"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'MobileRegistration' is defined but never used.","'Route' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'currentUser.email' and 'currentUser.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["1186"],"'useCallback' is defined but never used.","'useContext' is defined but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'currenciesBlood' is assigned a value but never used.","'weightChange' is assigned a value but never used.","'heightChange' is assigned a value but never used.","'bloodChange' is assigned a value but never used.","'res' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'Kid' is defined but never used.","'user' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useState' is defined but never used.","'useEffect' is defined but never used.","'app' is defined but never used.","'Delete' is defined but never used.","'phone' is assigned a value but never used.","'preview' is assigned a value but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'patientResultRef'. Either include it or remove the dependency array.",["1187"],"'ButtonItem' is defined but never used.","'Amount' is defined but never used.","'Patient' is defined but never used.","'test' is assigned a value but never used.","'fileGenerated' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'protocolsToTerapists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTest'. Either include it or remove the dependency array.",["1188"],"'stimulusToTerapists' is assigned a value but never used.",["1189"],"'child' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property IsActive.","MemberExpression","unexpectedWhitespace",{"range":"1190","text":"1191"},"'setColorItem' is assigned a value but never used.",["1184"],["1185"],["1192"],"'Logo' is defined but never used.","'GoPrimitiveDot' is defined but never used.","'signOut' is defined but never used.","'setInputSearch' is assigned a value but never used.","Unexpected whitespace before property collection.",{"range":"1193","text":"1191"},{"range":"1194","text":"1191"},"'addProto' is defined but never used.",{"range":"1195","text":"1191"},{"range":"1196","text":"1191"},{"range":"1197","text":"1191"},{"range":"1198","text":"1191"},"'setFileGenerated' is assigned a value but never used.","'userEmail' is assigned a value but never used.",{"range":"1199","text":"1191"},{"range":"1200","text":"1191"},{"range":"1201","text":"1191"},{"range":"1202","text":"1191"},{"range":"1203","text":"1191"},{"range":"1204","text":"1191"},{"range":"1205","text":"1191"},{"range":"1206","text":"1191"},{"range":"1207","text":"1191"},{"range":"1208","text":"1191"},"'setCorrectionProcedureStep3' is defined but never used.",{"range":"1209","text":"1191"},"'setCorrectionProcedureStep2' is defined but never used.",{"range":"1210","text":"1191"},{"range":"1211","text":"1191"},{"range":"1212","text":"1191"},{"range":"1213","text":"1191"},{"range":"1214","text":"1191"},{"range":"1215","text":"1191"},"'ProtocolItemTemplate' is defined but never used.","'ArrowHeaderTemplate' is defined but never used.","'HeaderHomeTemplate' is defined but never used.","'protocols' is assigned a value but never used.","'setProtocols' is assigned a value but never used.","'DefaultTheme' is defined but never used.","'PaperProvider' is defined but never used.","'ProgramTemplateViewPrivate' is defined but never used.",["1216"],"'setSex' is assigned a value but never used.","'someText' is assigned a value but never used.",{"range":"1217","text":"1191"},["1218"],["1219"],{"range":"1220","text":"1191"},{"range":"1221","text":"1191"},{"range":"1222","text":"1191"},"'RemoveCopiedStatus' is defined but never used.","'db' is assigned a value but never used.",{"range":"1223","text":"1191"},{"range":"1224","text":"1191"},{"range":"1225","text":"1191"},{"range":"1226","text":"1191"},{"range":"1227","text":"1191"},{"range":"1228","text":"1191"},{"range":"1229","text":"1191"},{"range":"1230","text":"1191"},{"range":"1231","text":"1191"},{"range":"1232","text":"1191"},{"range":"1233","text":"1191"},{"range":"1234","text":"1191"},{"range":"1235","text":"1191"},{"range":"1236","text":"1191"},{"range":"1237","text":"1191"},{"range":"1238","text":"1191"},{"range":"1239","text":"1191"},{"range":"1240","text":"1191"},"'setStimulus' is assigned a value but never used.",{"range":"1241","text":"1191"},"'Arrow' is defined but never used.",{"range":"1242","text":"1191"},{"range":"1243","text":"1191"},"no-global-assign","no-unsafe-negation",{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1248","fix":"1250"},[4701,4703],".",{"desc":"1244","fix":"1251"},[2251,2253],[2514,2516],[6820,6822],[750,752],[1345,1347],[2243,2245],[31742,31744],[32057,32059],[32372,32374],[32710,32712],[33103,33105],[33411,33413],[33729,33731],[34061,34063],[34393,34395],[34722,34724],[35056,35058],[35399,35401],[35742,35744],[36095,36097],[36447,36449],[36745,36747],[37057,37059],{"desc":"1246","fix":"1252"},[4701,4703],{"desc":"1248","fix":"1253"},{"desc":"1248","fix":"1254"},[5514,5516],[6663,6665],[7529,7531],[2336,2339],[31910,31913],[32296,32299],[32682,32685],[33091,33094],[33555,33558],[33934,33937],[34323,34326],[34726,34729],[35129,35132],[35529,35532],[35934,35937],[36348,36351],[36762,36765],[37186,37189],[37609,37612],[37978,37981],[38361,38364],[2345,2347],[1593,1595],[1023,1025],"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, history]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [patientResultRef]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [listTest]",{"range":"1259","text":"1260"},{"range":"1261","text":"1260"},{"range":"1262","text":"1256"},{"range":"1263","text":"1258"},{"range":"1264","text":"1260"},{"range":"1265","text":"1260"},[2929,2938],"[currentUser.email, currentUser.emailVerified, history]",[1657,1659],"[patientResultRef]",[2281,2283],"[listTest]",[4523,4525],[2929,2938],[1657,1659],[2281,2283],[4523,4525]]