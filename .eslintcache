[{"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\index.js":"1","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\App.js":"2","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Authentification\\ForgotPassword.js":"3","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Authentification\\SignIn2.js":"4","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js":"5","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js":"6","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js":"7","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js":"8","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx":"9","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx":"10","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx":"11","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx":"12","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\HistoryProtocolList.jsx":"13","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx":"14","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx":"15","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\VBMapp.jsx":"16","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx":"17","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx":"18","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx":"19","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx":"20","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx":"21","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx":"22","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js":"23","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js":"24","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js":"25","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js":"26","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js":"27","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js":"28","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js":"29","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js":"30","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Patient\\SupervisorTherapistNav.js":"31","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js":"32","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js":"33","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx":"34","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx":"35","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx":"36","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx":"37","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx":"38","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx":"39","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx":"40","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx":"41","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx":"42","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\HistoryProtocolItem.jsx":"43","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx":"44","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx":"45","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx":"46","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx":"47","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx":"48","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx":"49","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx":"50","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx":"51","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\ProgramElement\\Stage.jsx":"52","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx":"53","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx":"54","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx":"55","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx":"56","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx":"57","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx":"58","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx":"59","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx":"60","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js":"61","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx":"62","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx":"63","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx":"64","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx":"65","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx":"66","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx":"67","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmap.jsx":"68","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx":"69","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx":"70","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx":"71","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\ProgramElement\\StageElement.jsx":"72","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx":"73","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmapFile.jsx":"74","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ArrowHeader\\TreeArrowHeader.jsx":"75","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ArrowHeader\\Arrow.jsx":"76"},{"size":543,"mtime":1623230761000,"results":"77","hashOfConfig":"78"},{"size":5491,"mtime":1623230761000,"results":"79","hashOfConfig":"78"},{"size":4183,"mtime":1623230761000,"results":"80","hashOfConfig":"78"},{"size":6257,"mtime":1623230761000,"results":"81","hashOfConfig":"78"},{"size":2420,"mtime":1623230761000,"results":"82","hashOfConfig":"78"},{"size":1011,"mtime":1623230761000,"results":"83","hashOfConfig":"78"},{"size":20726,"mtime":1623230761000,"results":"84","hashOfConfig":"78"},{"size":751,"mtime":1623230761000,"results":"85","hashOfConfig":"78"},{"size":2387,"mtime":1623230761000,"results":"86","hashOfConfig":"78"},{"size":292,"mtime":1623230761000,"results":"87","hashOfConfig":"78"},{"size":906,"mtime":1623230761000,"results":"88","hashOfConfig":"78"},{"size":410,"mtime":1623230761000,"results":"89","hashOfConfig":"78"},{"size":2617,"mtime":1623230761000,"results":"90","hashOfConfig":"78"},{"size":2423,"mtime":1623230761000,"results":"91","hashOfConfig":"78"},{"size":2485,"mtime":1623230761000,"results":"92","hashOfConfig":"78"},{"size":3758,"mtime":1623230761000,"results":"93","hashOfConfig":"78"},{"size":591,"mtime":1623230761000,"results":"94","hashOfConfig":"78"},{"size":595,"mtime":1623230761000,"results":"95","hashOfConfig":"78"},{"size":9476,"mtime":1623230761000,"results":"96","hashOfConfig":"78"},{"size":36988,"mtime":1623611551980,"results":"97","hashOfConfig":"78"},{"size":872,"mtime":1623230761000,"results":"98","hashOfConfig":"78"},{"size":864,"mtime":1623610067123,"results":"99","hashOfConfig":"78"},{"size":415,"mtime":1623230761000,"results":"100","hashOfConfig":"78"},{"size":3270,"mtime":1623230761000,"results":"101","hashOfConfig":"78"},{"size":7930,"mtime":1623230761000,"results":"102","hashOfConfig":"78"},{"size":7700,"mtime":1623230761000,"results":"103","hashOfConfig":"78"},{"size":5314,"mtime":1623230761000,"results":"104","hashOfConfig":"78"},{"size":1054,"mtime":1623230761000,"results":"105","hashOfConfig":"78"},{"size":2308,"mtime":1623230761000,"results":"106","hashOfConfig":"78"},{"size":983,"mtime":1623230761000,"results":"107","hashOfConfig":"78"},{"size":999,"mtime":1623230761000,"results":"108","hashOfConfig":"78"},{"size":2521,"mtime":1623230761000,"results":"109","hashOfConfig":"78"},{"size":8381,"mtime":1623230761000,"results":"110","hashOfConfig":"78"},{"size":1001,"mtime":1623230761000,"results":"111","hashOfConfig":"78"},{"size":28718,"mtime":1623611765382,"results":"112","hashOfConfig":"78"},{"size":21807,"mtime":1623610127751,"results":"113","hashOfConfig":"78"},{"size":11460,"mtime":1623230761000,"results":"114","hashOfConfig":"78"},{"size":21876,"mtime":1623230761000,"results":"115","hashOfConfig":"78"},{"size":17915,"mtime":1623230761000,"results":"116","hashOfConfig":"78"},{"size":4817,"mtime":1623230761000,"results":"117","hashOfConfig":"78"},{"size":1745,"mtime":1623230761000,"results":"118","hashOfConfig":"78"},{"size":3543,"mtime":1623230761000,"results":"119","hashOfConfig":"78"},{"size":1033,"mtime":1623230761000,"results":"120","hashOfConfig":"78"},{"size":3542,"mtime":1623230761000,"results":"121","hashOfConfig":"78"},{"size":4199,"mtime":1623230761000,"results":"122","hashOfConfig":"78"},{"size":2065,"mtime":1623230761000,"results":"123","hashOfConfig":"78"},{"size":3661,"mtime":1623230761000,"results":"124","hashOfConfig":"78"},{"size":1242,"mtime":1623230761000,"results":"125","hashOfConfig":"78"},{"size":38710,"mtime":1623610191474,"results":"126","hashOfConfig":"78"},{"size":20235,"mtime":1623610145421,"results":"127","hashOfConfig":"78"},{"size":20343,"mtime":1623610163268,"results":"128","hashOfConfig":"78"},{"size":1549,"mtime":1623230761000,"results":"129","hashOfConfig":"78"},{"size":2611,"mtime":1623230761000,"results":"130","hashOfConfig":"78"},{"size":1532,"mtime":1623230761000,"results":"131","hashOfConfig":"78"},{"size":2684,"mtime":1623230761000,"results":"132","hashOfConfig":"78"},{"size":7925,"mtime":1623230761000,"results":"133","hashOfConfig":"78"},{"size":4385,"mtime":1623230761000,"results":"134","hashOfConfig":"78"},{"size":2240,"mtime":1623230761000,"results":"135","hashOfConfig":"78"},{"size":1174,"mtime":1623230761000,"results":"136","hashOfConfig":"78"},{"size":1312,"mtime":1623230761000,"results":"137","hashOfConfig":"78"},{"size":996,"mtime":1623230761000,"results":"138","hashOfConfig":"78"},{"size":1701,"mtime":1623230761000,"results":"139","hashOfConfig":"78"},{"size":2189,"mtime":1623230761000,"results":"140","hashOfConfig":"78"},{"size":9196,"mtime":1623230761000,"results":"141","hashOfConfig":"78"},{"size":2961,"mtime":1623230761000,"results":"142","hashOfConfig":"78"},{"size":1638,"mtime":1623230761000,"results":"143","hashOfConfig":"78"},{"size":1296,"mtime":1623230761000,"results":"144","hashOfConfig":"78"},{"size":5122,"mtime":1623230761000,"results":"145","hashOfConfig":"78"},{"size":1874,"mtime":1623230761000,"results":"146","hashOfConfig":"78"},{"size":2496,"mtime":1623230761000,"results":"147","hashOfConfig":"78"},{"size":1177,"mtime":1623230761000,"results":"148","hashOfConfig":"78"},{"size":2100,"mtime":1623230761000,"results":"149","hashOfConfig":"78"},{"size":1330,"mtime":1623230761000,"results":"150","hashOfConfig":"78"},{"size":4134,"mtime":1623230761000,"results":"151","hashOfConfig":"78"},{"size":1098,"mtime":1623230761000,"results":"152","hashOfConfig":"78"},{"size":757,"mtime":1623230761000,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s9e1s1",{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":2,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373"},"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\index.js",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\App.js",["374"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/Authentification/SignIn2'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgotPassword from './Components/Authentification/ForgotPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport RenderProgram from './Components/Program/ProgramBranching'\r\nimport {AuthProvider} from './Firebase/AuthSetup/Auth'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoRender from './Components/PatientInfo/PatientInfoBranching'\r\nimport RenderProgramList from './Components/ProtocolList/ProtocolListBranching'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nimport RegistrationPatient from './Components/RegistrationPatient/RegPatientPage'\r\nimport ProgramTemplate from './Components/ProgramTemplate/ProgramTemplate'\r\nimport HistoryProtocolList from './Components/ProtocolList/HistoryProtocolList'\r\nimport VBMapp from './Components/VBMapp/VBMapp'\r\nimport ProgramTemplatePublic from './Components/ProgramTemplate/ProgramTemplatePublic'\r\nimport ProtocolListTemplate from './Components/HomeTemplate/TemplateProtocolList/ProtocolListTemplate'\r\nimport ProgramEditableTemplate from './Components/HomeTemplate/EditProgramTemplate/ProgramEditableTemplate'\r\nimport ListMoreInfoTemplate from './Components/HomeTemplate/TemplateMoreInfo/ListMoreInfoTemplate'\r\nimport ProgramTemplateView from './Components/HomeTemplate/TemplateMoreInfo/ProgramTemplateView'\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <HashRouter>\r\n                <AuthProvider>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgotPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={RenderProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={RenderProgramList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/history-protocol-list\"\r\n                            component={HistoryProtocolList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoRender}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={TherapyResult}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient_registration\"\r\n                            component={RegistrationPatient}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template\"\r\n                            component={ProgramTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/vb-mapp\"\r\n                            component={VBMapp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/public-template\"\r\n                            component={ProgramTemplatePublic}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/create-template\"\r\n                            component={ProtocolListTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template-edit\"\r\n                            component={ProgramEditableTemplate}\r\n                        />\r\n\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info\"\r\n                            component={ListMoreInfoTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info-protocol\"\r\n                            component={ProgramTemplateView}\r\n                        />\r\n                    </Switch>\r\n                </AuthProvider>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Authentification\\ForgotPassword.js",["375","376"],"import React from 'react'\nimport {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport app from '../../Firebase/firebase'\nimport toast, {Toaster} from 'react-hot-toast'\nimport './SignIn2.css'\nimport './ForgotPassword.css'\nimport Logo from '../../assets/image 27.svg'\nimport Email from '../../assets/email_signup.svg'\n\nfunction recover(Email, history) {\n    app.auth()\n        .sendPasswordResetEmail(Email)\n        .then(function (user) {\n            toast.loading('Будь ласка, перевірте свою електронну пошту...')\n            history.push('/')\n        })\n        .catch(function (e) {\n            toast.error('Помилка')\n        })\n}\n\nfunction ForgotPassword() {\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    console.log(email)\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-lg-6 signin-image-container\">\n                        <img\n                            src={Logo}\n                            alt=\"big logo\"\n                            class=\"authentification_logo\"\n                        />\n                    </div>\n                    <div class=\"col-12 col-sm-9 col-lg-6 signin-content-container row justify-content-centercol-12 col-sm-9 col-lg-6 signin-content-container row justify-content-center\">\n                        <div className=\"col-12 text-align-center recover-password\">\n                            Відновлення паролю\n                        </div>\n                        <div className=\"col-8 forgot-instructions\">\n                            Якщо Ви забули свій пароль, будь ласка, введіть\n                            поточну електронну адресу і перевірте свою пошту.\n                            Вам має прийти лист з посиланням,за яким Ви повинні\n                            перейти і ввести новий пароль.\n                        </div>\n                        <form\n                            class=\"col-9 col-sm-8 col-lg-7 row signin_form\"\n                            onSubmit={() => recover(email, history)}\n                        >\n                            <div class=\"col-12 row input-image\">\n                                <img\n                                    src={Email}\n                                    alt=\"envelope image\"\n                                    className=\"signin-icons col-4 col-lg-3\"\n                                />\n                                <input\n                                    type=\"text\"\n                                    id=\"fname\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"transparent-input col-8 col-lg-9\"\n                                />\n                                <hr className=\"input_line forgot-input-line col-12\" />\n                            </div>\n                            <input\n                                class=\"signin-input col-11 go-up\"\n                                type=\"submit\"\n                                value=\"Відправити\"\n                            />\n                        </form>\n                        <Toaster\n                            position=\"bottom-top\"\n                            reverseOrder={false}\n                            toastOptions={{\n                                style: {\n                                    minWidth: '430px',\n                                    minHeight: '60px',\n                                    paddingLeft: '20px',\n                                },\n                                loading: {\n                                    duration: 5000,\n                                    icon: '✉️',\n                                },\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ForgotPassword\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Authentification\\SignIn2.js",["377","378","379","380","381"],"import React, {useCallback, useContext} from 'react'\nimport {withRouter, Redirect} from 'react-router'\nimport app from '../../Firebase/firebase'\nimport './SignIn2.css'\nimport {AuthContext} from '../../Firebase/AuthSetup/Auth'\nimport {Link} from 'react-router-dom'\nimport MobileHeader from '../Header/MobileHeader'\nimport toast, {Toaster} from 'react-hot-toast'\nimport Logo from '../../assets/image 27.svg'\nimport Email from '../../assets/email_signup.svg'\nimport Password from '../../assets/password_signup.svg'\n\nfunction SignIn({history}) {\n    const {currentUser} = useContext(AuthContext)\n    const handleLogin = useCallback(\n        async (event) => {\n            event.preventDefault()\n            const {email, password} = event.target.elements\n\n            \n            try {\n                await app\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value)\n                if (currentUser.emailVerified == true) {\n                    localStorage.setItem('proffesion',\"Supervisors\")\n                    localStorage.setItem('user', currentUser.email)\n                    history.push('/home')\n                } else {\n                    toast.loading(\n                        'Будь ласка, підтвердьте свою електронну пошту...'\n                    )\n                }\n            } catch (error) {\n                if (!error.toString().includes('TypeError')) {\n                    toast.error(error.toString())\n                }\n            }\n        },\n        [history]\n    )\n    if (currentUser && currentUser.emailVerified == true) {\n        localStorage.setItem('proffesion',\"Supervisors\")\n        localStorage.setItem('user', currentUser.email)\n        return <Redirect to=\"/home\" />\n    }\n    return (\n        <>\n            <MobileHeader />\n\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col-lg-6 signin-image-container\">\n                        <img\n                            src={Logo}\n                            alt=\"big logo\"\n                            class=\"authentification_logo\"\n                        />\n                    </div>\n\n                    <div class=\"col-12 col-sm-9 col-lg-6 signin-content-container row justify-content-center\">\n                        <div class=\"col-12 text-align-center enter-site\">\n                            {' '}\n                            Увійти на сайт\n                        </div>\n                        <form\n                            class=\"col-9 col-sm-8 col-lg-7 row justify-content-center signin_form\"\n                            onSubmit={handleLogin}\n                        >\n                            <div class=\"col-12 row input-image\">\n                                <img\n                                    src={Email}\n                                    alt=\"envelope image\"\n                                    className=\"signin-icons col-4 col-lg-3\"\n                                />\n                                <input\n                                    type=\"text\"\n                                    id=\"fname\"\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"transparent-input col-8 col-lg-9\"\n                                />\n                                <hr className=\"input_line col-12\" />\n                            </div>\n                            <div class=\"col-12 row input-image\">\n                                <img\n                                    src={Password}\n                                    alt=\"envelope image\"\n                                    className=\"signin-icons  col-4 col-lg-3\"\n                                />\n                                <input\n                                    type=\"password\"\n                                    id=\"lname\"\n                                    name=\"password\"\n                                    placeholder=\"Пароль\"\n                                    className=\"transparent-input col-8 col-lg-9\"\n                                />\n                                <hr className=\"input_line signin-input-line col-12\" />\n                            </div>\n                            <input\n                                class=\"signin-input signin-position-input col-11\"\n                                type=\"submit\"\n                                value=\"Увійти\"\n                            />\n                        </form>\n                        <div className=\"element-align-center still_no_acc\">\n                            <span>Досі немає акаунту? &nbsp;&nbsp;&nbsp;</span>{' '}\n                            <Link className=\"login_link_reg\" to=\"/registration\">\n                                Зареєструватись\n                            </Link>\n                        </div>\n                        <div className=\"element-align-center forgot_password\">\n                            <span>Забули пароль? &nbsp;&nbsp;&nbsp;</span>{' '}\n                            <Link\n                                className=\"login_link_reg\"\n                                to=\"/forgetPassword\"\n                            >\n                                Відновити пароль\n                            </Link>\n                        </div>\n                        <Toaster\n                            position=\"bottom-top\"\n                            reverseOrder={false}\n                            toastOptions={{\n                                style: {\n                                    minWidth: '430px',\n                                    minHeight: '60px',\n                                    paddingLeft: '20px',\n                                },\n                                loading: {\n                                    duration: 5000,\n                                    icon: '✉️',\n                                },\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default withRouter(SignIn)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js",["382","383"],"import SignUpForm1 from './SignUpForm1'\nimport SignUpForm2 from './SignUpForm2'\nimport SignUpForm4 from './SignUpForm4'\nimport PrivateRouteToReg from '../../Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {HashRouter} from 'react-router-dom'\nimport Logo from '../../assets/image 27.svg'\nimport './../Authentification/SignIn2.css'\nimport './SignUp.css'\n\nfunction SignUp() {\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <img\n                        src={Logo}\n                        alt=\"big logo\"\n                        class=\"signup_logo col-8 col-md-5\"\n                    />\n                </div>\n                <div className=\"row  justify-content-center\">\n                    <span className=\"sign-up-text col-12 col-md-8 col-xl-6 text-align-center\">\n                        Реєстрація\n                    </span>\n                </div>\n                <div class=\"row justify-content-center\">\n                    <div className=\"col-12 col-md-8 col-xl-6 row signup-form justify-content-center\">\n                        <div className=\"col-12 row sign-up-cont justify-content-center\">\n                            <HashRouter className=\"col-12 row\">\n                                <Switch>\n                                    <PrivateRouteToReg\n                                        exact\n                                        path=\"/registration\"\n                                        component={SignUpForm1}\n                                    />\n                                    <PrivateRouteToReg\n                                        exact\n                                        path=\"/registration/signup1\"\n                                        component={SignUpForm2}\n                                    />\n                                    <PrivateRouteToReg\n                                        exact\n                                        path=\"/registration/signup2\"\n                                        component={SignUpForm4}\n                                    />\n                                </Switch>\n                            </HashRouter>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignUp\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js",["384","385","386"],"import React from 'react'\nimport Header from '../Header/Header'\nimport './TherapyResult.css'\nimport Arrow from '../../assets/arrow.png'\nimport {Link} from 'react-router-dom'\nimport {withRouter, Redirect} from 'react-router'\nimport PaginationRounded from './Pagination'\nimport MobileHeader from '../Header/MobileHeader'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\nfunction TherapyResult({history}) {\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            \n          <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Результати терапії\"}/>\n            <div className=\"container_file\">\n                <p class=\"choose-file-title\">\n                    Натисніть на файл, щоб завантажити його\n                </p>\n                <br />\n                <br />\n                <PaginationRounded history={history} />\n            </div>\n        </>\n    )\n}\n\nexport default withRouter(TherapyResult)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js",["387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { useState, createRef } from 'react'\nimport SimpleHeader from '../Header/SimpleHeader'\nimport { Link } from 'react-router-dom'\nimport Arrow from '../../assets/arrow.png'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Avatar, Button as MuiButton } from '@material-ui/core'\nimport { spacing } from '@material-ui/system'\nimport styled from 'styled-components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport app from '../../Firebase/firebase'\nimport './RegPatientPage.css'\nimport default_avatar from '../../assets/default_avatar.png'\nimport Redirect, { withRouter } from 'react-router'\nimport MobileHeader from '../Header/MobileHeader'\nimport toast, { Toaster } from 'react-hot-toast'\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n/* -\n----------------------------\n|  Style components block  |\n----------------------------\n */\nconst Button = styled(MuiButton)(spacing)\n\nconst CenteredContent = styled.div`\n    text-align: center;\n`\n\n/* -\n------------------------\n|    Main component    |\n------------------------\n */\n\nconst currenciesGenders = [\n    {\n        value: 'чоловік',\n        label: 'чоловік',\n    },\n    {\n        value: 'жінка',\n        label: 'жінка',\n    },\n    {\n        value: 'інше',\n        label: 'інше',\n    },\n]\n\n// const currenciesBlood = [\n//     {\n//         value: '4+',\n//         label: '4+',\n//     },\n//     {\n//         value: '4-',\n//         label: '4-',\n//     },\n//     {\n//         value: '3+',\n//         label: '3+',\n//     },\n//     {\n//         value: '3-',\n//         label: '3-',\n//     },\n//     {\n//         value: '2+',\n//         label: '2+',\n//     },\n//     {\n//         value: '2-',\n//         label: '2-',\n//     },\n//     {\n//         value: '1+',\n//         label: '1+',\n//     },\n//     {\n//         value: '1-',\n//         label: '1-',\n//     },\n//     {\n//         value: 'None',\n//         label: 'None',\n//     },\n// ]\n\nfunction RegistrationPatient({ history }) {\n    const useStyles = makeStyles((theme) => ({\n        rootForTitle: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '20ch',\n            },\n        },\n        rootForSubTitle: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '20ch',\n            },\n        },\n        rootForDate: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '20ch',\n            },\n        },\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '20ch',\n            },\n        },\n    }))\n    const classes = useStyles()\n    const [name, setName] = useState('')\n    const [diagnose, setDiagnose] = useState('')\n    const [parents, setParents] = useState('')\n    const [gender, setGender] = useState('')\n    const [age, setAge] = useState('')\n    const [date, setDate] = useState('')\n    const [city, setCity] = useState('')\n    const [country, setCountry] = useState('')\n    // const [weight, setWeight] = useState('')\n    // const [height, setHeight] = useState('')\n    // const [blood, setBlood] = useState('')\n    const [image, _setImage] = useState(null)\n    const [imageBase64String, setImageBase64String] = useState(default_avatar)\n    const inputFileRef = createRef(null)\n\n    // FOR IMAGE\n    const cleanup = () => {\n        URL.revokeObjectURL(image)\n        inputFileRef.current.value = null\n    }\n\n    const setImage = (newImage) => {\n        if (image) {\n            cleanup()\n        }\n        _setImage(newImage)\n    }\n\n    const handleOnChange = (event) => {\n        const newImage = event.target?.files?.[0]\n        if (newImage) {\n            setImage(URL.createObjectURL(newImage))\n        }\n        const reader = new FileReader()\n        reader.onloadend = () => {\n            setImageBase64String(reader.result)\n        }\n        reader.readAsDataURL(newImage)\n    }\n\n    /**\n     *\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\n     */\n    const handleClick = (event) => {\n        if (image) {\n            event.preventDefault()\n            setImage(null)\n        }\n    }\n\n    //FOR INPUTS\n    const db = app.firestore()\n\n    const nameChange = (event) => {\n        setName(event.target.value)\n    }\n    const diagnoseChange = (event) => {\n        setDiagnose(event.target.value)\n    }\n    const parentsChange = (event) => {\n        setParents(event.target.value)\n    }\n    const genderChange = (event) => {\n        setGender(event.target.value)\n    }\n    const ageChange = (event) => {\n        setAge(event.target.value)\n    }\n    const dateChange = (event) => {\n        setDate(event.target.value)\n        console.log(date)\n    }\n    const cityChange = (event) => {\n        setCity(event.target.value)\n    }\n    const countryChange = (event) => {\n        setCountry(event.target.value)\n    }\n    // const weightChange = (event) => {\n    //     setWeight(event.target.value)\n    // }\n    // const heightChange = (event) => {\n    //     setHeight(event.target.value)\n    //     console.log(height)\n    // }\n    // const bloodChange = (event) => {\n    //     setBlood(event.target.value)\n    //     console.log(blood)\n    // }\n\n    const dataVBMapp = [\n        \"Поведінка,Співпраця\",\n        \"МАНД-ПРОХАННЯ\",\n        \"ТАКТ-НАЗИВАННЯ\",\n        \"Поведінка cлухача-розуміння мовлення\",\n        \"ФКХ-розрізнення по функціях категоріях\",\n        \"Візуальне сприйняття\",\n        \"Вокальна Імітація\",\n        \"інтровербальні навички-відповіді на питання \",\n        \"Моторна Імітація\",\n        \"Гра\",\n        \"Соціальна поведінка\",\n        \"Поведінка в групі,Слідування розпорядку\",\n        \"Крупна моторика\",\n        \"Дрібна моторика\",\n        \"Переодягання\",\n        \"Прийом Їжі\",\n        \"Гігієна\",\n        \"Читання\",\n        \"Письмо\",\n        \"Математика\",\n        \"Лінгвістика,Граматика\"]\n    async function handleSubmit(history) {\n        if (\n            name == '' ||\n            diagnose == '' ||\n            parents == '' ||\n            gender == '' ||\n            age == '' ||\n            date == '' ||\n            city == '' ||\n            country == ''\n        ) {\n            toast.error('Заповніть всі поля!')\n        } else {\n            const res = await db\n                .collection(\"Users\")\n                .doc(localStorage.getItem('user'))\n                .collection(localStorage.getItem('proffesion'))\n                .add({\n                    Name: name,\n                    Diagnos: diagnose,\n                    Parents: parents,\n                    Gender: gender,\n                    Age: age,\n                    BirthDate: date,\n                    City: city,\n                    Country: country,\n                    // KidWeight: weight,\n                    // KidHeight: height,\n                    // BloodType: blood,\n                    Image: imageBase64String,\n                    Supervisor: localStorage.getItem('user'),\n                }).then((doc) => {\n                    for (let i = 0; i < 21; i++) {\n                        db\n                            .collection(\"Users\")\n                            .doc(localStorage.getItem('user'))\n                            .collection(localStorage.getItem('proffesion'))\n                            .doc(doc.id).collection(\"VB-MAPP_protocol\").doc(dataVBMapp[i]).set({ prior: +(i + 1) })\n\n                        for (let j = 0; j < getRandomInt(10, 26); j++) {\n                            for (let k = 0; k < getRandomInt(1, 5); k++) {\n                                db.collection(\"Users\")\n                                    .doc(localStorage.getItem('user'))\n                                    .collection(localStorage.getItem('proffesion'))\n                                    .doc(doc.id).collection(\"VB-MAPP_protocol\").doc(dataVBMapp[i]).collection(\"protocols\").doc(\"a\" + (j + 1)).set({ id: \"a\" + (j + 1) })\n                                db.collection(\"Users\")\n                                    .doc(localStorage.getItem('user'))\n                                    .collection(localStorage.getItem('proffesion'))\n                                    .doc(doc.id).collection(\"VB-MAPP_protocol\").doc(dataVBMapp[i]).collection(\"protocols\").doc(\"a\" + (j + 1)).collection(\"stage\").doc().set({ SphereOfDevelopment: dataVBMapp[i] })\n                            }\n                        }\n\n\n                    }\n\n\n\n                })\n            history.push('/')\n        }\n    }\n\n    return (\n        <div className=\"general_container\">\n            <MobileHeader />\n            <SimpleHeader />\n            <div\n                className=\"patient_upper_flex_container\"\n                style={{ marginTop: '10px' }}\n            >\n                <h2 style={{ marginLeft: '100px' }}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2\n                    style={{\n                        color: 'GrayText',\n                        fontSize: '25px',\n                    }}\n                >\n                    Реєстрація пацієнта\n                </h2>\n            </div>\n            {/* --------------------------------- */}\n            {/* --------  Main  content  -------- */}\n            {/* --------------------------------- */}\n            <div className=\"content-wrapper\">\n                <div className=\"avatar-reg-wrapper\">\n                    <CenteredContent>\n                        <Avatar\n                            alt=\"Avatar\"\n                            src={image}\n                            variant=\"square\"\n                            style={{\n                                marginLeft: 'auto',\n                                width: '256px',\n                                height: '256px',\n                                marginLeft: 'auto',\n                            }}\n                        />\n                        <input\n                            ref={inputFileRef}\n                            accept=\"image/*\"\n                            hidden\n                            id=\"avatar-image-upload\"\n                            type=\"file\"\n                            onChange={handleOnChange}\n                        />\n                        <label htmlFor=\"avatar-image-upload\">\n                            <Button\n                                className=\"upload-image-btn\"\n                                variant=\"contained\"\n                                color=\"grey\"\n                                component=\"span\"\n                                mb={2}\n                                onClick={handleClick}\n                            >\n                                {image ? 'Очистити' : 'Завантажити'}\n                            </Button>\n                        </label>\n                    </CenteredContent>\n                </div>\n                <div className=\"column-direction-list\">\n                    {/* Start of inputs */}\n                    <div\n                        className={classes.rootForTitle}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <div className=\"patient-title\">\n                            <div className=\"label-area\">Ім'я та <br />Прізвище:</div>\n\n                            <TextField\n                                style={{\n                                    position: 'relative',\n                                    paddingLeft: '12.5%'\n                                }}\n                                require\n                                className=\"patient-subtitle-input\"\n                                color=\"secondary\"\n                                onChange={(event) => nameChange(event)}\n                            />\n                        </div>\n                    </div>\n                    <div\n                        className={classes.rootForSubTitle}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <div className=\"patient-subtitle\">\n                            <div className=\"patient-subtitle-label\">\n                                Діагноз:\n                            </div>\n                            <TextField\n                                style={{\n                                    position: 'relative',\n                                    paddingLeft: '17%'\n                                }}\n                                require\n                                className=\"patient-subtitle-input\"\n                                color=\"secondary\"\n                                onChange={(event) => diagnoseChange(event)}\n                            />\n                        </div>\n                    </div>\n                    <div className={classes.root} noValidate autoComplete=\"off\">\n                        <div className=\"zebra-table\">\n                            <div className=\"zebra-table-left-part\">\n                                <div className=\"grey-stripe-zebra\">\n                                    <div className=\"label-area\">Батьки:</div>\n\n                                    <TextField\n                                        style={{\n                                            position: 'relative',\n                                            paddingLeft: '17%'\n                                        }}\n                                        color=\"secondary\"\n                                        onChange={(event) =>\n                                            parentsChange(event)\n                                        }\n                                    />\n                                </div>\n                                <div className=\"white-stipe-zebra\">\n                                    <div className=\"label-area\">Стать:</div>\n                                    <TextField\n                                        style={{\n                                            position: 'relative',\n                                            paddingLeft: '20%'\n                                        }}\n                                        color=\"secondary\"\n                                        select\n                                        value={gender}\n                                        onChange={(event) =>\n                                            genderChange(event)\n                                        }\n                                    >\n                                        {currenciesGenders.map((option) => (\n                                            <MenuItem\n                                                key={option.value}\n                                                value={option.value}\n                                            >\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </div>\n                                <div className=\"grey-stripe-zebra\">\n                                    <div className=\"label-area\">Вік:</div>\n                                    <TextField\n                                        style={{\n                                            position: 'relative',\n                                            paddingLeft: '20%'\n                                        }}\n                                        className=\"big_input\"\n                                        color=\"secondary\"\n                                        type=\"number\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={(event) => ageChange(event)}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position=\"start\">\n                                                    років\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"white-stipe-zebra\">\n                                    <div className=\"label-area\">\n                                        Дата народження:\n                                    </div>\n                                    <TextField\n                                        style={{\n                                            position: 'relative',\n                                            paddingLeft: '20%'\n                                        }}\n                                        type=\"date\"\n                                        className={classes.textField}\n                                        color=\"secondary\"\n                                        size=\"medium\"\n                                        onChange={(event) => dateChange(event)}\n                                    />\n                                </div>\n                                <div className=\"grey-stripe-zebra\">\n                                    <div className=\"label-area\">Місто:</div>\n                                    <TextField\n                                        onChange={(event) => cityChange(event)}\n                                        color=\"secondary\"\n                                    />\n                                </div>\n                                <div className=\"white-stipe-zebra\">\n                                    <div className=\"label-area\">Країна:</div>\n                                    <TextField\n                                        style={{\n                                            position: 'relative',\n                                            paddingLeft: '20%'\n                                        }}\n                                        onChange={(event) =>\n                                            countryChange(event)\n                                        }\n                                        color=\"secondary\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <button style={{\n                        margin: '1%',\n                    }}\n                        type=\"submit\"\n                        className=\"save_button save_button_add_patient btn-background-slide\"\n                        onClick={() => handleSubmit(history)}\n                        value=\"Зберегти\"\n                    >\n                        {' '}\n                        Зберегти{' '}\n                    </button>\n\n                    <Toaster\n                        position=\"bottom-top\"\n                        reverseOrder={false}\n                        toastOptions={{\n                            style: {\n                                minWidth: '350px',\n                                minHeight: '60px',\n                                paddingLeft: '20px',\n                            },\n                            error: {\n                                duration: 5000,\n                                icon: '⚠️',\n                            },\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(RegistrationPatient)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx",["399","400","401"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\nimport HeaderHomeTemplate from '../Header/HeaderHomeTemplate'\r\nimport './Patients.css'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport SupervisorTherapistNav from './SupervisorTherapistNav'\r\nimport {Link} from 'react-router-dom'\r\nimport {useEffect, useState} from 'react'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(\"Users\")\r\n                .doc(localStorage.getItem('user'))\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    localStorage.setItem('templateType', 'private')\r\n    localStorage.setItem('homeType', 'home')\r\n\r\n \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <HeaderHomeTemplate className=\"row\" />\r\n            <MobileHeader/>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-3\" />\r\n                <SupervisorTherapistNav className=\"col-4 col-md-6 row\" />\r\n                <div className=\"col-1 col-md-2\" />\r\n             \r\n                    <BranchingItem />\r\n                \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6 patient_number\">\r\n                    Кількість пацієнтів: {patients.length}\r\n                </div>\r\n            </div>\r\n            <PatientItem patients={patients} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Patient\r\nfunction BranchingItem() {\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return (\r\n            <>\r\n               <Link\r\n                    to=\"/patient_registration\"\r\n                    className=\"col-2 col-md-1 place_right_horizontal\"\r\n                >\r\n                <BsPlusCircle size={50} className=\"plus_button\" />\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('proffesion') !== 'Supervisors') {\r\n        return <></>\r\n    }\r\n}\r\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx",["402"],"import ProgramEditable from './ProgramEditable'\nimport ProgramOnlyView from './ProgramOnlyView'\n\nexport default function RenderProgram() {\n    if (localStorage.getItem('proffesion') == 'Therapists') {\n        return <ProgramOnlyView />\n    } else {\n        return <ProgramEditable />\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx",["403","404","405"],"import React, {useState, useEffect} from 'react'\nimport PatientInfoTherapist from './PatientInfoTherapist'\nimport PatientInfoUser from './PatientInfoUser'\nimport app from '../../Firebase/firebase'\nexport default function PatientInfoRender() {\n    const db = app.firestore()\n    console.log(\n        db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .get()\n            .then((doc) => {\n                if (!doc.exists) {\n                    console.log('No such document!')\n                } else {\n                    localStorage.setItem('Name', doc.data().Name)\n                    localStorage.setItem('Surname', doc.data().Surname)\n                }\n            })\n    )\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\n        return <PatientInfoUser />\n    } else {\n        return <PatientInfoTherapist />\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx",["406","407","408","409"],"import {useState, useEffect} from 'react'\nimport app from '../../Firebase/firebase'\nimport ProtocolListSuperVisor from './ProtocolList'\nimport ProtocolListTherapist from './ProtocolListTherapist'\n\nexport default function RenderProgramList() {\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\n        return <ProtocolListSuperVisor />\n    } else {\n        return <ProtocolListTherapist />\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\HistoryProtocolList.jsx",["410","411","412","413"],"import './ProtocolList.css'\nimport React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport HistoryProtocolItem from './PageComponent/HistoryProtocolItem'\nimport Header from '../Header/Header'\nimport ArrowHeader from './PageComponent/ArrowHeader'\nimport Popup from '../ModalWindow/Popup'\nimport MobileHeader from '../Header/MobileHeader'\nimport {BsPlusCircle} from 'react-icons/bs'\nimport {Link} from 'react-router-dom'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\nexport default function HistoryProtocolList() {\n    \n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe =   db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(\"Supervisors\")\n        .doc(localStorage.getItem('child'))\n        .collection(\"History\")\n        .doc(localStorage.getItem(\"DateHistory\"))\n        .collection(\"protocols\")\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n            <div className=\"create_element\">\n                {protocolsNumber.map((protocol) => (\n                    <>\n                        <div>\n                            <HistoryProtocolItem\n                              \n                                number={protocol}\n                                \n                                sphereOfDevelopment={\n                                    protocols[protocol - 1].SphereOfDevelopment\n                                }\n                                length={protocols.length}\n                                skill={protocols[protocol - 1].Skill}\n                                \n                            />\n                        </div>\n                    </>\n                ))}\n               \n            </div>\n        </>\n    )\n}\n\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx",["414","415","416","417","418"],"import './ProgramTemplate.css'\nimport Delete from '../../assets/delete.svg'\nimport {Link} from 'react-router-dom'\nimport {withRouter, Redirect} from 'react-router'\nimport React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport Header from '../Header/Header'\nimport AHeader from './PageComponentTemplate/AHeader'\nimport TemplateItem from './PageComponentTemplate/Item'\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\nimport './ButtonsTemplate.css'\nimport MobileHeader from '../Header/MobileHeader'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\nfunction ProgramTemplate({history}) {\n    const [programTemplates, setProgramTemplates] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(\"Supervisors\")\n        .doc(localStorage.getItem('child'))\n        .collection(\"History\")\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProgramTemplates(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    let someList = []\n    for (let i = 0; i < programTemplates.length; i++) {\n        someList.push(i + 1)\n    }\n    console.log(someList)\n\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Історія програми\"}/>\n            <div className=\"choose_create_way\">\n                <span className=\"template_way\">Історія програми &nbsp;</span>{' '}\n            </div>\n           <br/>\n            <div className=\"template-grid\">\n                {someList.map((idEl) => (\n                    <TemplateItem\n                        \n                        number={idEl}\n                      date={programTemplates[idEl - 1].Date}\n                      history={history}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\nexport default withRouter(ProgramTemplate)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx",["419","420","421","422","423"],"import './ProgramTemplate.css'\nimport Delete from '../../assets/delete.svg'\nimport {Link} from 'react-router-dom'\nimport {withRouter, Redirect} from 'react-router'\nimport React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport Header from '../Header/Header'\nimport AHeader from './PageComponentTemplate/AHeader'\nimport TemplateItem from './PageComponentTemplate/ItemPublic'\nimport './ButtonsTemplate'\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\nimport MobileHeader from '../Header/MobileHeader'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\nfunction ProgramTemplate({history}) {\n    const [programTemplates, setProgramTemplates] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('ProgramTemplates')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProgramTemplates(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    let someList = []\n    for (let i = 0; i < programTemplates.length; i++) {\n        someList.push(i + 1)\n    }\n    console.log(someList)\n\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n            <div className=\"choose_create_way\">\n                <span className=\"template_way\">Історія програми &nbsp;</span>{' '}\n              \n            </div>\n           <br/>\n            <div className=\"template-grid\">\n                {someList.map((idEl) => (\n                    <TemplateItem\n                        history={history}\n                        idTemplate={programTemplates[idEl - 1].id}\n                        number={idEl}\n                        diagnos={programTemplates[idEl - 1].Diagnos}\n                        age={programTemplates[idEl - 1].Age}\n                        count={programTemplates[idEl - 1].CountOfProtocol}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\nexport default withRouter(ProgramTemplate)\n\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\VBMapp.jsx",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx",["424"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport ProtocolItem from './ProtocolItem'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport ArrowHeader from './ArrowHeader'\nimport MobileHeader from '../../Header/MobileHeader'\nimport Popup from './Popup'\nimport {BsPlusCircle} from 'react-icons/bs'\nimport {withRouter} from 'react-router'\nimport './ProtocolListTemplate.css'\nfunction ProtocolListTemplate({history}) {\n    let test = []\n    localStorage.setItem('homeType', 'createTemplate')\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols.map((protocol) => test.push(protocol.id))\n    console.log(test)\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const togglePopup = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\n    function dragStartHandler(event, protocol) {\n        console.log('DRAG' + protocol.ProtocolId)\n        setcurrrentProtocoll(protocol)\n    }\n    function dragEndHandler(event, protocol) {\n        event.target.style.border = 'none'\n    }\n    function dragOverHandler(event) {\n        event.preventDefault()\n        event.target.style.border = 'solid 3px #c9c9c9'\n    }\n\n    function dropHandler(event, protocol) {\n        const db = app.firestore()\n        event.preventDefault()\n        event.target.style.border = 'none'\n        console.log('DROP' + protocol.ProtocolId)\n        setProtocols(\n            protocols.map((proto) => {\n                if (proto.ProtocolId == protocol.ProtocolId) {\n                    db.collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('user'))\n                        .collection('CreateTemplate')\n                        .doc(currrentProtocoll.id)\n                        .update({ProtocolId: protocol.ProtocolId})\n                    db.collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('user'))\n                        .collection('CreateTemplate')\n                        .doc(protocol.id)\n                        .update({ProtocolId: currrentProtocoll.ProtocolId})\n                }\n\n                return proto\n            })\n        )\n    }\n\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\n\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n\n    return (\n        <>\n            <MobileHeader />\n            <HeaderHomeTemplate />\n            <ArrowHeader />\n            <button\n                class=\"create_template_button btn-background-slide\"\n                onClick={togglePopup}\n            >\n                Зберегти шаблон\n            </button>\n            <div\n                onClick={() => addProto(protocols.length)}\n                className=\"add-proto-mobile\"\n            >\n                <BsPlusCircle />\n            </div>\n\n            {isOpen && (\n                <Popup\n                    protocols={protocols}\n                    content={\n                        <>\n                            <b className=\"text_modul\">\n                                Будь ласка, оберіть тип даного шаблону:\n                            </b>\n                            <div className=\"button_modul\"></div>\n                        </>\n                    }\n                    handleClose={togglePopup}\n                />\n            )}\n            <div className=\"create_element\">\n                {protocolsNumber.map((protocol) => (\n                    <>\n                        <div\n                            draggable=\"true\"\n                            onDragStart={(event) => {\n                                dragStartHandler(event, protocols[protocol - 1])\n                            }}\n                            onDragLeave={(event) => {\n                                dragEndHandler(event, protocols[protocol - 1])\n                            }}\n                            onDragEnd={(event) => {\n                                dragEndHandler(event, protocols[protocol - 1])\n                            }}\n                            onDragOver={(event) => {\n                                dragOverHandler(event)\n                            }}\n                            onDrop={(event) => {\n                                dropHandler(event, protocols[protocol - 1])\n                            }}\n                        >\n                            <ProtocolItem\n                                protocols={protocols}\n                                number={protocol}\n                                protocolId={protocols[protocol - 1].id}\n                                protocolName={\n                                    protocols[protocol - 1].ProtocolId\n                                }\n                                sphereOfDevelopment={\n                                    protocols[protocol - 1].SphereOfDevelopment\n                                }\n                                length={protocols.length}\n                                skill={protocols[protocol - 1].Skill}\n                                statusCopied={\n                                    protocols[protocol - 1].StatusCopied\n                                }\n                                isActive={protocols[protocol - 1].IsActive}\n                                interval={protocols[protocol - 1].Interval}\n                                correctionProcedureStep1={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep1\n                                }\n                                correctionProcedureStep2={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep2\n                                }\n                                correctionProcedureStep3={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep3\n                                }\n                                criterionIncrease={\n                                    protocols[protocol - 1].CriterionIncrease\n                                }\n                                desirableReaction={\n                                    protocols[protocol - 1].DesirableReaction\n                                }\n                                method={protocols[protocol - 1].Method}\n                                methodTakingHint={\n                                    protocols[protocol - 1].MethodTakingHint\n                                }\n                                reductionСriterion={\n                                    protocols[protocol - 1].ReductionСriterion\n                                }\n                                stepDescription={\n                                    protocols[protocol - 1].StepDescription\n                                }\n                                CriteriongenGenerSkill={\n                                    protocols[protocol - 1]\n                                        .CriteriongenGenerSkill\n                                }\n                                instruction1={\n                                    protocols[protocol - 1].Instructions1\n                                }\n                                instruction2={\n                                    protocols[protocol - 1].Instructions2\n                                }\n                                instruction3={\n                                    protocols[protocol - 1].Instructions3\n                                }\n                            />\n                        </div>\n                    </>\n                ))}\n                {/* </ReactSortable> */}\n            </div>\n        </>\n    )\n}\n\nfunction addProto(length) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .add({\n            ProtocolId: +length + 1,\n            SphereOfDevelopment: '',\n            Skill: '',\n            IsActive: '',\n            Interval: '',\n            CorrectionProcedureStep1: '',\n            CorrectionProcedureStep2: '',\n            CorrectionProcedureStep3: '',\n            CriterionIncrease: '',\n            DesirableReaction: '',\n            Method: '',\n            MethodTakingHint: '',\n            ReductionСriterion: '',\n            StepDescription: '',\n            CriteriongenGenerSkill: '',\n        })\n\n    // console.log(data.key)\n}\n\nexport default withRouter(ProtocolListTemplate)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx",["425","426","427","428","429","430","431"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport StimulusItem from './ProgramElement/StimulusItem'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport ArrowHeader from '../PageComponent/ArrowHeaderSimple'\nimport MobileHeader from '../../Header/MobileHeader'\nimport ProgramHeader from '../../Header/ProgramHeader'\n\n\nfunction RemoveCopiedStatus({protocol}) {\n    if (protocol.StatusCopied != null) {\n        const db = app.firestore()\n        db.collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .doc(localStorage.getItem('program'))\n            .update({StatusCopied: ''})\n    }\n\n    return <></>\n}\n\n// MAIN COMPONENT\n\nexport default function ProgramEditableTemplate() {\n    localStorage.setItem('templateType', 'editProgram')\n    let [stimulus, setStimulus] = useState([])\n    let [stimulInput, setStimulInput] = useState('')\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setStimulus(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Хуета ребята')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n    const [fileGenerated, setFileGenerated] = useState(0)\n\n    let userEmail = localStorage.getItem('user')\n\n    return (\n            <>\n                <MobileHeader />\n                <ProgramHeader />\n                <ArrowHeader />\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"element_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n                            <RemoveCopiedStatus protocol={protocol} />\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати сферу розвитку...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.SphereOfDevelopment}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addSphereOfDevelopment(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{marginTop: '1rem'}}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати навик...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Skill}\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) => addSkill(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати метод...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Method}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) => addMethod(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати бажану реакцію...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.DesirableReaction}\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) =>\n                                        addDesirableReaction(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:{' '}\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            <input\n                                                placeholder=\"Вказати критерій...\"\n                                                className=\"element_value\"\n                                                multiline=\"true\"\n                                                underlineColor=\"transparent\"\n                                                selectionColor=\"primary\"\n                                                defaultValue={\n                                                    protocol.CriteriongenGenerSkill\n                                                }\n                                                style={{fontSize: '20px'}}\n                                                raised\n                                                theme={{\n                                                    colors: {\n                                                        background: '#fcfcfc',\n                                                    },\n                                                }}\n                                                onChange={(e) =>\n                                                    addCriteriongenGenerSkill(\n                                                        e.target.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Interval}\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {backgroundColor: 'white'},\n                                    }}\n                                    onChange={(e) =>\n                                        addInterval(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.ReductionСriterion}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addReductionСriterion(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.CriterionIncrease}\n                                    onChange={(e) =>\n                                        addCriterionIncrease(e.target.value)\n                                    }\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                        minWidth: 'auto',\n                                        maxWidth: 'auto',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    <select\n                                        defaultValue={protocol.MethodTakingHint}\n                                        onChange={(event) =>\n                                            addMethodTakingHint(\n                                                event.target.value\n                                            )\n                                        }\n                                        className=\"select_way\"\n                                    >\n                                        <option value=\"false\"></option>\n                                        <option value=\"Тимчасова затримка\">\n                                            Тимчасова затримка\n                                        </option>\n                                        <option value=\"Від найменшої до найбільшої\">\n                                            Від найменшої до найбільшої\n                                        </option>\n                                    </select>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '18px'}}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <StimulusItem\n                                                name={stimul.Name}\n                                                stimulId={stimul.id}\n                                            />\n                                        ))}\n\n                                        <div className=\"add_stymul_container\"> \n                                            <button\n                                                onClick={() =>\n                                                    addStimul(stimulInput)\n                                                }\n                                                className=\"add_stymul_button\"\n                                            >\n                                                +\n                                            </button>\n                                            <input\n                                                type=\"text\"\n                                                onChange={(event) =>\n                                                    setStimulInput(\n                                                        event.target.value\n                                                    )\n                                                }\n                                                name=\"name\"\n                                                placeholder=\"Додати стимул....\"\n                                                className=\"add_stymul_input\"\n                                            />\n                                        </div>\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <input\n                                    placeholder=\"Додати опис етапів...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.StepDescription}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(event) =>\n                                        setStepDescription(event.target.value)\n                                    }\n                                />\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    background=\"white\"\n                                    defaultValue={\n                                        protocol.CorrectionProcedureStep1\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep1(\n                                            event.target.value\n                                        )\n                                    }\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'white'},\n                                    }}\n                                />\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions1}\n                                    onChange={(event) =>\n                                        addInstruction1(event.target.value)\n                                    }\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        fontSize: '20px',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2 :\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions2}\n                                    onChange={(event) =>\n                                        addInstruction2(event.target.value)\n                                    }\n                                    style={{\n                                        fontSize: '20px',\n                                        background: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 3:\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions3}\n                                    onChange={(event) =>\n                                        addInstruction3(event.target.value)\n                                    }\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        fontSize: '20px',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n\n                <div style={{height: '100px'}}></div>\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n\nfunction addInstruction1(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions1: instructionInput})\n}\n\nfunction addInstruction2(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions2: instructionInput})\n}\n\nfunction addInstruction3(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions3: instructionInput})\n}\n\nfunction addStimul(stimulInput) {\n    const db = app.firestore()\n    if (stimulInput != '') {\n        db.collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .add({Name: stimulInput})\n    } else {\n        alert('Неможливо надіслати пустий стимул')\n    }\n}\nfunction addSkill(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Skill: params})\n    console.log(params)\n}\n\nfunction addMethod(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Method: params})\n    console.log(params)\n}\nfunction addDesirableReaction(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({DesirableReaction: params})\n    console.log(params)\n}\n\nfunction addReductionСriterion(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({ReductionСriterion: params})\n    console.log(params)\n}\n\nfunction addCriterionIncrease(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({CriterionIncrease: params})\n    console.log(params)\n}\n\nfunction setStepDescription(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({StepDescription: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep3(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep3: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep2(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep2: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep1(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep1: params})\n    console.log(params)\n}\n\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({SphereOfDevelopment: sphereOfDevelopment})\n    console.log(sphereOfDevelopment)\n}\n\nfunction addInterval(interval) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({Interval: interval})\n}\n\nfunction addMethodTakingHint(method) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({MethodTakingHint: method})\n}\nfunction addCriteriongenGenerSkill(generSkill) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(localStorage.getItem('program'))\n        .update({CriteriongenGenerSkill: generSkill})\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx",["432","433","434","435","436","437","438","439","440","441","442"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\n\nimport {Link} from 'react-router-dom'\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\n\nimport ListMoreInfoPrivate from './ListMoreInfoPrivate'\nimport ListMoreInfoPublic from './ListMoreInfoPublic'\nexport default function ListMoreInfoTemplate() {\n    let test = []\n\n    const [protocols, setProtocols] = useState([])\n    if (localStorage.getItem('templateType') == 'private') {\n        return (\n            <>\n                <ListMoreInfoPrivate />\n            </>\n        )\n    }\n    if (localStorage.getItem('templateType') == 'public') {\n        return (\n            <>\n                <ListMoreInfoPublic />\n            </>\n        )\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx",["443","444","445","446","447","448","449","450"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\n\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport ProgramTemplateViewPrivate from './ProgramTemplateViewPrivate'\nimport ProgramTemplateViewPublic from './ProgramTemplateViewPublic'\nimport ProgramEditableTemplate from './ProgramEditableTemplate'\n\n// MAIN COMPONENT\nexport default function ProgramTemplateView() {\n    if (localStorage.getItem('templateType') == 'private') {\n        return (\n            <>\n                <ProgramEditableTemplate />\n            </>\n        )\n    }\n    if (localStorage.getItem('templateType') == 'public') {\n        return (\n            <>\n                <ProgramTemplateViewPublic />\n            </>\n        )\n    }\n}\n\n//  -------\n// |  END  |\n//  -------\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js",["451","452","453"],"import React, { useState, useEffect } from 'react'\nimport Pagination from '@material-ui/lab/Pagination'\nimport { List, makeStyles, Divider, Box } from '@material-ui/core'\nimport app from '../../Firebase/firebase'\nimport File from './File'\nimport './Pagination.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(4),\n        },\n    },\n    items: {\n        padding: theme.spacing(2),\n    },\n}))\n\nfunction PaginationRounded({ history }) {\n    const classes = useStyles()\n    const [files, setFiles] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const [filesPerPage] = useState(4)\n\n    console.log('')\n    var storageRef = app.storage().ref()\n    var patientResultRef = storageRef.child(\n        'patients/' + localStorage.getItem('child') + '/results'\n    )\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true)\n            patientResultRef.listAll().then(function (result) {\n                setFiles(\n                    result.items.map((url) => {\n                        return url\n                            .toString()\n                            .replace(\n                                'gs://ionkid-abd2f.appspot.com/patients/' +\n                                localStorage.getItem('child') +\n                                '/results/',\n                                ''\n                            )\n                    })\n                )\n            })\n            setLoading(false)\n        }\n        fetchData()\n    }, []) // [files, setFiles]\n\n    console.log(files)\n    const handleChange = (event, value) => {\n        setPage(value)\n    }\n\n    console.log('sho?   \\n' + files.length)\n    return (\n        <>\n            <div\n                className=\"table-wrapper\"\n                style={{ position: 'relative', bottom: '5rem' }}\n            >\n                <br />\n                <br />\n                <br />\n                <br />\n                {files\n                    .sort((a, b) => (a > b ? -1 : 1))\n                    .slice((page - 1) * filesPerPage, page * filesPerPage)\n                    .map((file) => {\n                        return (\n                            <File\n                                history={history}\n                                file={file}\n                                loading={loading}\n                            />\n                        )\n                    })}\n                {/* 'Divider' protrudes to the left || Need to fix or delete */}\n                {/* <Divider /> */}\n            </div>\n\n            <Box component=\"span\" className=\"pagination-box\">\n                <Pagination\n                    count={Math.ceil(files.length / filesPerPage)}\n                    page={page}\n                    onChange={handleChange}\n                    defaultPage={1}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"outlined\"\n                    shape=\"rounded\"\n                    showFirstButton\n                    showLastButton\n                    classes={{ ul: classes.paginator }}\n                />\n            </Box>\n        </>\n    )\n}\n\nexport default PaginationRounded","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js",["454","455","456","457","458","459","460","461","462"],"import React, {useState} from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport {withRouter} from 'react-router'\nimport {Link} from 'react-router-dom'\nimport Person from '../../assets/person_signup.svg'\nimport Calendar from '../../assets/calendar.svg'\nimport Caret from '../../assets/CaretRight.svg'\nimport './SignUp.css'\nimport './../Authentification/SignIn2.css'\n\nfunction SignUpForm1() {\n    localStorage.setItem('step', 1)\n    const [firstName, setFirstName] = useState('')\n    localStorage.setItem('Name', firstName)\n    console.log(firstName)\n    const [lastName, setLastName] = useState('')\n    localStorage.setItem('Surname', lastName)\n    console.log(lastName)\n    const [sex, setSex] = useState('')\n    localStorage.setItem('Gender', sex)\n    console.log(sex)\n\n    const [formData, setFormData] = useState({\n        isAgree: false,\n        gender: '',\n    })\n\n    const handleChanage = (event) => {\n        const target = event.target\n        const name = target.name\n        const value = target.value\n        setFormData({\n            ...formData,\n            [name]: value,\n        })\n        console.log(target.value)\n    }\n\n    return (\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <LoginNavigation class=\"col-6 signup1_nav\" />\n                <form className=\"form-itself col-12 row justify-content-center\">\n                    <div className=\"col-12 row justify-content-center \">\n                        <div class=\"col-10 col-md-7 row input-image first-signup-content\">\n                            <img\n                                src={Person}\n                                alt=\"person image\"\n                                className=\"col-2\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setFirstName(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"fname\"\n                                name=\"firstname\"\n                                placeholder=\"Ім'я\"\n                                className=\"transparent-input col-10\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div class=\"col-10 col-md-7 row input-image \">\n                            <img\n                                src={Person}\n                                alt=\"person image\"\n                                className=\"col-2\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setLastName(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"lname\"\n                                name=\"lastname\"\n                                placeholder=\"Прізвище\"\n                                className=\"transparent-input col-10\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div className=\"col-12 row \" id=\"text-parent\">\n                            <div\n                                className=\"date_text text-align-center\"\n                                id=\"birthday-text\"\n                            >\n                                Дата народження\n                            </div>\n                        </div>\n                        <div\n                            className=\"col-10 col-md-7 row input-image justify-content-right\"\n                            id=\"picker-parent\"\n                        >\n                            <img\n                                src={Calendar}\n                                alt=\"person image\"\n                                className=\"col-2 mozilla_calendar\"\n                            />\n                            <input\n                                min=\"1900-01-01\"\n                                max=\"2005-01-01\"\n                                id=\"date\"\n                                type=\"date\"\n                                id=\"birthday\"\n                                name=\"birthday\"\n                                class=\"transparent-input col-10 date_input\"\n                                required\n                            />\n                            <span class=\"validity\"></span>\n                            <hr className=\"input_line signin-input-line col-12\" />{' '}\n                        </div>\n                        <div className=\"gender_container col-9 col-sm-9 col-md-7 row justify-content-center\">\n                            <div className=\"group col-4\">\n                                <input\n                                    onClick={handleChanage}\n                                    checked={formData.gender == 'male'}\n                                    className=\"gender_checks\"\n                                    name=\"gender\"\n                                    type=\"checkbox\"\n                                    id=\"xd\"\n                                    value=\"male\"\n                                />\n                                <label for=\"xd\"></label>\n                            </div>\n\n                            <div className=\"group col-4\">\n                                <input\n                                    onClick={handleChanage}\n                                    checked={formData.gender == 'female'}\n                                    type=\"checkbox\"\n                                    name=\"gender\"\n                                    id=\"figma\"\n                                    className=\"gender_checks\"\n                                    value=\"female\"\n                                />\n                                <label for=\"figma\"></label>\n                            </div>\n\n                            <div className=\"group col-4\">\n                                <input\n                                    onClick={handleChanage}\n                                    checked={formData.gender == 'other'}\n                                    type=\"checkbox\"\n                                    name=\"gender\"\n                                    id=\"sketch\"\n                                    className=\"gender_checks\"\n                                    value=\"other\"\n                                />\n                                <label for=\"sketch\"></label>\n                            </div>\n                        </div>\n\n                        <p className=\"col-9 gender_text text-align-center\">\n                            Стать\n                        </p>\n                        <div className=\"genders-labels col-9 col-md-7 row justify-content-center\">\n                            <div className=\" col-4 text-align-center\">\n                                чоловіча\n                            </div>\n                            <div className=\" col-4 text-align-center\">\n                                жіноча\n                            </div>\n                            <div className=\" col-4 text-align-center\">інше</div>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"easy_nav_box col-12 row justify-content-right\">\n                    <div className=\"col-9\" />\n                    <Link to=\"/registration/signup1\" className=\"col-3 easy_nav\">\n                        Далі\n                        <img src={Caret} alt=\"tick image\" className=\"col-3\" />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SignUpForm1)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js",["463","464","465","466","467","468","469"],"import React, {useCallback, useState} from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport './SignUpForm4.css'\nimport {withRouter} from 'react-router'\nimport app from '../../Firebase/firebase'\nimport {Link} from 'react-router-dom'\nimport toast, {Toaster} from 'react-hot-toast'\nimport Email from '../../assets/email_signup.svg'\nimport Password from '../../assets/password_signup.svg'\nimport Phone from '../../assets/phone_signup.svg'\nimport './../Authentification/SignIn2.css'\nimport CaretLeft from '../../assets/CaretLeft.svg'\nimport './SignUpForm2.css'\n\nfunction SignUpForm4({history}) {\n    localStorage.setItem('step', 3)\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault()\n            const {\n                email,\n                password,\n                passwordCheck,\n                phone,\n            } = event.target.elements\n            try {\n                if (password.value === passwordCheck.value) {\n                    await app\n                        .auth()\n                        .createUserWithEmailAndPassword(\n                            email.value,\n                            password.value\n                        )\n\n                    await app.auth().currentUser.sendEmailVerification()\n\n                    addInputRegistr()\n                    // history.push('/')\n                } else {\n                    toast.error('Будь ласка, перевірте ваш пароль')\n                }\n            } catch (error) {\n                toast.error('Помилка')\n            }\n        },\n        [history]\n    )\n\n    const [phone, setPhoneNumber] = useState('')\n    console.log(phone)\n    localStorage.setItem('PhoneNumber', phone)\n\n    const [email, setEmail] = useState('')\n    localStorage.setItem('userEmail', email)\n    console.log(email)\n    return (\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <LoginNavigation class=\"col-6\" />\n                <form className=\"form-itself col-12 row justify-content-center\"  onSubmit={handleSignUp}>\n                    <div className=\"col-12 row justify-content-center\">\n                        <div class=\"col-10 col-md-7 row input-image\">\n                            <img\n                                src={Email}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setEmail(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"fname\"\n                                name=\"email\"\n                                placeholder=\"E-mail\"\n                                className=\"transparent-input col-9\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div class=\"col-10 col-md-7 row input-image\">\n                            <img\n                                src={Password}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                type=\"password\"\n                                id=\"fname\"\n                                name=\"password\"\n                                placeholder=\"Пароль\"\n                                className=\"transparent-input col-9\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div class=\"col-10 col-md-7 row input-image\">\n                            <img\n                                src={Password}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                type=\"password\"\n                                id=\"fname\"\n                                name=\"passwordCheck\"\n                                placeholder=\"Підтвердження паролю\"\n                                className=\"transparent-input col-9\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div class=\"col-10 col-md-7 row input-image signup4\">\n                            <img\n                                src={Phone}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setPhoneNumber(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"lname\"\n                                name=\"phone\"\n                                placeholder=\"Номер телефону\"\n                                className=\"transparent-input col-9 \"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                    </div>\n                    <div className=\"col-12 row justify-content-center \">\n                        <input\n                            class=\"signin-input col-6\"\n                            type=\"submit\"\n                            value=\"Зареєструватись\"\n                        />\n                    </div>\n                    <Toaster\n                        position=\"bottom-top\"\n                        reverseOrder={false}\n                        toastOptions={{\n                            style: {\n                                minWidth: '350px',\n                                minHeight: '60px',\n                                paddingLeft: '20px',\n                            },\n                            error: {\n                                duration: 5000,\n                                icon: '⚠️',\n                            },\n                        }}\n                    />\n                </form>\n                <div className=\"easy_nav_box_3 col-12 row\">\n                    <Link to=\"/registration/signup1\" className=\"col-3 easy_nav\">\n                        <img\n                            src={CaretLeft}\n                            alt=\"tick image\"\n                            className=\"col-3\"\n                        />\n                        Назад\n                    </Link>\n                    <div className=\"col-9\" />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SignUpForm4)\nfunction addInputRegistr() {\n    const db = app.firestore()\n    db.collection(\"Users\")\n        .doc(localStorage.getItem('userEmail'))\n        .set({\n            Name: localStorage.getItem('Name'),\n            Surname: localStorage.getItem('Surname'),\n            Birthday: localStorage.getItem('Birthday'),\n            Gender: localStorage.getItem('Gender'),\n            Country: localStorage.getItem('Country'),\n            City: localStorage.getItem('City'),\n            Profession: localStorage.getItem('proffesion'),\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\n            TelegramUserID: '',\n        })\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js",["470","471","472","473","474"],"import React from 'react'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport $ from 'jquery'\nimport {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport './SignUpForm2.css'\nimport {withRouter} from 'react-router'\nimport Country from '../../assets/earth_signup.svg'\nimport City from '../../assets/city_signup.svg'\nimport Caret from '../../assets/CaretRight.svg'\nimport CaretLeft from '../../assets/CaretLeft.svg'\n\nfunction SignUpForm2() {\n    localStorage.setItem('step', 2)\n    const [selectedFile, setSelectedFile] = useState()\n    const [preview, setPreview] = useState()\n    useEffect(() => {\n        if (!selectedFile) {\n            setPreview(undefined)\n            return\n        }\n        if (selectedFile) {\n            setPreview(undefined)\n            $('#div1').remove()\n        }\n        const objectUrl = URL.createObjectURL(selectedFile)\n        setPreview(objectUrl)\n        return () => URL.revokeObjectURL(objectUrl)\n    }, [selectedFile])\n    const onSelectFile = (e) => {\n        if (!e.target.files || e.target.files.length === 0) {\n            setSelectedFile(undefined)\n            return\n        }\n        setSelectedFile(e.target.files[0])\n    }\n\n    const [country, setCountry] = useState('')\n    console.log(country)\n    localStorage.setItem('Country', country)\n    const [city, setCity] = useState('')\n    localStorage.setItem('City', city)\n    console.log(city)\n    return (\n        <div class=\"container\">\n            <div class=\"row justify-content-center\">\n                <LoginNavigation class=\"col-6\" />\n                <form className=\"form-itself col-12 row justify-content-center\">\n                    <div className=\"col-12 row justify-content-center\">\n                        <label\n                            for=\"image_input\"\n                            className=\"col-12 row justify-content-center\"\n                        >\n                            <div\n                                id=\"div1\"\n                                className=\"col-4 image_container_simulator\"\n                            >\n                                Завантажити фото\n                            </div>\n                        </label>\n                        <input\n                            className=\"col-12\"\n                            type=\"file\"\n                            id=\"image_input\"\n                            onChange={onSelectFile}\n                        />\n                    </div>\n                    {selectedFile && (\n                        <img src={preview} className=\"col-4 input_image\" />\n                    )}\n                    <div className=\"col-12 row justify-content-center\">\n                        <div class=\"col-10 col-md-7 row input-image\">\n                            <img\n                                src={Country}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setCountry(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"fname\"\n                                name=\"firstname\"\n                                placeholder=\"Країна\"\n                                className=\"transparent-input col-9\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                        <div class=\"col-10 col-md-7 row input-image\">\n                            <img\n                                src={City}\n                                alt=\"person image\"\n                                className=\"signin-icons col-3\"\n                            />\n                            <input\n                                onChange={(event) =>\n                                    setCity(event.target.value)\n                                }\n                                type=\"text\"\n                                id=\"fname\"\n                                name=\"firstname\"\n                                placeholder=\"Місто\"\n                                className=\"transparent-input col-9\"\n                            />\n                            <hr className=\"input_line signin-input-line col-12\" />\n                        </div>\n                    </div>\n                </form>\n                <div className=\"easy_nav_box_2 col-12 row\">\n                    <Link to=\"/registration/\" className=\"col-3 easy_nav\">\n                        <img\n                            src={CaretLeft}\n                            alt=\"tick image\"\n                            className=\"col-3\"\n                        />\n                        Назад\n                    </Link>\n                    <div className=\"col-6\" />\n                    <Link to=\"/registration/signup2\" className=\"col-3 easy_nav\">\n                        Далі\n                        <img src={Caret} alt=\"tick image\" className=\"col-3\" />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default withRouter(SignUpForm2)\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js",["475","476"],"import React from 'react'\nimport './ProgramHeader.css'\nimport './MobileHeader.css'\n\nimport Logo from '../../assets/Logo.svg'\nimport SignOut from '../../assets/SignOut.svg'\n\nimport app from '../../Firebase/firebase'\nfunction signOut() {\n    localStorage.setItem('user', '@gmail')\n    app.auth().signOut()\n}\n\nfunction MobileHeader() {\n    return (\n        <div className=\"logo_new_container\">\n            <img\n                src={SignOut}\n                onClick={() => signOut()}\n                height=\"100%\"\n                width=\"10%\"\n                className=\"sign_out_button\"\n                style={{\n                    cursor: 'pointer',\n                    position: 'relative',\n                    marginLeft: '10%',\n                }}\n            />\n            <img\n                src={Logo}\n                height=\"100%\"\n                width=\"50%\"\n                style={{\n                    marginLeft: '7%',\n                    position: 'relative',\n                }}\n            />\n        </div>\n    )\n}\n\nexport default MobileHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js",["477","478","479","480"],"import React, {useState} from 'react'\r\nimport './ProgramHeader.css'\r\nimport './Header.css'\r\nimport SignOut from '../../assets/SignOut.svg'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport app from '../../Firebase/firebase'\r\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\r\nfunction signOut() {\r\n    localStorage.setItem('user', '@gmail')\r\n    app.auth().signOut()\r\n}\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div style={{width: '93.2%', alignSelf: 'center'}}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={Logo}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                            className=\"logo_hover\"\r\n                        />\r\n                        <PatientTemplateSwitch />\r\n\r\n                        <input\r\n                            className=\"search\"\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            placeholder=\"Пошук..\"\r\n                        />\r\n\r\n                        <img\r\n                            src={SignOut}\r\n                            onClick={() => signOut()}\r\n                            className=\"sign_out_button_header\"\r\n                            width=\"4%\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                position: 'relative',\r\n                                marginLeft: '10%',\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: 'center',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js",["481"],"import React from 'react'\nimport './ProgramHeader.css'\nimport Logo from '../../assets/Logo.svg'\nimport app from '../../Firebase/firebase'\n\nfunction SimpleHeader() {\n    return (\n        <>\n            <div className=\"header\" style={{ margin: '10px' }}>\n                <img\n                    src={Logo}\n                    onClick={() => app.auth().signOut()}\n                    width=\"14.7%\"\n                    style={{\n                        position: 'relative',\n                        left: '4%',\n                        marginTop: '1.1%',\n                        marginBottom: '-20px',\n                    }}\n                />\n\n                <hr\n                    style={{\n                        border: 'none',\n                        borderBottom: ' 1px solid #6F6F6F',\n                        position: 'relative',\n                        margin: '2%',\n                    }}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default SimpleHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Patient\\SupervisorTherapistNav.js",["482","483"],"import React from 'react'\nimport './SupervisorTherapistNav.css'\n\nexport default function SupervisorTherapistNav() {\n    return (\n        <>\n            <div className=\"col-12 col-md-6 row justify-content-between\">\n                <span\n                    onClick={() => (\n                        localStorage.setItem('proffesion', 'Supervisors'),\n                        window.location.reload()\n                    )}\n                    className=\"role_choice_link col-6 col-md-4 supervisor_choice_link\"\n                >\n                    Супервізор\n                </span>\n                <span\n                    onClick={() => (\n                        localStorage.setItem('proffesion', 'Therapists'),\n                        window.location.reload()\n                    )}\n                    className=\"role_choice_link col-6 col-md-4 therapist_choice_link\"\n                >\n                    Терапіст\n                </span>\n            </div>\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js",["484","485"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nimport './../Authentification/SignIn2.css'\r\n\r\nfunction PatientItem({patients}) {\r\n    console.log(patients)\r\n    return (\r\n        <div>\r\n            {patients.map((patient) => (\r\n                <div className=\"hover_patient\">\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('child', patient.id)\r\n                        }\r\n                        className=\"patient_general_link\"\r\n\r\n                    >\r\n                        <div className=\"button_container\">\r\n                        <img\r\n                                src={patient.Image}\r\n                                width=\"250\"\r\n                                height=\"240\"\r\n                                className=\"patient_image\"\r\n                            />\r\n                            <img\r\n                                src={patient.Image}\r\n                                width=\"100\"\r\n                                height=\"100\"\r\n                                className=\"patient_image_mobile\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"patient_name text-align-center\">\r\n                            {patient.Name}\r\n                        </div>\r\n                        <div className=\"button_container\">\r\n                        <Link\r\n                                to=\"/patient\"\r\n                                className=\"button-view-patient\"\r\n                                onClick={() =>\r\n                                    localStorage.setItem('child', patient.id)\r\n                                }\r\n                            >\r\n                                Переглянути\r\n                            </Link>\r\n                            <Link\r\n                                to=\"/patient\"\r\n                                className=\"button-view-patient-mobile\"\r\n                                onClick={() =>\r\n                                    localStorage.setItem('child', patient.id)\r\n                                }\r\n                            >\r\n                                Переглянути\r\n                            </Link>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js",["486","487","488","489"],"import React, {useState, useEffect} from 'react'\nimport Logo from '../../assets/Logo.svg'\nimport './ProgramHeader.css'\nimport {Link} from 'react-router-dom'\nimport app from '../../Firebase/firebase'\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\n\nfunction signOut() {\n    localStorage.setItem('user', 'none')\n    app.auth().signOut()\n}\nfunction ProgramHeader() {\n    const [fileGenerated, setFileGenerated] = useState(0)\n\n    let userEmail = localStorage.getItem('user')\n    let childName = localStorage.getItem('child')\n\n    const exportUsersToExcel = (userEmail, kidName) => {\n        const db = app.firestore()\n        db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .update({Instructions1:  localStorage.getItem(\"Instructions1\")})\n            db.collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n                .doc(localStorage.getItem('child'))\n                .collection('Protocols')\n                .doc(localStorage.getItem('program'))\n                .update({Instructions2: localStorage.getItem(\"Instructions2\")})\n            db.collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n                .doc(localStorage.getItem('child'))\n                .collection('Protocols')\n                .doc(localStorage.getItem('program'))\n                .update({Instructions3:  localStorage.getItem(\"Instructions3\")})\n        \n            db.collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n                .doc(localStorage.getItem('child'))\n                .collection('Protocols')\n                .doc(localStorage.getItem('program'))\n                .update({Skill: localStorage.getItem(\"Skill\")})\n\n                db.collection(\"Users\")\n                .doc(localStorage.getItem('user'))\n                .collection('Supervisors')\n                    .doc(localStorage.getItem('child'))\n                    .collection('Protocols')\n                    .doc(localStorage.getItem('program'))\n                    .update({Method: localStorage.getItem(\"Method\")})\n                db.collection(\"Users\")\n                .doc(localStorage.getItem('user'))\n                .collection('Supervisors')\n                    .doc(localStorage.getItem('child'))\n                    .collection('Protocols')\n                    .doc(localStorage.getItem('program'))\n                    .update({DesirableReaction:  localStorage.getItem(\"DesirableReaction\")})\n                db.collection(\"Users\")\n                .doc(localStorage.getItem('user'))\n                .collection('Supervisors')\n                    .doc(localStorage.getItem('child'))\n                    .collection('Protocols')\n                    .doc(localStorage.getItem('program'))\n                    .update({ReductionСriterion: localStorage.getItem(\"ReductionСriterion\")})\n                    db.collection(\"Users\")\n                    .doc(localStorage.getItem('user'))\n                    .collection('Supervisors')\n                        .doc(localStorage.getItem('child'))\n                        .collection('Protocols')\n                        .doc(localStorage.getItem('program'))\n                        .update({CriterionIncrease: localStorage.getItem(\"CriterionIncrease\")})\n                    db.collection(\"Users\")\n                    .doc(localStorage.getItem('user'))\n                    .collection('Supervisors')\n                        .doc(localStorage.getItem('child'))\n                        .collection('Protocols')\n                        .doc(localStorage.getItem('program'))\n                        .update({StepDescription: localStorage.getItem(\"StepDescription\")})\n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(localStorage.getItem('program'))\n                            .update({CorrectionProcedureStep1: localStorage.getItem(\"CorrectionProcedureStep1\")})\n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(localStorage.getItem('program'))\n                            .update({SphereOfDevelopment: localStorage.getItem(\"SphereOfDevelopment\")})\n                          \n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(localStorage.getItem('program'))\n                            .update({Interval: localStorage.getItem(\"Interval\")})\n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(localStorage.getItem('program'))\n                            .update({MethodTakingHint: localStorage.getItem(\"MethodTakingHint\")})\n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(localStorage.getItem('program'))\n                            .update({CriteriongenGenerSkill: localStorage.getItem(\"CriteriongenGenerSkill\")})\n        console.log(\n            fetch(\n                `https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`\n            )\n        )\n        fetch(\n            `https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`\n        ).then((data) => {\n            setFileGenerated(data.status) // 200\n        })\n        alert('Протокол збережено успішно!')\n    }\n    return (\n        <>\n            <div className=\"header\">\n                <div style={{width: '93.2%', alignSelf: 'center'}}>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n                        <img\n                            src={Logo}\n                            onClick={() => signOut()}\n                            width=\"14.7%\"\n                            style={{\n                                position: 'relative',\n                            }}\n                            className=\"ionkid_logo\"\n                        />\n                        <PatientTemplateSwitch />\n                        <Link to=\"/protocol-list\">\n                            <button\n                                type=\"submit\"\n                                className=\"save_button_header btn-background-slide\"\n                                style={{top: '1rem', cursor: 'pointer'}}\n                                onClick={() =>\n                                    exportUsersToExcel(userEmail, childName)\n                                }\n                            >\n                                Зберегти файл\n                            </button>\n                        </Link>\n                    </div>\n\n                    <h1\n                        style={{\n                            border: 'none',\n                            borderBottom: ' 1px solid #6F6F6F',\n                            alignSelf: 'center',\n                        }}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ProgramHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx",["490","491"],"import app from '../../Firebase/firebase'\nimport React from 'react'\nimport SignOut from '../../assets/SignOut.svg'\nimport Logo from '../../assets/Logo.svg'\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\nimport './HeaderHomeTemplate.css'\nfunction signOut() {\n    localStorage.setItem('user', 'none')\n    app.auth().signOut()\n}\n\nfunction HeaderHomeTemplate(params) {\n    return (\n        <div className=\"container header_bootstrap\">\n            <div className=\"row justify-content-between main_header_content_container\">\n                <img src={Logo} className=\"col-3 header_bootstrap_logo\" />\n                <PatientTemplateSwitch className=\"col-6 header_bootstrap_switcher row\" />\n                <img\n                    className=\"col-3 header_bootstrap_door\"\n                    src={SignOut}\n                    onClick={() => signOut()}\n                />\n            </div>\n            <div className=\"row header_line\" />\n        </div>\n    )\n}\nexport default HeaderHomeTemplate\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx",["492","493","494"],"import ProgramHeader from '../Header/ProgramHeader'\nimport './Program.css'\nimport './ProgramTest.css'\nimport React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\nimport StimulusItem from './ProgramElement/StimulusItem'\nimport MobileHeader from '../Header/MobileHeader'\nimport toast, {Toaster} from 'react-hot-toast'\n\n\nfunction RemoveCopiedStatus({protocol}) {\n    if (protocol.StatusCopied != null) {\n        const db = app.firestore()\n        db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .update({StatusCopied: ''})\n    }\n\n    return <></>\n}\n\n// MAIN COMPONENT\n\nexport default function ProgramEditable() {\n    let test = []\n\n    let [stimulus, setStimulus] = useState([])\n    let [stimulInput, setStimulInput] = useState('')\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setStimulus(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n    const [fileGenerated, setFileGenerated] = useState(0)\n\n    let userEmail = localStorage.getItem('user')\n    let childName = localStorage.getItem('child')\n\n    const exportUsersToExcel = (userEmail, kidName) => {\n        fetch(`/files/${userEmail}/${kidName}`).then((data) => {\n            setFileGenerated(data.status) // 200\n        })\n    }\n    return (\n            <>\n                <MobileHeader />\n                <ProgramHeader />\n                <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"element_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n                            <RemoveCopiedStatus protocol={protocol} />\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                \n                                <input \n                                    placeholder=\"Вказати сферу розвитку...\"\n                                    className=\"element_value element_value_input_grey\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.SphereOfDevelopment}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addSphereOfDevelopment(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати навик...\"\n                                    className=\"element_value element_value_input_white\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Skill}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) => addSkill(e.target.value)}\n                                />\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати метод...\"\n                                    className=\"element_value element_value_input_grey\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Method}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) => addMethod(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати бажану реакцію...\"\n                                    className=\"element_value element_value_input_white\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.DesirableReaction}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) =>\n                                        addDesirableReaction(e.target.value)\n                                    }\n                                />\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE', display: 'flex', alignItems: 'center'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            <input\n                                                placeholder=\"Вказати критерій...\"\n                                                className=\"element_value element_value_input_grey\"\n                                                multiline=\"true\"\n                                                underlineColor=\"transparent\"\n                                                selectionColor=\"primary\"\n                                                defaultValue={\n                                                    protocol.CriteriongenGenerSkill\n                                                }\n                                                raised\n                                                theme={{\n                                                    colors: {\n                                                        background: '#fcfcfc',\n                                                    },\n                                                }}\n                                                onChange={(e) =>\n                                                    addCriteriongenGenerSkill(\n                                                        e.target.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </>\n\n                                <div\n                                    className=\"element_name\"\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\n                                    className=\"element_value element_value_input_white\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Interval}\n                                    raised\n                                    theme={{\n                                        colors: {backgroundColor: 'white'},\n                                    }}\n                                    onChange={(e) =>\n                                        addInterval(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value element_value_input_grey\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.ReductionСriterion}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addReductionСriterion(e.target.value)\n                                    }\n                                />\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value element_value_input_white\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.CriterionIncrease}\n                                    onChange={(e) =>\n                                        addCriterionIncrease(e.target.value)\n                                    }\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                />\n                                <div style={{display: 'flex', alignItems: 'center'}}\n                                    className=\"element_name element_value_input_grey\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div    \n                                    className=\"element_value add_stymul_position element_value_input_grey\"\n                                >\n                                    <select\n                                        defaultValue={protocol.MethodTakingHint}\n                                        onChange={(event) =>\n                                            addMethodTakingHint(\n                                                event.target.value\n                                            )\n                                        }\n                                        className=\"select_way\"\n\n                                    >\n                                        <option value=\"false\"></option>\n                                        <option value=\"Тимчасова затримка\">\n                                            Тимчасова затримка\n                                        </option>\n                                        <option value=\"Від найменшої до найбільшої\">\n                                            Від найменшої до найбільшої\n                                        </option>\n                                    </select>\n                                </div>\n\n                                <div className=\"element_name\" style={{display: 'flex', alignItems: 'center'}}>\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '2rem'}}\n                                >\n                                    <ul>\n                                        <li>\n                                        {stimulus.map((stimul) => (\n                                            <StimulusItem\n                                                name={stimul.Name}\n                                                stimulId={stimul.id}\n                                            />\n                                        ))} \n                                        </li>\n                                        \n                                        <li className=\"add_stymul_container\">\n                                            <button\n                                                onClick={() =>\n                                                    addStimul(stimulInput)\n                                                }\n                                                className=\"add_stymul_button\"\n                                            >\n                                                +\n                                            </button>\n\n                                            <input\n                                                type=\"text\"\n                                                onChange={(event) =>\n                                                    setStimulInput(\n                                                        event.target.value\n                                                    )\n                                                }\n                                                name=\"name\"\n                                                placeholder=\"Додати стимул....\"\n                                                className=\"add_stymul_input\"\n                                            />\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <input\n                                    placeholder=\"Додати опис етапів...\"\n                                    className=\"element_value element_value_input_grey\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.StepDescription}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(event) =>\n                                        setStepDescription(event.target.value)\n                                    }\n                                />\n                                {/*step 1*/}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\n                                    className=\"element_value element_value_input_white\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    background=\"white\"\n                                    defaultValue={\n                                        protocol.CorrectionProcedureStep1\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep1(\n                                            event.target.value\n                                        )\n                                    }\n                                    raised\n                                    theme={{\n                                        colors: {background: 'white'},\n                                    }}\n                                />\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                    <input\n                                        placeholder=\"Додати інструкції до етапу...\"\n                                        className=\"element_value element_value_input_grey\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        defaultValue={protocol.Instructions1}\n                                        onChange={(event) =>\n                                            addInstruction1(event.target.value)\n                                        }\n                                        raised\n                                        theme={{\n                                            colors: {\n                                                background: 'transparent',\n                                            },\n                                        }}\n                                    />\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2 :\n                                </div>\n                                    <input\n                                        placeholder=\"Додати інструкції до етапу...\"\n                                        className=\"element_value element_value_input_white\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        defaultValue={protocol.Instructions2}\n                                        onChange={(event) =>\n                                            addInstruction2(event.target.value)\n                                        }\n                                        raised\n                                        theme={{\n                                            colors: {\n                                                background: 'transparent',\n                                            },\n                                        }}\n                                    />\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 3:\n                                </div>\n                                    <input\n                                        placeholder=\"Додати інструкції до етапу...\"\n                                        className=\"element_value element_value_input_grey\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        defaultValue={protocol.Instructions3}\n                                        onChange={(event) =>\n                                            addInstruction3(event.target.value)\n                                        }\n                                        raised\n                                        theme={{\n                                            colors: {\n                                                background: 'transparent',\n                                            },\n                                        }}\n                                    />\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n                <button\n                    className=\"save_button_supervisor_mobile btn-background-slide\"\n                    style={{cursor: 'pointer'}}\n                    onClick={() => exportUsersToExcel(userEmail, childName)}\n                >\n                    Зберегти файл\n                </button>\n                <div style={{height: '100px'}}></div>\n                <Toaster\n                    position=\"bottom-top\"\n                    reverseOrder={false}\n                    toastOptions={{\n                        style: {\n                            minWidth: '350px',\n                            minHeight: '60px',\n                            paddingLeft: '20px',\n                        },\n                        error: {\n                            duration: 5000,\n                            icon: '⚠️',\n                        },\n                    }}\n                />\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n\nfunction addInstruction1(instructionInput) {\n    localStorage.setItem(\"Instructions1\", instructionInput)\n}\n\nfunction addInstruction2(instructionInput) {\n    localStorage.setItem(\"Instructions2\", instructionInput)\n\n    \n}\n\nfunction addInstruction3(instructionInput) {\n    localStorage.setItem(\"Instructions3\", instructionInput)\n    \n}\n\nfunction addStimul(stimulInput) {\n    const db = app.firestore()\n    if (stimulInput != '') {\n        db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .add({Name: stimulInput})\n    } else {\n        toast.error('Неможливо надіслати пустий стимул')\n    }\n}\n\nfunction addSkill(params) {\n    localStorage.setItem(\"Skill\", params)\n\n}\n\nfunction addMethod(params) {\n    localStorage.setItem(\"Method\", params)\n}\n\n\nfunction addDesirableReaction(params) {\n    localStorage.setItem(\"DesirableReaction\", params)\n\n}\n\nfunction addReductionСriterion(params) {\n    localStorage.setItem(\"ReductionСriterion\", params)\n \n}\n\nfunction addCriterionIncrease(params) {\n    localStorage.setItem(\"CriterionIncrease\", params)\n    \n}\n\n\nfunction setStepDescription(params) {\n    localStorage.setItem(\"StepDescription\", params)\n   \n}\n\nfunction setCorrectionProcedureStep1(params) {\n    localStorage.setItem(\"CorrectionProcedureStep1\", params)\n    \n}\n\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\n    localStorage.setItem(\"SphereOfDevelopment\", sphereOfDevelopment)\n  \n}\n\nfunction addInterval(interval) {\n    localStorage.setItem(\"Interval\", interval)\n   \n}\n\nfunction addMethodTakingHint(method) {\n    localStorage.setItem(\"MethodTakingHint\", method)\n}\nfunction addCriteriongenGenerSkill(generSkill) {\n    localStorage.setItem(\"CriteriongenGenerSkill\",generSkill)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx",["495","496"],"import React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport ProgramHeader from '../Header/ProgramHeader'\nimport MobileHeader from '../Header/MobileHeader'\n\nimport ArrowHeader from './ProgramElement/ArrowHeader'\n\nimport './Program.css'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\n\nfunction RemoveCopiedStatus({protocol}) {\n    if (protocol.StatusCopied != null) {\n        const db = app.firestore()\n        db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .update({StatusCopied: ''})\n    }\n\n    return <></>\n}\n\n// MAIN COMPONENT\n\nexport default function ProgramOnlyView() {\n    let [stimulus, setStimulus] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setStimulus(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Ok')\n                } else {\n                    console.log('Error in Program/ProgramOnlyView')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n\n    return (\n            <>\n                <MobileHeader />\n                <ProgramHeader />\n                <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"title_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.SphereOfDevelopment}\n                                </div>\n\n                                <div\n                                    style={{marginTop: '1rem'}}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.Skill}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.Method}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.DesirableReaction}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:{' '}\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            {protocol.CriteriongenGenerSkill}\n                                        </div>\n                                    </div>\n                                </>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    {protocol.Interval}\n                                    <div\n                                        className=\"element_name\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                    <div\n                                        className=\"element_value\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                </div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.ReductionСriterion}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{fontSize: '20px'}}\n                                >\n                                    {protocol.CriterionIncrease}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    {protocol.MethodTakingHint}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '18px'}}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <li>\n                                                <div className=\"stymul_grid_container\">\n                                                    <div>{stimul.Name}</div>\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.StepDescription}\n                                </div>\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                >\n                                    {protocol.CorrectionProcedureStep1}\n                                </div>\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        placeholder={protocol.Instructions1}\n                                        style={{\n                                            fontSize: '20px',\n                                            backgroundColor: '#EEEEEE',\n                                        }}\n                                    >\n                                        {protocol.Instructions1}\n                                    </div>\n                                </div>\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{fontSize: '20px'}}\n                                    >\n                                        {protocol.Instructions2}\n                                    </div>\n                                </div>\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу3:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{\n                                            backgroundColor: '#EEEEEE',\n                                            fontSize: '20px',\n                                        }}\n                                    >\n                                        {protocol.Instructions3}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n                <div style={{height: '100px'}}></div>\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx",["497","498","499"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport ArrowHeader from '../ArrowHeader/Arrow'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PatientInfoTherapist() {\r\n    let [patients, setPatients] = useState([])\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(\"Users\")\r\n                .doc(localStorage.getItem('user'))\r\n                .collection(\"Therapists\")\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <div>\r\n                {/* className=\"grey_back\" */}\r\n                <ul>\r\n                    {patients.map((patient) => (\r\n                        <>\r\n                            {localStorage.setItem('childName', patient.Name)}\r\n\r\n                            <ArrowHeader patient={patient}/>\r\n             \r\n                            <div className=\"patient_grid_container\">\r\n                                <img\r\n                                    src={patient.Image}\r\n                                    height=\"200\"\r\n                                    className=\"mobile_child_image\"\r\n                                />\r\n                                <img\r\n                                    src={patient.Image}\r\n                                    height=\"270\"\r\n                                    className=\"child_image\"\r\n                                />\r\n                                <div className=\"column_outer_flex_container\">\r\n                                    <div className=\"kid_name\">\r\n                                        {patient.Name}{' '}\r\n                                    </div>\r\n                                    <div className=\"diagnosis_flex_container\">\r\n                                        <h7 className=\"\">\r\n                                            Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        </h7>\r\n                                        <div style={{ color: '#6F6F6F' }}>\r\n                                            {patient.Diagnos}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        <div>Батьки:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Parents}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Стать:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Gender}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        <div>Вік:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Age} років\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Дата народження:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.BirthDate}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{ backgroundColor: '#EEEEEE' }}\r\n                                    >\r\n                                        <div>Місто:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.City}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Країна:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Country}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"second_column_outer_flex_container\">\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'column',\r\n                                        }}\r\n                                    >\r\n                                        {/* <div>Терапевти:</div>\r\n                                    <div>\r\n                                        \r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            fontSize: '20px',\r\n                                                            display: 'flex',\r\n                                                            flexDirection:\r\n                                                                'row',\r\n                                                            justifyContent:\r\n                                                                'space-between',\r\n                                                        }}\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '-20px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                    </div> */}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                                marginLeft: '2rem',\r\n                                            }}\r\n                                        ></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"patient_page_buttons\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: '/patient/result_of_therapy',\r\n                                        myCustomProps: { patient },\r\n                                    }}\r\n                                    className=\"patient_page_buttons_therapy\"\r\n                                >\r\n                                    Результати терапії\r\n                                </Link>\r\n                                <Link\r\n                                    to={'/protocol-list'}\r\n                                    onClick={() =>\r\n                                        localStorage.setItem('program', 'ok')\r\n                                    }\r\n                                    className=\"patient_page_buttons_program\"\r\n                                >\r\n                                    Програма\r\n                                </Link>\r\n                            </div>\r\n                        </>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx",["500","501","502","503","504","505","506","507","508","509"],"import React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport './PatientInfoPage.css'\nimport Header from '../Header/Header'\nimport MobileHeader from '../Header/MobileHeader'\n\nimport Kid from '../../assets/default_avatar.png'\nimport {Link} from 'react-router-dom'\nimport ArrowHeader from '../ArrowHeader/Arrow'\nimport Delete from '../../assets/delete.svg'\nimport toast, {Toaster} from 'react-hot-toast'\nimport About from '../VBmap/VBmap'\n\nexport default function PatientInfoUser() {\n\n\n\n    let [patients, setPatients] = useState([])\n\n    let [therapistInput, setTherapistInput] = useState('')\n\n    let test = []\n\n    const [terapists, setTerapists] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Therapists')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setTerapists(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    terapists.map((terapist) => test.push(terapist.id))\n    console.log(test)\n    localStorage.setItem('therapistID', JSON.stringify(test))\n\n    const [therapists, setTherapists] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Therapists')\n            .onSnapshot((snapshot) => {\n                db.collection(\"Users\")\n                    .doc(localStorage.getItem('user'))\n                    .collection('Supervisors')\n                    .doc(localStorage.getItem('child'))\n                    .update({Supervisor: localStorage.getItem('user')})\n                if (snapshot.size) {\n                    setTherapists(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const db = app.firestore()\n            const data = await db\n                .collection(\"Users\")\n                .doc(localStorage.getItem('user'))\n                .collection('Supervisors')\n                .get()\n            setPatients(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\n        }\n        fetchData()\n    }, [])\n\n    patients = patients.filter(\n        (patient) => patient.id == localStorage.getItem('child')\n    )\n    localStorage.setItem('childName', '')\n    console.log(patients)\n\n    let path = '/protocol-list'\n\n    const [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection('Supervisors')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    if (protocols.length == 0) {\n        path = '/vb-mapp'\n    } else {\n        path = '/protocol-list'\n    }\n    localStorage.setItem('childData', JSON.stringify(patients[0]))\n    return (\n        <div>\n            <MobileHeader />\n            <Header />\n            <ul className=\"no_left\">\n                {patients.map((patient) => (\n                    <>\n                        {localStorage.setItem('childName', patient.Name)}\n\n                       \n                            <ArrowHeader patient={patient}/>\n                      \n                        <div className=\"patient_grid_container\">\n                            <img\n                                src={patient.Image}\n                                height=\"200\"\n                                className=\"mobile_child_image\"\n                            />\n                            <img\n                                src={patient.Image}\n                                height=\"270\"\n                                className=\"child_image\"\n                            />\n                            <div className=\"column_outer_flex_container\">\n                                <div className=\"kid_name\">{patient.Name} </div>\n                                <div className=\"diagnosis_flex_container\">\n                                    <h7 className=\"\">\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\n                                    </h7>\n                                    <div style={{color: '#6F6F6F'}}>\n                                        {patient.Diagnos}\n                                    </div>\n                                </div>\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    <div>Батьки:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.Parents}\n                                    </div>\n                                </div>\n                                <div className=\"zebra_rows_flex_container\">\n                                    <div>Стать:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.Gender}\n                                    </div>\n                                </div>\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    <div>Вік:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.Age} років\n                                    </div>\n                                </div>\n                                <div className=\"zebra_rows_flex_container\">\n                                    <div>Дата народження:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.BirthDate}\n                                    </div>\n                                </div>\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    <div>Місто:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.City}\n                                    </div>\n                                </div>\n                                <div className=\"zebra_rows_flex_container\">\n                                    <div>Країна:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.Country}\n                                    </div>\n                                </div>\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    <div>\n                                        Рівень оцінки вербальних навичок\n                                        (VB-MAPP):\n                                    </div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        <About />\n                                    </div>\n                                </div>\n                                {/* \n                                <div className=\"zebra_rows_flex_container\">\n                                    <div>Зріст:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.KidHeight} см\n                                    </div>\n                                </div>\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                >\n                                    <div>Група крові:</div>\n                                    <div className=\"zebra_rows_flex_container_value\">\n                                        {patient.BloodType}\n                                    </div> */}\n                                {/* </div> */}\n                            </div>\n                            {/* second column */}\n                            <div className=\"second_column_outer_flex_container\">\n                                <div\n                                    className=\"zebra_rows_flex_container\"\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                    }}\n                                >\n                                    <div>Терапевти:</div>\n                                    <div className=\"therapist_info\">\n                                        {/* <ReactSortable list={protocols} setList={setProtocols}> */}\n                                        {therapists\n                                            .sort((a, b) => +a.id - +b.id)\n                                            .map((therapist) => (\n                                                <>\n                                                    <div className=\"therapist_container\">\n                                                        <div>\n                                                            {therapist.Name}\n                                                            <div\n                                                                className=\"zebra_rows_flex_container_value\"\n                                                                style={{\n                                                                    marginTop:\n                                                                        '0px',\n                                                                }}\n                                                            >\n                                                                ({therapist.id})\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"icon_place_therapist\">\n                                                            <img\n                                                                className=\"icon_patient\"\n                                                                onClick={() =>\n                                                                    DeleteTherapist(\n                                                                        therapist.id\n                                                                    )\n                                                                }\n                                                                src={Delete}\n                                                                width=\"8px\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </>\n                                            ))}\n                                    </div>\n\n                                    <div className=\"add_therapist_container\">\n                                        <button\n                                            onClick={() =>\n                                                addTherapist(therapistInput)\n                                            }\n                                            className=\"add_therapist_button\"\n                                        >\n                                            +\n                                        </button>\n                                        <input\n                                            type=\"text\"\n                                            onChange={(event) =>\n                                                setTherapistInput(\n                                                    event.target.value\n                                                )\n                                            }\n                                            name=\"name\"\n                                            placeholder=\"Додати за поштою....\"\n                                            className=\"add_therapist_input\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"patient_page_buttons\">\n                            <Link\n                                to={{\n                                    pathname: '/program-template',\n                                    myCustomProps: {patient},\n                                }}\n                                className=\"patient_page_buttons_therapy\"\n                            >\n                                Історія програми\n                            </Link>\n                            <button\n                                onClick={() => uploadGraphsForSevenDaysToDB()}\n                                className=\"patient_page_button_create_info\"\n                            >\n                                Згенерувати звіт за останні 7 днів\n                            </button>\n                            <Link\n                                to={{\n                                    pathname: '/patient/result_of_therapy',\n                                    myCustomProps: {patient},\n                                }}\n                                className=\"patient_page_buttons_therapy\"\n                            >\n                                Результати терапії\n                            </Link>\n                            <Link\n                                to={path}\n                                onClick={() => setData()}\n                                className=\"patient_page_buttons_program\"\n                            >\n                                Програма\n                            </Link>\n                        </div>\n                        <Toaster\n                            position=\"bottom-top\"\n                            reverseOrder={false}\n                            toastOptions={{\n                                style: {\n                                    minWidth: '350px',\n                                    minHeight: '60px',\n                                    paddingLeft: '20px',\n                                },\n                                success: {\n                                    minWidth: '600px',\n                                    minHeight: '120px',\n                                    duration: 5000,\n                                },\n                                loading: {\n                                    minWidth: '600px',\n                                    minHeight: '120px',\n                                    duration: 5000,\n                                    icon: '✉️',\n                                },\n                                error: {\n                                    duration: 5000,\n                                    icon: '⚠️',\n                                },\n                            }}\n                        />\n                    </>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nfunction uploadGraphsForSevenDaysToDB() {\n    try {\n        fetch(\n            `https://john-steck-api.herokuapp.com/progress/${localStorage.getItem(\n                'user'\n            )}/${localStorage.getItem('child')}`\n        ).then(\n            window.open(\n                `https://john-steck-api.herokuapp.com/get_progress_file/${localStorage.getItem(\n                    'user'\n                )}/${localStorage.getItem('child')}`\n            )\n        )\n\n        toast.success('Файл успішно згенеровано')\n    } catch {\n        toast.error('Помилка при генерації файлу')\n    }\n}\n\nfunction setData() {\n    localStorage.setItem('templateType', 'private')\n    localStorage.setItem('program', 'ok')\n}\n\nfunction DeleteTherapist(therapistId) {\n    console.log('хуй')\n    const db = app.firestore()\n    db .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection('Supervisors')\n        .doc(localStorage.getItem('child'))\n        .collection('Therapists')\n        .doc(therapistId)\n        .delete()\n\n\n    db\n        .collection(\"Users\")\n        .doc(therapistId)\n        .collection('Therapists')\n        .doc(localStorage.getItem('child'))\n        .delete()\n    toast.success(`Видалено терапіста за електронною поштою: ${therapistId}`)\n}\n\nfunction addTherapist(therapistInput) {\n    const db = app.firestore()\n    if (therapistInput != '') {\n        db .collection(\"Users\")\n            .doc(therapistInput)\n            .get()\n            .then((doc) => {\n                if(doc.id==localStorage.getItem('user')){\n                    toast.error('Ви не можете добавити самого себе в ролі терапіста!')\n                }\n                else if (doc.exists) {\n                    console.log('zaebis pashe')\n                    db\n                        .collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                        .doc(localStorage.getItem('child'))\n                        .collection('Therapists')\n                        .doc(therapistInput)\n                        .set({Name: doc.data().Name})\n                    toast.success(\n                        `Терапіст ${\n                            doc.data().Name\n                        } доданий за електронною поштою: ${therapistInput}`\n                    )\n                    fetch(\n                        `https://john-steck-api.herokuapp.com/email/reg_child/${\n                            localStorage.getItem('Name') +\n                            ' ' +\n                            localStorage.getItem('Surname')\n                        }/${localStorage.getItem(\n                            'childName'\n                        )}/${therapistInput}`\n                    ).then((data) => {})\n                } else {\n                    toast.loading(\n                        `Відправлено лист на реєстрацію на: ${therapistInput}`\n                    )\n                    db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection('Supervisors')\n                        .doc(localStorage.getItem('child'))\n                        .collection('Therapists')\n                        .doc(therapistInput)\n                        .set({Name: 'Очікуємо реєстрації'})\n\n                    db\n                        .collection(\"Users\")\n                        .doc(therapistInput)\n                        .set({Name: 'Очікуємо реєстрації'})\n                    fetch(\n                        `https://john-steck-api.herokuapp.com/email/reg/${\n                            localStorage.getItem('Name') +\n                            ' ' +\n                            localStorage.getItem('Surname')\n                        }/${localStorage.getItem(\n                            'childName'\n                        )}/${therapistInput}`\n                    ).then((data) => {})\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    } else {\n        toast.error('Спочатку вкажіть пошту терапевта')\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx",["510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529"],"import './ProtocolList.css'\nimport React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport ProtocolItem from './PageComponent/ProtocolItem'\nimport Header from '../Header/Header'\nimport ArrowHeader from './PageComponent/ArrowHeader'\nimport Popup from '../ModalWindow/Popup'\nimport MobileHeader from '../Header/MobileHeader'\nimport {BsPlusCircle} from 'react-icons/bs'\nimport {Link} from 'react-router-dom'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\nexport default function ProtocolList() {\n    let test = []\n    const [protocolsToTerapists, setProtocolsToTerapists] = useState([])\n    let listTest = JSON.parse(localStorage.getItem('therapistID'))\n    console.log(listTest[0])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocolsToTerapists(\n                        snapshot.docs.map((doc) => {\n                            console.log('UPD', doc.data())\n                            listTest.map((terapist) => {\n                                \n                                db.collection(\"Users\")\n                                .doc(terapist)\n                                .collection('Therapists')\n                                    .doc(localStorage.getItem('child'))\n                                    .collection('Protocols')\n                                    .doc(doc.id)\n                                    .set(doc.data())\n\n                                db.collection(\"Users\")\n                                .doc(terapist)\n                                .collection('Therapists')\n                                    .doc(localStorage.getItem('child'))\n                                    .set(\n                                        JSON.parse(\n                                            localStorage.getItem('childData')\n                                        )\n                                    )\n                            })\n                        })\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    const [stimulusToTerapists, setStimulusToTerapists] = useState([])\n\n    console.log(listTest[0])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    snapshot.docs.map((doc) => {\n                        db.collection(\"Users\")\n                        .doc(localStorage.getItem('user'))\n                        .collection(localStorage.getItem('proffesion'))\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .doc(doc.id)\n                            .collection('Stimulus')\n                            .onSnapshot((snapshot) => {\n                                if (snapshot.size) {\n                                    setStimulusToTerapists(\n                                        snapshot.docs.map((docStim) => {\n                                            listTest.map((terapist) => {\n                                                db.collection(\"Users\")\n                                                .doc(terapist)\n                                                .collection('Therapists')\n                                                    .doc(\n                                                        localStorage.getItem(\n                                                            'child'\n                                                        )\n                                                    )\n                                                    .collection('Protocols')\n                                                    .doc(doc.id)\n                                                    .collection('Stimulus')\n                                                    .doc(docStim.id)\n                                                    .set(docStim.data())\n                                            })\n                                        })\n                                    )\n                                } else {\n                                    console.log('Сука1')\n                                }\n                            })\n                    })\n\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    // useEffect(() => {\n    //     const db = app.firestore()\n    //     var test=1\n    //     const unsubscribe = db\n    //         .collection(localStorage.getItem(\"proffesion\"))\n    //         .doc(localStorage.getItem('user'))\n    //         .collection('Patient')\n    //         .doc(localStorage.getItem('child'))\n    //         .collection('Protocols')\n    //         .onSnapshot((snapshot) => {\n    //             if (snapshot.size) {\n    //                 setProtocols(\n    //                     snapshot.docs.sort((a, b) => +a.data().ProtocolId - +b.data().ProtocolId).map((doc) => {\n    //                         db.collection(localStorage.getItem(\"proffesion\"))\n    //                         .doc(localStorage.getItem('user'))\n    //                         .collection('Patient')\n    //                         .doc(localStorage.getItem('child'))\n    //                         .collection('Protocols').doc(doc.data().id)\n    //                         .update({ ProtocolId: test })\n    //                         test+=1\n    //                         console.log(\"СУКАААААААААААА_1\"+ test)\n    //                     })\n\n    //                 )\n    //                 console.log('Сука')\n    //                 // for (let i = 0; i < protocols.length; i++) {\n    //                 //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\n    //                 //     db.collection(localStorage.getItem(\"proffesion\"))\n    //                 //         .doc(localStorage.getItem('user'))\n    //                 //         .collection('Patient')\n    //                 //         .doc(localStorage.getItem('child'))\n    //                 //         .collection('Protocols').doc(protocols[i].id)\n    //                 //         .update({ ProtocolId: i + 1 })\n\n    //                 // }\n\n    //             } else {\n    //                 console.log('Сука1')\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n    protocols.map((protocol) => test.push(protocol.id))\n    console.log(test)\n\n    localStorage.setItem('protoID', JSON.stringify(test))\n\n    const [child, setChild] = useState([0])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .where('Name', '==', localStorage.getItem('childName'))\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setChild(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const togglePopup = () => {\n        setIsOpen(!isOpen)\n    }\n\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\n    function dragStartHandler(event, protocol) {\n        console.log('DRAG' + protocol.ProtocolId)\n        setcurrrentProtocoll(protocol)\n    }\n    function dragEndHandler(event, protocol) {\n        event.target.style.border = 'none'\n    }\n    function dragOverHandler(event) {\n        event.preventDefault()\n        event.target.style.border = 'solid 3px #c9c9c9'\n    }\n\n    function dropHandler(event, protocol) {\n        const db = app.firestore()\n        event.preventDefault()\n        event.target.style.border = 'none'\n        console.log('DROP' + protocol.ProtocolId)\n        setProtocols(\n            protocols.map((proto) => {\n               \n\n                if (proto.ProtocolId == protocol.ProtocolId) {\n                    db.collection(\"Users\")\n                    .doc(localStorage.getItem('user'))\n                    .collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('child'))\n                        .collection('Protocols')\n                        .doc(currrentProtocoll.id)\n                        .update({ProtocolId: protocol.ProtocolId})\n                    db.collection(\"Users\")\n                    .doc(localStorage.getItem('user'))\n                    .collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('child'))\n                        .collection('Protocols')\n                        .doc(protocol.id)\n                        .update({ProtocolId: currrentProtocoll.ProtocolId})\n                }\n               \n\n                return proto\n            })\n        )\n\n        // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\n\n        // })\n    }\n\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\n\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n            <Link to=\"/vb-mapp\">\n            <button\n                class=\"create_template_button btn-background-slide\"\n                // onClick={togglePopup}\n            >\n                Редагувати програму\n            </button>\n            </Link>\n            {/* <div\n                onClick={() => addProto(protocols.length)}\n                className=\"add-proto-mobile\"\n            >\n                <BsPlusCircle />\n            </div> */}\n            {/* {isOpen && (\n                <Popup\n                    protocols={protocols}\n                    child={child[0]}\n                    content={\n                        <>\n                            <b className=\"text_modul\">\n                                Будь ласка, оберіть тип даного шаблону:\n                            </b>\n                            <div className=\"button_modul\"></div>\n                        </>\n                    }\n                    handleClose={togglePopup}\n                />\n            )} */}\n            <div className=\"create_element\">\n                {/* <ReactSortable list={protocols} setList={setProtocols}> */}\n                {protocolsNumber.map((protocol) => (\n                    <>\n                        <div\n                            // draggable=\"true\"\n                            // onDragStart={(event) => {\n                            //     dragStartHandler(event, protocols[protocol - 1])\n                            // }}\n                            // onDragLeave={(event) => {\n                            //     dragEndHandler(event, protocols[protocol - 1])\n                            // }}\n                            // onDragEnd={(event) => {\n                            //     dragEndHandler(event, protocols[protocol - 1])\n                            // }}\n                            // onDragOver={(event) => {\n                            //     dragOverHandler(event)\n                            // }}\n                            // onDrop={(event) => {\n                            //     dropHandler(event, protocols[protocol - 1])\n                            // }}\n                        >\n                            <ProtocolItem\n                                protocols={protocols}\n                                number={protocol}\n                                protocolId={protocols[protocol - 1].id}\n                                protocolName={\n                                    protocols[protocol - 1].ProtocolId\n                                }\n                                sphereOfDevelopment={\n                                    protocols[protocol - 1].SphereOfDevelopment\n                                }\n                                length={protocols.length}\n                                skill={protocols[protocol - 1].Skill}\n                                statusCopied={\n                                    protocols[protocol - 1].StatusCopied\n                                }\n                                isActive={protocols[protocol - 1].IsActive}\n                                interval={protocols[protocol - 1].Interval}\n                                correctionProcedureStep1={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep1\n                                }\n                                correctionProcedureStep2={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep2\n                                }\n                                correctionProcedureStep3={\n                                    protocols[protocol - 1]\n                                        .CorrectionProcedureStep3\n                                }\n                                criterionIncrease={\n                                    protocols[protocol - 1].CriterionIncrease\n                                }\n                                desirableReaction={\n                                    protocols[protocol - 1].DesirableReaction\n                                }\n                                method={protocols[protocol - 1].Method}\n                                methodTakingHint={\n                                    protocols[protocol - 1].MethodTakingHint\n                                }\n                                reductionСriterion={\n                                    protocols[protocol - 1].ReductionСriterion\n                                }\n                                stepDescription={\n                                    protocols[protocol - 1].StepDescription\n                                }\n                                CriteriongenGenerSkill={\n                                    protocols[protocol - 1]\n                                        .CriteriongenGenerSkill\n                                }\n                                instruction1={\n                                    protocols[protocol - 1].Instructions1\n                                }\n                                instruction2={\n                                    protocols[protocol - 1].Instructions2\n                                }\n                                instruction3={\n                                    protocols[protocol - 1].Instructions3\n                                }\n                            />\n                        </div>\n                    </>\n                ))}\n                {/* </ReactSortable> */}\n            </div>\n        </>\n    )\n}\n\nfunction addProto(length) {\n    const db = app.firestore()\n    console.log(\"QQQQQQQQQQQQQQQQQQQQQQ\")\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .add({\n            ProtocolId: +length + 1,\n            SphereOfDevelopment: '',\n            Skill: '',\n            IsActive: '',\n            Interval: '',\n            CorrectionProcedureStep1: '',\n            CorrectionProcedureStep2: '',\n            CorrectionProcedureStep3: '',\n            CriterionIncrease: '',\n            DesirableReaction: '',\n            Method: '',\n            MethodTakingHint: '',\n            ReductionСriterion: '',\n            StepDescription: '',\n            CriteriongenGenerSkill: '',\n        })\n\n    // console.log(data.key)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx",["530","531"],"import React, {useEffect, useState} from 'react'\nimport app from '../../Firebase/firebase'\nimport ProtocolItemTherapist from './PageComponent/ProtocolItemTherapist'\nimport Header from '../Header/Header'\nimport {Link} from 'react-router-dom'\nimport Arrow from '../../assets/arrow.png'\nimport './ProtocolList.css'\nimport MobileHeader from '../Header/MobileHeader'\nimport TreeArrowHeader from '../ArrowHeader/TreeArrowHeader'\n\nexport default function ProtocolList() {\n    let test = []\n\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('yeah')\n                } else {\n                    console.log(\n                        'error in ProtocolList/ProtocolListTherapist.js'\n                    )\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    protocols.map((protocol) => test.push(protocol.id))\n    console.log(test)\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\n\n    localStorage.setItem('protoID', JSON.stringify(test))\n\n    // const [child, setChild] = useState([0])\n    // useEffect(() => {\n    //     const db = app.firestore()\n    //     const unsubscribe = db\n    //         .collection(localStorage.getItem('proffesion'))\n    //         .doc(localStorage.getItem('user'))\n    //         .collection('Patient')\n    //         .where('Name', '==', localStorage.getItem('childName'))\n    //         .onSnapshot((snapshot) => {\n    //             if (snapshot.size) {\n    //                 setChild(\n    //                     snapshot.docs.map((doc) => ({\n    //                         ...doc.data(),\n    //                         id: doc.id,\n    //                     }))\n    //                 )\n    //                 console.log('Сука')\n    //             } else {\n    //                 console.log('Сука1')\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n\n    return (\n        <>\n            <MobileHeader />\n            <Header />\n            <TreeArrowHeader patient={localStorage.getItem(\"childName\")} page={\"Програма\"}/>\n\n            {protocolsNumber.map((protocol) => (\n                <ProtocolItemTherapist\n                    number={protocol}\n                    protocolId={protocols[protocol - 1].id}\n                    protocolName={protocols[protocol - 1].ProtocolId}\n                    sphereOfDevelopment={\n                        protocols[protocol - 1].SphereOfDevelopment\n                    }\n                    length={protocols.length}\n                    skill={protocols[protocol - 1].Skill}\n                    statusCopied={protocols[protocol - 1].StatusCopied}\n                    isActive={protocols[protocol - 1].IsActive}\n                    interval={protocols[protocol - 1].Interval}\n                    correctionProcedureStep1={\n                        protocols[protocol - 1].CorrectionProcedureStep1\n                    }\n                    correctionProcedureStep2={\n                        protocols[protocol - 1].CorrectionProcedureStep2\n                    }\n                    correctionProcedureStep3={\n                        protocols[protocol - 1].CorrectionProcedureStep3\n                    }\n                    criterionIncrease={\n                        protocols[protocol - 1].CriterionIncrease\n                    }\n                    desirableReaction={\n                        protocols[protocol - 1].DesirableReaction\n                    }\n                    method={protocols[protocol - 1].Method}\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\n                    reductionСriterion={\n                        protocols[protocol - 1].ReductionСriterion\n                    }\n                    stepDescription={protocols[protocol - 1].StepDescription}\n                    CriteriongenGenerSkill={\n                        protocols[protocol - 1].CriteriongenGenerSkill\n                    }\n                />\n            ))}\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx",["532","533","534","535","536","537"],"import React, {useState} from 'react'\nimport './ButtonsTemplate.css'\nimport {Link} from 'react-router-dom'\n\nexport default function ButtonsTemplate() {\n    let decorPublic = 'none'\n    let decorPrivate = 'none'\n\n    if (localStorage.getItem('templateType') == 'public') {\n        decorPublic = 'underline'\n        decorPrivate = 'none'\n    }\n    if (localStorage.getItem('templateType') == 'private') {\n        decorPrivate = 'underline'\n        decorPublic = 'none'\n    }\n    return (\n        <>\n            <div className=\"buttons-template\">\n                {/*<Link to=\"/program-template\">*/}\n                {/*    <button*/}\n                {/*        id=\"temp-button-prv\"*/}\n                {/*        className=\"buttons-template-private\"*/}\n                {/*        onClick={() =>*/}\n                {/*            localStorage.setItem('templateType', 'private')*/}\n                {/*        }*/}\n                {/*        style={{textDecoration: decorPrivate}}*/}\n                {/*    >*/}\n                {/*        Мої шаблони*/}\n                {/*    </button>*/}\n                {/*</Link>*/}\n                {/*<Link to=\"/public-template\">*/}\n                {/*    <button*/}\n                {/*        id=\"temp-button-pub\"*/}\n                {/*        className=\"buttons-template-public\"*/}\n                {/*        onClick={() =>*/}\n                {/*            localStorage.setItem('templateType', 'public')*/}\n                {/*        }*/}\n                {/*        style={{textDecoration: decorPublic}}*/}\n                {/*    >*/}\n                {/*        Загальні шаблони*/}\n                {/*    </button>*/}\n                {/*</Link>*/}\n            </div>\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx",["538"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\n\nimport {Link} from 'react-router-dom'\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport MobileHeader from '../../Header/MobileHeader'\n\nexport default function ListMoreInfoPublic() {\n    const [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('yeah')\n                } else {\n                    console.log(\n                        'error in ProtocolList/ProtocolListTherapist.js'\n                    )\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\n\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n\n    return (\n        <>\n            <MobileHeader />\n            <HeaderHomeTemplate />\n            <ArrowHeaderTemplate />\n\n            {protocolsNumber.map((protocol) => (\n                <ProtocolItemTemplate\n                    number={protocol}\n                    protocolId={protocols[protocol - 1].id}\n                    protocolName={protocols[protocol - 1].ProtocolId}\n                    sphereOfDevelopment={\n                        protocols[protocol - 1].SphereOfDevelopment\n                    }\n                    length={protocols.length}\n                    skill={protocols[protocol - 1].Skill}\n                    statusCopied={protocols[protocol - 1].StatusCopied}\n                    isActive={protocols[protocol - 1].IsActive}\n                    interval={protocols[protocol - 1].Interval}\n                    correctionProcedureStep1={\n                        protocols[protocol - 1].CorrectionProcedureStep1\n                    }\n                    correctionProcedureStep2={\n                        protocols[protocol - 1].CorrectionProcedureStep2\n                    }\n                    correctionProcedureStep3={\n                        protocols[protocol - 1].CorrectionProcedureStep3\n                    }\n                    criterionIncrease={\n                        protocols[protocol - 1].CriterionIncrease\n                    }\n                    desirableReaction={\n                        protocols[protocol - 1].DesirableReaction\n                    }\n                    method={protocols[protocol - 1].Method}\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\n                    reductionСriterion={\n                        protocols[protocol - 1].ReductionСriterion\n                    }\n                    stepDescription={protocols[protocol - 1].StepDescription}\n                    CriteriongenGenerSkill={\n                        protocols[protocol - 1].CriteriongenGenerSkill\n                    }\n                />\n            ))}\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\HistoryProtocolItem.jsx",["539","540","541","542","543","544","545","546","547","548","549"],"import Duplicate from '../../../assets/duplicate_task.svg'\nimport Visible from '../../../assets/visible.svg'\nimport UnVisible from '../../../assets/unVisible.svg'\nimport Delete from '../../../assets/delete.svg'\nimport { useState, useEffect } from 'react'\nimport app from '../../../Firebase/firebase'\nimport { Link } from 'react-router-dom'\nimport EditIcon from '../../../assets/edit_new.svg'\nimport SecondModal from '../../ModalWindow/SecondModal'\nexport default function HistoryProtocolItem({\n\n    number,\n    sphereOfDevelopment,\n    skill,\n \n\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n\n\n    return (\n        <>\n            <div className=\"protocol_item\" style={{ backgroundColor: colorItem }}>\n                <p className=\"protocol_item_text \">\n                    Протокол {number}.{sphereOfDevelopment}.{skill}\n                </p>\n                <div className=\"icon_place\">\n                </div>\n            </div>\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx",["550","551","552","553","554","555","556"],"import {Link} from 'react-router-dom'\nimport React, {useEffect, useState} from 'react'\nimport Arrow from '../../../assets/arrow.png'\nimport Delete from '../../../assets/delete.svg'\nimport app from '../../../Firebase/firebase'\nimport {BsPlusCircle} from 'react-icons/bs'\nimport '../ProtocolList.css'\nfunction ArrowHeader() {\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{marginLeft: '6rem'}}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link to=\"/patient\" className=\"patients_link\">\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2 style={{color: '#6F6F6F'}}>Програма</h2>\n\n                {/* <div\n                    onClick={() => addProto(protocols.length)}\n                    className=\"add-proto\"\n                >\n                    <BsPlusCircle size={50} style={{marginTop: '30px'}} />\n                </div> */}\n            </div>\n        </>\n    )\n}\nfunction addProto(length) {\n    const db = app.firestore()\n\n    db .collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .add({\n            ProtocolId: +length + 1,\n            SphereOfDevelopment: '',\n            Skill: '',\n            IsActive: '',\n            Interval: '',\n            CorrectionProcedureStep1: '',\n            CorrectionProcedureStep2: '',\n            CorrectionProcedureStep3: '',\n            CriterionIncrease: '',\n            DesirableReaction: '',\n            Method: '',\n            MethodTakingHint: '',\n            ReductionСriterion: '',\n            StepDescription: '',\n            CriteriongenGenerSkill: '',\n        })\n\n    // console.log(data.key)\n}\nexport default ArrowHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx",["557","558","559"],"import React from 'react'\nimport './Modal.css'\nimport app from '../../Firebase/firebase'\nconst Popup = (props) => {\n    console.log(props.protocols)\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>\n                    x\n                </span>\n                {props.content}\n                <div className=\"button-popup\">\n                    <button\n                        onClick={() =>\n                            CreateProgramTemplates(\n                                props.protocols,\n                                props.child,\n                                'Приватний'\n                            )\n                        }\n                        className=\"button_private\"\n                    >\n                        Приватний\n                    </button>\n                    <button\n                        onClick={() =>\n                            CreateProgramTemplates(\n                                props.protocols,\n                                props.child,\n                                'Публічний'\n                            )\n                        }\n                        className=\"button_public\"\n                    >\n                        Публічний\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\n    var endCycle = 0\n    console.log(protocols)\n    const db = app.firestore()\n    if (typeTemplates == 'Приватний') {\n        db.collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .add({\n                Age: child.Age,\n                Diagnos: child.Diagnos,\n                KidWeight: child.KidWeight,\n            })\n            .then(function (docRef) {\n                protocols.map((protocol) =>\n                    db\n                        .collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('user'))\n                        .collection('ProgramTemplates')\n                        .doc(docRef.id)\n                        .collection('protocols')\n                        .add(protocol)\n                )\n                db.collection(localStorage.getItem('proffesion'))\n                    .doc(localStorage.getItem('user'))\n                    .collection('ProgramTemplates')\n                    .doc(docRef.id)\n                    .set({\n                        Age: child.Age,\n                        Diagnos: child.Diagnos,\n                        KidWeight: child.KidWeight,\n                        CountOfProtocol: protocols.length,\n                    })\n            })\n            .catch(function (error) {\n                console.error('Error adding document: ', error)\n            })\n        endCycle = 1\n    }\n    if (typeTemplates == 'Публічний') {\n        db.collection('ProgramTemplates')\n            .add({\n                Age: child.Age,\n                Diagnos: child.Diagnos,\n                KidWeight: child.KidWeight,\n            })\n            .then(function (docRef) {\n                protocols.map((protocol) =>\n                    db\n                        .collection('ProgramTemplates')\n                        .doc(docRef.id)\n                        .collection('protocols')\n                        .add(protocol)\n                )\n                db.collection('ProgramTemplates').doc(docRef.id).set({\n                    Age: child.Age,\n                    Diagnos: child.Diagnos,\n                    KidWeight: child.KidWeight,\n                    CountOfProtocol: protocols.length,\n                })\n            })\n            .catch(function (error) {\n                console.error('Error adding document: ', error)\n            })\n        endCycle = 1\n    }\n\n    if (endCycle == 1) {\n        setTimeout(() => {\n            alert(`${typeTemplates} шаблон протоколів успішно створений!`)\n            window.location.reload()\n        })\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx",["560","561"],"import {useState} from 'react'\nimport {AiOutlineArrowRight} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\n\nexport default function ProtocolItemTemplate({\n    number,\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n\n    return (\n        <>\n            <Link\n                title=\"Переглянути\"\n                onClick={() => {\n                    setData(protocolId, number)\n                }}\n                to=\"template-more-info-protocol\"\n            >\n                <div\n                    className=\"protocol_item\"\n                    style={{backgroundColor: colorItem, marginLeft: '7vw'}}\n                >\n                    <p className=\"protocol_item_text \">\n                        Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\n                        {skill}\n                    </p>\n                    <div className=\"icon_place\">\n                        <Link\n                            title=\"Переглянути\"\n                            onClick={() => {\n                                setData(protocolId, number)\n                            }}\n                            to=\"template-more-info-protocol\"\n                        >\n                            <AiOutlineArrowRight\n                                className=\"icon go_icon\"\n                                color=\"black\"\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </Link>\n        </>\n    )\n}\n\nfunction setData(param1, param2) {\n    localStorage.setItem('program', param1)\n    localStorage.setItem('programNumber', param2)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx",["562"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport ProtocolItemTemplateEdit from './ProtocolItemTemplateEdit'\n\nimport {Link} from 'react-router-dom'\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport MobileHeader from '../../Header/MobileHeader'\n\nexport default function ListMoreInfoPrivate() {\n    const [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('yeah')\n                } else {\n                    console.log(\n                        'error in ProtocolList/ProtocolListTherapist.js'\n                    )\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\n\n    let protocolsNumber = []\n    for (let i = 0; i < protocols.length; i++) {\n        protocolsNumber.push(i + 1)\n    }\n    console.log(protocolsNumber)\n\n    return (\n        <>\n            <MobileHeader />\n            <HeaderHomeTemplate />\n            <ArrowHeaderTemplate />\n\n            {protocolsNumber.map((protocol) => (\n                <ProtocolItemTemplateEdit\n                    number={protocol}\n                    protocolId={protocols[protocol - 1].id}\n                    protocolName={protocols[protocol - 1].ProtocolId}\n                    sphereOfDevelopment={\n                        protocols[protocol - 1].SphereOfDevelopment\n                    }\n                    length={protocols.length}\n                    skill={protocols[protocol - 1].Skill}\n                    statusCopied={protocols[protocol - 1].StatusCopied}\n                    isActive={protocols[protocol - 1].IsActive}\n                    interval={protocols[protocol - 1].Interval}\n                    correctionProcedureStep1={\n                        protocols[protocol - 1].CorrectionProcedureStep1\n                    }\n                    correctionProcedureStep2={\n                        protocols[protocol - 1].CorrectionProcedureStep2\n                    }\n                    correctionProcedureStep3={\n                        protocols[protocol - 1].CorrectionProcedureStep3\n                    }\n                    criterionIncrease={\n                        protocols[protocol - 1].CriterionIncrease\n                    }\n                    desirableReaction={\n                        protocols[protocol - 1].DesirableReaction\n                    }\n                    method={protocols[protocol - 1].Method}\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\n                    reductionСriterion={\n                        protocols[protocol - 1].ReductionСriterion\n                    }\n                    stepDescription={protocols[protocol - 1].StepDescription}\n                    CriteriongenGenerSkill={\n                        protocols[protocol - 1].CriteriongenGenerSkill\n                    }\n                />\n            ))}\n        </>\n    )\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx",["563"],"import {Link} from 'react-router-dom'\nimport Arrow from '../../../assets/arrow.png'\n\nfunction ArrowHeaderTemplate() {\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{marginLeft: '6rem'}}>\n                    <Link\n                        to=\"/vb-mapp\"\n                        className=\"patients_link\"\n                        onClick={() =>\n                            localStorage.setItem('templateType', 'private')\n                        }\n                    >\n                        Шаблони\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <Link to=\"/template-more-info\">\n                    <h2 style={{color: '#6F6F6F'}}>\n                        Список протоколів шаблону\n                    </h2>\n                </Link>\n            </div>\n        </>\n    )\n}\nexport default ArrowHeaderTemplate\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx",["564","565","566","567","568","569","570"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport StimulusItem from './ProgramElement/StimulusItem'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport ArrowHeaderEdit from '../PageComponent/ArrowHeaderEdit'\nimport './ProgramTemplate.css'\nimport MobileHeader from '../../Header/MobileHeader'\n\nfunction RemoveCopiedStatus({protocol}) {\n    if (protocol.StatusCopied != null) {\n        const db = app\n            .firestore()\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .doc(localStorage.getItem('program'))\n            .update({StatusCopied: ''})\n    }\n\n    return <></>\n}\n\n// MAIN COMPONENT\n\nexport default function ProgramEditableTemplate() {\n    let [stimulus, setStimulus] = useState([])\n    let [stimulInput, setStimulInput] = useState('')\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setStimulus(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n    const [fileGenerated, setFileGenerated] = useState(0)\n\n    let userEmail = localStorage.getItem('user')\n\n    return (\n            <>\n                <MobileHeader />\n                <HeaderHomeTemplate />\n                <ArrowHeaderEdit />\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"element_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n                            <RemoveCopiedStatus protocol={protocol} />\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати сферу розвитку...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.SphereOfDevelopment}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addSphereOfDevelopment(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{marginTop: '1rem'}}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати навик...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Skill}\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) => addSkill(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати метод...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Method}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) => addMethod(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати бажану реакцію...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.DesirableReaction}\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                    onChange={(e) =>\n                                        addDesirableReaction(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:{' '}\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            <input\n                                                placeholder=\"Вказати критерій...\"\n                                                className=\"element_value\"\n                                                multiline=\"true\"\n                                                underlineColor=\"transparent\"\n                                                selectionColor=\"primary\"\n                                                defaultValue={\n                                                    protocol.CriteriongenGenerSkill\n                                                }\n                                                style={{fontSize: '20px'}}\n                                                raised\n                                                theme={{\n                                                    colors: {\n                                                        background: '#fcfcfc',\n                                                    },\n                                                }}\n                                                onChange={(e) =>\n                                                    addCriteriongenGenerSkill(\n                                                        e.target.value\n                                                    )\n                                                }\n                                            />\n                                        </div>\n                                    </div>\n                                </>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Interval}\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {backgroundColor: 'white'},\n                                    }}\n                                    onChange={(e) =>\n                                        addInterval(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.ReductionСriterion}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(e) =>\n                                        addReductionСriterion(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати критерій...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.CriterionIncrease}\n                                    onChange={(e) =>\n                                        addCriterionIncrease(e.target.value)\n                                    }\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'transparent'},\n                                    }}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                        minWidth: 'auto',\n                                        maxWidth: 'auto',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    <select\n                                        defaultValue={protocol.MethodTakingHint}\n                                        onChange={(event) =>\n                                            addMethodTakingHint(\n                                                event.target.value\n                                            )\n                                        }\n                                        className=\"select_way\"\n                                    >\n                                        <option value=\"false\"></option>\n                                        <option value=\"Тимчасова затримка\">\n                                            Тимчасова затримка\n                                        </option>\n                                        <option value=\"Від найменшої до найбільшої\">\n                                            Від найменшої до найбільшої\n                                        </option>\n                                    </select>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '18px'}}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <StimulusItem\n                                                name={stimul.Name}\n                                                stimulId={stimul.id}\n                                            />\n                                        ))}\n\n                                        <div className=\"add_stymul_container\">\n                                            <button\n                                                onClick={() =>\n                                                    addStimul(stimulInput)\n                                                }\n                                                className=\"add_stymul_button\"\n                                            >\n                                                +\n                                            </button>\n                                            <input\n                                                type=\"text\"\n                                                onChange={(event) =>\n                                                    setStimulInput(\n                                                        event.target.value\n                                                    )\n                                                }\n                                                name=\"name\"\n                                                placeholder=\"Додати стимул....\"\n                                                className=\"add_stymul_input\"\n                                            />\n                                        </div>\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <input\n                                    placeholder=\"Додати опис етапів...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.StepDescription}\n                                    style={{fontSize: '20px'}}\n                                    raised\n                                    theme={{\n                                        colors: {background: '#fcfcfc'},\n                                    }}\n                                    onChange={(event) =>\n                                        setStepDescription(event.target.value)\n                                    }\n                                />\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <input\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    background=\"white\"\n                                    defaultValue={\n                                        protocol.CorrectionProcedureStep1\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep1(\n                                            event.target.value\n                                        )\n                                    }\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {background: 'white'},\n                                    }}\n                                />\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions1}\n                                    onChange={(event) =>\n                                        addInstruction1(event.target.value)\n                                    }\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        fontSize: '20px',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2 :\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions2}\n                                    onChange={(event) =>\n                                        addInstruction2(event.target.value)\n                                    }\n                                    style={{\n                                        fontSize: '20px',\n                                        background: 'white',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 3:\n                                </div>\n                                <input\n                                    placeholder=\"Додати інструкції до етапу...\"\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    defaultValue={protocol.Instructions3}\n                                    onChange={(event) =>\n                                        addInstruction3(event.target.value)\n                                    }\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        fontSize: '20px',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: {\n                                            background: 'transparent',\n                                        },\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n\n                <div style={{height: '100px'}}></div>\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n\nfunction addInstruction1(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions1: instructionInput})\n}\n\nfunction addInstruction2(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions2: instructionInput})\n}\n\nfunction addInstruction3(instructionInput) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Instructions3: instructionInput})\n}\n\nfunction addStimul(stimulInput) {\n    const db = app.firestore()\n    if (stimulInput != '') {\n        db.collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .add({Name: stimulInput})\n    } else {\n        alert('Неможливо надіслати пустий стимул')\n    }\n}\nfunction addSkill(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Skill: params})\n    console.log(params)\n}\n\nfunction addMethod(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Method: params})\n    console.log(params)\n}\nfunction addDesirableReaction(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({DesirableReaction: params})\n    console.log(params)\n}\n\nfunction addReductionСriterion(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ReductionСriterion: params})\n    console.log(params)\n}\n\nfunction addCriterionIncrease(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({CriterionIncrease: params})\n    console.log(params)\n}\n\nfunction setStepDescription(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({StepDescription: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep3(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep3: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep2(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep2: params})\n    console.log(params)\n}\nfunction setCorrectionProcedureStep1(params) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({CorrectionProcedureStep1: params})\n    console.log(params)\n}\n\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({SphereOfDevelopment: sphereOfDevelopment})\n    console.log(sphereOfDevelopment)\n}\n\nfunction addInterval(interval) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({Interval: interval})\n}\n\nfunction addMethodTakingHint(method) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({MethodTakingHint: method})\n}\nfunction addCriteriongenGenerSkill(generSkill) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .update({CriteriongenGenerSkill: generSkill})\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx",["571"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\n\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport MobileHeader from '../../Header/MobileHeader'\n\n// MAIN COMPONENT\n\nexport default function ProgramTemplateViewPublic() {\n    let [stimulus, setStimulus] = useState([])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('yeah')\n                } else {\n                    console.log(\n                        'error in ProtocolList/ProtocolListTherapist.js'\n                    )\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n\n    return (\n            <>\n                <MobileHeader />\n                <HeaderHomeTemplate />\n                <ArrowHeaderTemplate />\n\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"title_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.SphereOfDevelopment}\n                                </div>\n\n                                <div\n                                    style={{marginTop: '1rem'}}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.Skill}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.Method}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.DesirableReaction}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:{' '}\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            {protocol.CriteriongenGenerSkill}\n                                        </div>\n                                    </div>\n                                </>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    {protocol.Interval}\n                                    <div\n                                        className=\"element_name\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                    <div\n                                        className=\"element_value\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                </div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.ReductionСriterion}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{fontSize: '20px'}}\n                                >\n                                    {protocol.CriterionIncrease}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    {protocol.MethodTakingHint}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '18px'}}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <li>\n                                                <div className=\"stymul_grid_container\">\n                                                    <div>{stimul.Name}</div>\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.StepDescription}\n                                </div>\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                >\n                                    {protocol.CorrectionProcedureStep1}\n                                </div>\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        placeholder={protocol.Instructions1}\n                                        style={{\n                                            fontSize: '20px',\n                                            backgroundColor: '#EEEEEE',\n                                        }}\n                                    >\n                                        {protocol.Instructions1}\n                                    </div>\n                                </div>\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{fontSize: '20px'}}\n                                    >\n                                        {protocol.Instructions2}\n                                    </div>\n                                </div>\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу3:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{\n                                            backgroundColor: '#EEEEEE',\n                                            fontSize: '20px',\n                                        }}\n                                    >\n                                        {protocol.Instructions3}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n                <div style={{height: '100px'}}></div>\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx",["572"],"import React, {useEffect, useState} from 'react'\nimport app from '../../../Firebase/firebase'\n\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\nimport MobileHeader from '../../Header/MobileHeader'\n\n\n// MAIN COMPONENT\n\nexport default function ProgramTemplateViewPrivate() {\n    let [stimulus, setStimulus] = useState([])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .doc(localStorage.getItem('templateIdMore'))\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('yeah')\n                } else {\n                    console.log(\n                        'error in ProtocolList/ProtocolListTherapist.js'\n                    )\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n\n    return (\n            <>\n                <MobileHeader />\n                <HeaderHomeTemplate />\n                <ArrowHeaderTemplate />\n\n                <ul style={{position: 'relative', right: '4%'}}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{marginBottom: '1rem'}}\n                                className=\"title_name\"\n                            >\n                                {' '}\n                                Протокол {localStorage.getItem(\n                                    'programNumber'\n                                )}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.SphereOfDevelopment}\n                                </div>\n\n                                <div\n                                    style={{marginTop: '1rem'}}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.Skill}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.Method}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                >\n                                    {protocol.DesirableReaction}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_name\"\n                                    >\n                                        Критерій узагальнення навику:{' '}\n                                    </div>\n                                    <div\n                                        style={{backgroundColor: '#EEEEEE'}}\n                                        className=\"element_value\"\n                                    >\n                                        <div\n                                            style={{backgroundColor: '#EEEEEE'}}\n                                        >\n                                            {protocol.CriteriongenGenerSkill}\n                                        </div>\n                                    </div>\n                                </>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{paddingTop: '1rem'}}\n                                >\n                                    {protocol.Interval}\n                                    <div\n                                        className=\"element_name\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                    <div\n                                        className=\"element_value\"\n                                        style={{minHeight: '1rem'}}\n                                    ></div>\n                                </div>\n                                <div\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.ReductionСriterion}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{fontSize: '20px'}}\n                                >\n                                    {protocol.CriterionIncrease}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    {protocol.MethodTakingHint}\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{lineHeight: '18px'}}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <li>\n                                                <div className=\"stymul_grid_container\">\n                                                    <div>{stimul.Name}</div>\n                                                </div>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                >\n                                    {protocol.StepDescription}\n                                </div>\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{minHeight: '1rem'}}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: 'white'}}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    style={{\n                                        fontSize: '20px',\n                                        backgroundColor: 'white',\n                                    }}\n                                >\n                                    {protocol.CorrectionProcedureStep1}\n                                </div>\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу 1:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        placeholder={protocol.Instructions1}\n                                        style={{\n                                            fontSize: '20px',\n                                            backgroundColor: '#EEEEEE',\n                                        }}\n                                    >\n                                        {protocol.Instructions1}\n                                    </div>\n                                </div>\n                                {/*step 2*/}\n\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу 2:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{fontSize: '20px'}}\n                                    >\n                                        {protocol.Instructions2}\n                                    </div>\n                                </div>\n                                {/*step 3*/}\n\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div\n                                    className=\"element_name\"\n                                    style={{backgroundColor: '#EEEEEE'}}\n                                >\n                                    Інструкції до етапу3:\n                                </div>\n                                <div className=\"element_value\">\n                                    <div\n                                        className=\"element_value\"\n                                        style={{\n                                            backgroundColor: '#EEEEEE',\n                                            fontSize: '20px',\n                                        }}\n                                    >\n                                        {protocol.Instructions3}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n                <div style={{height: '100px'}}></div>\n            </>\n    )\n}\n\n//  -------\n// |  END  |\n//  -------\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\ProgramElement\\Stage.jsx",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx",["573","574"],"import Delete from '../../../assets/delete.svg'\nimport './Items.css'\nimport app from '../../../Firebase/firebase'\n\nfunction TemplateItem({diagnos, age, count, number, idTemplate, history}) {\n    return (\n        <>\n            <div id=\"template\" className=\"template_place\">\n                <div className=\"template_program_name\">Програма: {number}</div>\n                <div className=\"grid_display_diagnosis\">\n                    <div className=\"template_date\">Діагноз:</div>\n                    <div className=\"template_date_value\">{diagnos}</div>\n                </div>\n                <div className=\"grid_display_numbers\">\n                    <div className=\"template_age white_back\">Вік:</div>\n                    <div className=\"template_age_value white_back\">{age}</div>\n                    <div className=\"template_protocols\">\n                        Кількість протоколів:\n                    </div>\n                    <div className=\"template_protocols_value\">{count}</div>\n                </div>\n                <div className=\"template_buttons_container\">\n                    <div></div>\n                    <button\n                        className=\"choose_template_button\"\n                        onClick={() =>\n                            CreateDuplicateTemplate(idTemplate, history)\n                        }\n                    >\n                        Обрати\n                    </button>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default TemplateItem\n\nfunction CreateDuplicateTemplate(idTemplate, history) {\n    const db = app.firestore()\n\n    console.log(\n        db\n            .collection('ProgramTemplates')\n            .doc(idTemplate)\n            .collection('protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    snapshot.docs.map((doc) => {\n                        db.collection(localStorage.getItem('proffesion'))\n                            .doc(localStorage.getItem('user'))\n                            .collection('Patient')\n                            .doc(localStorage.getItem('child'))\n                            .collection('Protocols')\n                            .add(doc.data())\n                        console.log(doc.data())\n                    })\n\n                    console.log('Сука ')\n                } else {\n                    console.log(\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\n                    )\n                }\n            })\n    )\n    history.push('/protocol-list')\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx",["575","576","577","578","579","580"],"import {Link} from 'react-router-dom'\nimport React, {useEffect, useState} from 'react'\nimport Arrow from '../../../assets/arrow.png'\nimport Delete from '../../../assets/delete.svg'\nimport app from '../../../Firebase/firebase'\nfunction AHeader() {\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{marginLeft: '6rem'}}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link to=\"/patient\" className=\"patients_link\">\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2 style={{color: '#6F6F6F'}}>Історія програми</h2>\n            </div>\n        </>\n    )\n}\n\nexport default AHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx",["581","582"],"import Delete from '../../../assets/trash.svg'\nimport './Items.css'\nimport app from '../../../Firebase/firebase'\nimport React, {useEffect, useState} from 'react'\nfunction TemplateItem({ number, date,history}) {\n\n\n    const [programTemplates, setProgramTemplates] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db.collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(\"Supervisors\")\n        .doc(localStorage.getItem('child'))\n        .collection(\"History\").doc(date).collection(\"protocols\")\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProgramTemplates(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    return (\n        <>\n            <div id=\"template\" className=\"template_place\" style={{height:\"12.5rem\"}}>\n                <div className=\"template_program_name\">Програма: {number}</div>\n                <div className=\"grid_display_diagnosis\">\n                    <div className=\"template_date\">Дата створення/редагування:</div>\n                    <div className=\"template_date_value\">{date}</div>\n                </div>\n                <div className=\"grid_display_numbers\">\n        \n                    <div className=\"template_protocols\">\n                        Кількість протоколів:\n                    </div>\n                    <div className=\"template_protocols_value\">{programTemplates.length}</div>\n                </div>\n                <div className=\"template_buttons_container\">\n                    <img\n                        className=\"template_img\"\n                        // onClick={() => DeleteTemplate(idTemplate)}\n                        src={Delete}\n                    ></img>\n                    <button\n                        className=\"choose_template_button\"\n                        onClick={() =>\n                            GoToHistory(history,date)\n                        }\n                    >\n                        переглянути\n                    </button>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default TemplateItem\n\nfunction GoToHistory(history,date) {\n    \n    history.push('/history-protocol-list')\n    localStorage.setItem(\"DateHistory\",date)\n}\n\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx",["583","584","585","586","587","588","589","590","591"],"import Duplicate from '../../../assets/duplicate_task.svg'\nimport Visible from '../../../assets/visible.svg'\nimport UnVisible from '../../../assets/unVisible.svg'\nimport Delete from '../../../assets/delete.svg'\nimport {useState, useEffect} from 'react'\nimport app from '../../../Firebase/firebase'\nimport {Link} from 'react-router-dom'\nimport EditIcon from '../../../assets/edit_new.svg'\nimport SecondModal from '../../ModalWindow/SecondModal'\nimport './ProtocolListTemplate'\nexport default function ProtocolItem({\n    protocols,\n    number,\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n    CriteriongenGenerSkill,\n    instruction1,\n    instruction2,\n    instruction3,\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <>\n            <div className=\"protocol_item\" style={{backgroundColor: colorItem}}>\n                <p className=\"protocol_item_text \">\n                    Протокол {number}\n                    {statusCopied}.{sphereOfDevelopment}.{skill}\n                </p>\n                <div className=\"icon_place\">\n                    <Link\n                        onClick={() => {\n                            setData(protocolId, number)\n                        }}\n                        to=\"/program-template-edit\"\n                    >\n                        <img\n                            title=\"Редагувати\"\n                            className=\"icon edit_icon\"\n                            src={EditIcon}\n                        />\n                    </Link>\n\n                    <img\n                        title=\"Дублікат\"\n                        className=\"icon\"\n                        onClick={() =>\n                            CreateDuplicateProtocol(\n                                protocolId,\n                                +length + 1,\n                                sphereOfDevelopment,\n                                skill,\n                                protocolName,\n                                interval,\n                                correctionProcedureStep1,\n                                correctionProcedureStep2,\n                                correctionProcedureStep3,\n                                criterionIncrease,\n                                desirableReaction,\n                                method,\n                                methodTakingHint,\n                                reductionСriterion,\n                                stepDescription,\n                                CriteriongenGenerSkill,\n                                instruction1,\n                                instruction2,\n                                instruction3\n                            )\n                        }\n                        src={Duplicate}\n                    />\n                    <CheckIsActive\n                        className=\"icon\"\n                        isActive={isActive}\n                        protocolId={protocolId}\n                    />\n                    {isOpen && (\n                        <SecondModal\n                            protocolId={protocolId}\n                            content={\n                                <>\n                                    <b className=\"second-text_modul\">\n                                        Ви впевнені, що хочете видалити\n                                        протокол?\n                                    </b>\n                                    <div className=\"second-button_modul\" />\n                                </>\n                            }\n                            handleClose={toggleModal}\n                        />\n                    )}\n\n                    <img\n                        title=\"Видалити\"\n                        className=\"icon\"\n                        onClick={() => DeleteProtocol(protocolId, protocols)}\n                        src={Delete}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\nfunction CheckIsActive({isActive, protocolId}) {\n    console.log(isActive)\n    if (isActive == true) {\n        return (\n            <img\n                title=\"Активований\"\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\n                className=\"icon\"\n                src={Visible}\n            />\n        )\n    } else {\n        return (\n            <img\n                title=\"Деактивований\"\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\n                className=\"icon\"\n                src={UnVisible}\n            />\n        )\n    }\n}\n\nfunction CreateDuplicateProtocol(\n    protocolId,\n    id,\n    sphereOfDevelopment,\n    skill,\n    copiId,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n    CriteriongenGenerSkill,\n    instruction1,\n    instruction2,\n    instruction3\n) {\n    localStorage.setItem('program', protocolId)\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .add({\n            SphereOfDevelopment: sphereOfDevelopment,\n            ProtocolId: id,\n            Skill: skill,\n            StatusCopied: '(Копія Протоколу )',\n            IsActive: '0',\n            Interval: interval,\n            CorrectionProcedureStep1: correctionProcedureStep1,\n            CorrectionProcedureStep2: correctionProcedureStep2,\n            CorrectionProcedureStep3: correctionProcedureStep3,\n            CriterionIncrease: criterionIncrease,\n            DesirableReaction: desirableReaction,\n            Method: method,\n            MethodTakingHint: methodTakingHint,\n            ReductionСriterion: reductionСriterion,\n            StepDescription: stepDescription,\n            CriteriongenGenerSkill: CriteriongenGenerSkill,\n            Instructions1: instruction1,\n            Instructions2: instruction2,\n            Instructions3: instruction3,\n        })\n\n    // console.log(data.key)\n}\nfunction DeleteProtocol(protocolId, protocols) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(protocolId)\n        .delete()\n        .then((doc) => {\n            // for (let i = 0; i < protocols.length; i++) {\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\n            //     db.collection(localStorage.getItem(\"proffesion\"))\n            //         .doc(localStorage.getItem('user'))\n            //         .collection('Patient')\n            //         .doc(localStorage.getItem('child'))\n            //         .collection('Protocols').doc(protocols[i].id)\n            //         .update({ ProtocolId: i + 1 })\n            // }\n        })\n}\n\nfunction UpdateActiveStatus(protocolId, valueStatus) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .doc(protocolId)\n        .update({IsActive: valueStatus})\n}\nfunction setData(param1, param2) {\n    localStorage.setItem('program', param1)\n    localStorage.setItem('programNumber', param2)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx",["592","593","594","595"],"import React from 'react'\nimport {withRouter} from 'react-router'\nimport app from '../../../Firebase/firebase'\nconst Popup = (props, {history}) => {\n    console.log(props.protocols)\n    return (\n        <div className=\"popup-box\">\n            <div className=\"box\">\n                <span className=\"close-icon\" onClick={props.handleClose}>\n                    x\n                </span>\n                {props.content}\n                <div className=\"button-popup\">\n                    <button\n                        onClick={() =>\n                            CreateProgramTemplates(\n                                props.protocols,\n                                props.child,\n                                'Приватний'\n                            )\n                        }\n                        className=\"button_private\"\n                    >\n                        Приватний\n                    </button>\n                    <button\n                        onClick={() =>\n                            CreateProgramTemplates(\n                                props.protocols,\n                                props.child,\n                                'Публічний'\n                            )\n                        }\n                        className=\"button_public\"\n                    >\n                        Публічний\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\n    var endCycle = 0\n    console.log(protocols)\n    const db = app.firestore()\n    if (typeTemplates == 'Приватний') {\n        db.collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('ProgramTemplates')\n            .add({\n                Age: '',\n                Diagnos: '',\n                KidWeight: '',\n            })\n            .then(function (docRef) {\n                protocols.map((protocol) =>\n                    db\n                        .collection(localStorage.getItem('proffesion'))\n                        .doc(localStorage.getItem('user'))\n                        .collection('ProgramTemplates')\n                        .doc(docRef.id)\n                        .collection('protocols')\n                        .add(protocol)\n                )\n                db.collection(localStorage.getItem('proffesion'))\n                    .doc(localStorage.getItem('user'))\n                    .collection('ProgramTemplates')\n                    .doc(docRef.id)\n                    .set({\n                        Age: '',\n                        Diagnos: '',\n                        KidWeight: '',\n                        CountOfProtocol: protocols.length,\n                    })\n            })\n            .catch(function (error) {\n                console.error('Error adding document: ', error)\n            })\n        endCycle = 1\n    }\n    if (typeTemplates == 'Публічний') {\n        db.collection('ProgramTemplates')\n            .add({\n                Age: '',\n                Diagnos: '',\n                KidWeight: '',\n            })\n            .then(function (docRef) {\n                protocols.map((protocol) =>\n                    db\n                        .collection('ProgramTemplates')\n                        .doc(docRef.id)\n                        .collection('protocols')\n                        .add(protocol)\n                )\n                db.collection('ProgramTemplates').doc(docRef.id).set({\n                    Age: '',\n                    Diagnos: '',\n                    KidWeight: '',\n                    CountOfProtocol: protocols.length,\n                })\n            })\n            .catch(function (error) {\n                console.error('Error adding document: ', error)\n            })\n        endCycle = 1\n    }\n\n    if (endCycle == 1) {\n        protocols.map((proto) =>\n            db\n                .collection(localStorage.getItem('proffesion'))\n                .doc(localStorage.getItem('user'))\n                .collection('CreateTemplate')\n                .doc(proto.id)\n                .delete()\n        )\n        setTimeout(() => {\n            alert(`${typeTemplates} шаблон протоколів успішно створений!`)\n\n            window.location.reload()\n        })\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx",["596","597"],"import {Link} from 'react-router-dom'\nimport React, {useEffect, useState} from 'react'\nimport Arrow from '../../../assets/arrow.png'\nimport ArrowHeaderSimple from '../PageComponent/ArrowHeaderSimple'\nimport app from '../../../Firebase/firebase'\nimport {BsPlusCircle} from 'react-icons/bs'\nimport './ProtocolListTemplate'\n\nfunction ArrowHeader() {\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection(localStorage.getItem('proffesion'))\n            .doc(localStorage.getItem('user'))\n            .collection('CreateTemplate')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    return (\n        <>\n            <ArrowHeaderSimple />\n\n            <div\n                onClick={() => addProto(protocols.length)}\n                className=\"add-proto\"\n            >\n                <BsPlusCircle size={50} style={{marginTop: '30px'}} />\n            </div>\n        </>\n    )\n}\nfunction addProto(length) {\n    const db = app.firestore()\n\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('CreateTemplate')\n        .add({\n            ProtocolId: +length + 1,\n            SphereOfDevelopment: '',\n            Skill: '',\n            IsActive: '',\n            Interval: '',\n            CorrectionProcedureStep1: '',\n            CorrectionProcedureStep2: '',\n            CorrectionProcedureStep3: '',\n            CriterionIncrease: '',\n            DesirableReaction: '',\n            Method: '',\n            MethodTakingHint: '',\n            ReductionСriterion: '',\n            StepDescription: '',\n            CriteriongenGenerSkill: '',\n        })\n\n    // console.log(data.key)\n}\nexport default ArrowHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx",["598"],"import {Link} from 'react-router-dom'\nimport Arrow from '../../../assets/arrow.png'\n\nfunction ArrowHeaderSimple() {\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{marginLeft: '6rem'}}>\n                    <Link\n                        to=\"/vb-mapp\"\n                        className=\"patients_link\"\n                        onClick={() =>\n                            localStorage.setItem('templateType', 'private')\n                        }\n                    >\n                        Шаблони\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <Link to=\"/create-template\">\n                    <h2 style={{color: '#6F6F6F'}}>Створення шаблона</h2>\n                </Link>\n            </div>\n        </>\n    )\n}\nexport default ArrowHeaderSimple\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx",["599"],"import Delete from '../../../../assets/delete.png'\nimport app from '../../../../Firebase/firebase'\nfunction StimulusItem({name, stimulId}) {\n    return (\n        <div className=\"stymuls\">\n            <li>\n                <div className=\"stymul_grid_container\">\n                    <div>{name}</div>\n                    <img\n                        onClick={() => DeleteStimul(stimulId)}\n                        src={Delete}\n                        height=\"15\"\n                        className=\"delete_stymul\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '60px',\n                            marginRight: '30px',\n                            marginTop: '5px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </div>\n    )\n}\nexport default StimulusItem\nfunction DeleteStimul(stimulId) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Stimulus')\n        .doc(stimulId)\n        .delete()\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js",[],"D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx",["600"],"import React from 'react'\nimport '../SignUpForm1.css'\nimport 'fontsource-dm-sans'\nimport {Link} from 'react-router-dom'\nimport './SignUpNavigation.css'\nfunction LoginNavigation() {\n    let colorBackground = 'white'\n    let colorText = '#48535f'\n\n    return (\n        <nav className=\"number-buttons container\">\n            <div className=\"row row-cols-3 justify-content-center\">\n                <Link to=\"/registration\">\n                    <StepButton\n                        colorBackground={colorBackground}\n                        colorText={colorText}\n                        stepNumber={1}\n                    />\n                </Link>\n                <Link to=\"/registration/signup1\">\n                    <StepButton\n                        colorBackground={colorBackground}\n                        colorText={colorText}\n                        stepNumber={2}\n                    />\n                </Link>\n                <Link to=\"/registration/signup2\">\n                    <StepButton\n                        colorBackground={colorBackground}\n                        colorText={colorText}\n                        stepNumber={3}\n                    />\n                </Link>\n            </div>\n        </nav>\n    )\n}\nexport default LoginNavigation\n\nfunction StepButton({colorBackground, colorText, stepNumber}) {\n    if (localStorage.getItem('step') == stepNumber) {\n        return (\n            <button\n                style={{backgroundColor: colorBackground, color: colorText}}\n                className=\"number-button\"\n            >\n                {stepNumber}\n            </button>\n        )\n    } else {\n        return <button className=\"number-button\">{stepNumber}</button>\n    }\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx",["601","602"],"import {Link} from 'react-router-dom'\nimport './PatientTemplateSwitch.css'\nimport './../Authentification/SignIn2.css'\nimport './../Authentification/SignIn2.css'\n\nfunction PatientTemplateSwitch(params) {\n    if (localStorage.getItem('homeType') == 'home') {\n        return (\n            <>\n                <div className=\"col-6 row some_i_forgot_for_what_container justify-content-center\">\n                    <Link\n                        to=\"/home\"\n                        className=\"col-2 patients_switcher_links text-align-right chosen_link\"\n                    >\n                        Пацієнти\n                    </Link>\n                    {/* <div className=\"col-1 text-align-center text-align-center \">\n                        -\n                    </div>\n                    <Link\n                        className=\"col-5 patients_switcher_links text-align-left\"\n                        to=\"/vb-mapp\"\n                        onClick={() =>\n                            localStorage.setItem('templateType', 'private')\n                        }\n                    >\n                        Шаблони\n                    </Link> */}\n                </div>\n            </>\n        )\n    }\n    if (localStorage.getItem('homeType') != 'home') {\n        return (\n            <>\n                <div className=\"col-6 row some_i_forgot_for_what_container justify-content-center\">\n                    <Link\n                        to=\"/home\"\n                        className=\"col-5 patients_switcher_links text-align-right\"\n                    >\n                        Пацієнти\n                    </Link>\n                    {/* <div className=\"col-1 text-align-center\">-</div>\n                    <Link\n                        to=\"/vb-mapp\"\n                        onClick={() =>\n                            localStorage.setItem('templateType', 'private')\n                        }\n                        className=\"col-5 patients_switcher_links text-align-left chosen_link\"\n                    >\n                        Шаблони\n                    </Link> */}\n                </div>\n            </>\n        )\n    }\n}\nexport default PatientTemplateSwitch\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx",["603","604","605","606","607","608","609","610","611","612","613","614"],"import Duplicate from '../../../assets/duplicate_task.svg'\nimport Visible from '../../../assets/visible.svg'\nimport UnVisible from '../../../assets/unVisible.svg'\nimport Delete from '../../../assets/delete.svg'\nimport {useState, useEffect} from 'react'\nimport app from '../../../Firebase/firebase'\nimport {Link} from 'react-router-dom'\nimport EditIcon from '../../../assets/edit_new.svg'\nimport SecondModal from '../../ModalWindow/SecondModal'\nexport default function ProtocolItem({\n    protocols,\n    number,\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n    CriteriongenGenerSkill,\n    instruction1,\n    instruction2,\n    instruction3,\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n    const [isOpen, setIsOpen] = useState(false)\n\n    const toggleModal = () => {\n        setIsOpen(!isOpen)\n    }\n\n    return (\n        <>\n            <div className=\"protocol_item\" style={{backgroundColor: colorItem}}>\n                <p className=\"protocol_item_text \">\n                    Протокол {number}\n                    {statusCopied}.{sphereOfDevelopment}.{skill}\n                </p>\n                <div className=\"icon_place\">\n                    <CheckIsActive\n                        className=\"icon\"\n                        isActive={isActive}\n                        protocolId={protocolId}\n                    />\n                    <Link\n                        onClick={() => {\n                            setData(protocolId, number)\n                        }}\n                        to=\"/program\"\n                    >\n                        <img\n                            title=\"Редагувати\"\n                            className=\"icon edit_icon\"\n                            src={EditIcon}\n                        />\n                    </Link>\n\n                    <img\n                        title=\"Дублікат\"\n                        className=\"icon\"\n                        onClick={() =>\n                            CreateDuplicateProtocol(\n                                protocolId,\n                                +length + 1,\n                                sphereOfDevelopment,\n                                skill,\n                                protocolName,\n                                interval,\n                                correctionProcedureStep1,\n                                correctionProcedureStep2,\n                                correctionProcedureStep3,\n                                criterionIncrease,\n                                desirableReaction,\n                                method,\n                                methodTakingHint,\n                                reductionСriterion,\n                                stepDescription,\n                                CriteriongenGenerSkill,\n                                instruction1,\n                                instruction2,\n                                instruction3\n                            )\n                        }\n                        src={Duplicate}\n                    />\n\n                    {isOpen && (\n                        <SecondModal\n                            protocolId={protocolId}\n                            content={\n                                <>\n                                    <b className=\"second-text_modul\">\n                                        Ви впевнені, що хочете видалити\n                                        протокол?\n                                    </b>\n                                    <div className=\"second-button_modul\" />\n                                </>\n                            }\n                            handleClose={toggleModal}\n                        />\n                    )}\n\n                    <img\n                        title=\"Видалити\"\n                        className=\"icon\"\n                        onClick={\n                            () => DeleteProtocol(protocolId) //, toggleModal\n                        }\n                        src={Delete}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\nfunction CheckIsActive({isActive, protocolId}) {\n    console.log(isActive)\n    if (isActive == true) {\n        return (\n            <img\n                title=\"Активований\"\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\n                className=\"icon\"\n                src={Visible}\n            />\n        )\n    } else {\n        return (\n            <img\n                title=\"Деактивований\"\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\n                className=\"icon\"\n                src={UnVisible}\n            />\n        )\n    }\n}\n\nfunction CreateDuplicateProtocol(\n    protocolId,\n    id,\n    sphereOfDevelopment,\n    skill,\n    copiId,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n    CriteriongenGenerSkill,\n    instruction1,\n    instruction2,\n    instruction3\n) {\n    localStorage.setItem('program', protocolId)\n    const db = app.firestore()\n\n    db .collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .add({\n            SphereOfDevelopment: sphereOfDevelopment,\n            ProtocolId: id,\n            Skill: skill,\n            StatusCopied: '(Копія Протоколу )',\n            IsActive: '0',\n            Interval: interval,\n            CorrectionProcedureStep1: correctionProcedureStep1,\n            CorrectionProcedureStep2: correctionProcedureStep2,\n            CorrectionProcedureStep3: correctionProcedureStep3,\n            CriterionIncrease: criterionIncrease,\n            DesirableReaction: desirableReaction,\n            Method: method,\n            MethodTakingHint: methodTakingHint,\n            ReductionСriterion: reductionСriterion,\n            StepDescription: stepDescription,\n            CriteriongenGenerSkill: CriteriongenGenerSkill,\n            Instructions1: instruction1,\n            Instructions2: instruction2,\n            Instructions3: instruction3,\n        })\n        .then(function (docRef) {\n            db .collection(\"Users\")\n            .doc(localStorage.getItem('user'))\n            .collection(localStorage.getItem('proffesion'))\n                .doc(localStorage.getItem('child'))\n                .collection('Protocols')\n                .doc(docRef.id)\n                .collection('CriteriongenGenerSkill')\n                .add({Text: ''})\n\n           \n            console.log('Document written with ID: ', docRef.id)\n        })\n        .catch(function (error) {\n            console.error('Error adding document: ', error)\n        })\n\n    // console.log(data.key)\n}\nfunction DeleteProtocol(protocolId, protocols) {\n    const db = app.firestore()\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .delete()\n        .then((doc) => {\n            // for (let i = 0; i < protocols.length; i++) {\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\n            //     db.collection(localStorage.getItem(\"proffesion\"))\n            //         .doc(localStorage.getItem('user'))\n            //         .collection('Patient')\n            //         .doc(localStorage.getItem('child'))\n            //         .collection('Protocols').doc(protocols[i].id)\n            //         .update({ ProtocolId: i + 1 })\n            // }\n        })\n    fetch(\n        `https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem(\n            'user'\n        )}/${localStorage.getItem('child')}`\n    ).then((data) => {})\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\n        db.collection(\"Users\")\n        .doc(terapist)\n        .collection('Therapists')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(protocolId)\n            .delete()\n    })\n}\n\nfunction UpdateActiveStatus(protocolId, valueStatus) {\n    const db = app.firestore()\n\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .update({IsActive: valueStatus})\n}\nfunction setData(param1, param2) {\n    localStorage.setItem('program', param1)\n    localStorage.setItem('programNumber', param2)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx",["615","616","617","618","619"],"import Visible from '../../../assets/visible.svg'\nimport UnVisible from '../../../assets/unVisible.svg'\nimport {useState} from 'react'\nimport app from '../../../Firebase/firebase'\nimport {AiOutlineArrowRight} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\n\nexport default function ProtocolItemTherapist({\n    number,\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n\n    return (\n        <>\n            <div\n                className=\"protocol_item\"\n                style={{backgroundColor: colorItem, marginLeft: '7vw'}}\n            >\n                <p className=\"protocol_item_text \">\n                    Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\n                    {skill}\n                </p>\n                <div className=\"icon_place\">\n                    <CheckIsActive\n                        isActive={isActive}\n                        protocolId={protocolId}\n                    />\n                    <Link\n                        title=\"Переглянути\"\n                        onClick={() => {\n                            setData(protocolId, number)\n                        }}\n                        to=\"/program\"\n                    >\n                        <AiOutlineArrowRight\n                            className=\"icon go_icon\"\n                            color=\"black\"\n                        />\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction CheckIsActive({isActive, protocolId}) {\n    console.log(isActive)\n    if (isActive == true) {\n        return (\n            <img\n                title=\"Активований\"\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\n                className=\"icon\"\n                src={Visible}\n            />\n        )\n    } else {\n        return (\n            <img\n                title=\"Деактивований\"\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\n                className=\"icon\"\n                src={UnVisible}\n            />\n        )\n    }\n}\nfunction UpdateActiveStatus(protocolId, valueStatus) {\n    const db = app.firestore()\n\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .update({IsActive: valueStatus})\n}\n\nfunction setData(param1, param2) {\n    localStorage.setItem('program', param1)\n    localStorage.setItem('programNumber', param2)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx",["620","621"],"import {Link} from 'react-router-dom'\nimport Arrow from '../../../assets/arrow.png'\nimport '../Program.css'\nimport '../../PatientItem/PatientItem.css'\nfunction ArrowHeader() {\n    return (\n        <>\n            <div\n                className=\"patient_upper_flex_container\"\n                style={{marginTop: '10px'}}\n            >\n                <h2 style={{marginLeft: '100px'}}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link to=\"/patient\" className=\"patients_link\">\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link className=\"program_link\" to=\"/protocol-list\">\n                        Програма\n                    </Link>\n                </h2>\n            </div>\n        </>\n    )\n}\nexport default ArrowHeader\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx",["622"],"import Delete from '../../../assets/delete.png'\nimport app from '../../../Firebase/firebase'\nfunction StimulusItem({name, stimulId}) {\n    return (\n        <div className=\"stymuls\">\n            <li>\n                <div className=\"stymul_grid_container\">\n                    <div>{name}</div>\n                    <img\n                        onClick={() => DeleteStimul(stimulId)}\n                        src={Delete}\n                        height=\"15\"\n                        className=\"delete_stymul\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '60px',\n                            marginRight: '30px',\n                            marginTop: '5px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </div>\n    )\n}\nexport default StimulusItem\nfunction DeleteStimul(stimulId) {\n    const db = app.firestore()\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Stimulus')\n        .doc(stimulId)\n        .delete()\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmap.jsx",["623","624","625"],"import React, {useEffect, useState} from 'react'\nimport {storage} from '../../Firebase/firebase'\nimport {Button, Col, Container, Form, Row} from 'react-bootstrap'\nimport './VBmap.css'\nimport VBmapFile from './VBmapFile'\n\nfunction About() {\n    const [filesList, setFilesList] = useState([])\n    const [filename, setFile] = useState('')\n    // let filesData = []\n    // let storageRef = storage.ref(FOLDER_NAME);\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            setFile(e.target.files[0])\n        }\n    }\n    const handleUpload = () => {\n        const uploadTask = storage\n            .ref(\n                `patients/${localStorage.getItem('child')}/vbmap/${\n                    filename.name\n                }`\n            )\n            .put(filename)\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {},\n            (error) => {\n                console.log(error)\n            },\n            () => {\n                storage\n                    .ref('patients/' + localStorage.getItem('child') + '/vbmap')\n                    .child(filename.name)\n                    .getDownloadURL()\n                    .then((url) => {\n                        // console.log(url)\n                        setFilesList((filesList) => [\n                            ...filesList,\n                            {name: filename.name},\n                        ])\n                    })\n            }\n        )\n    }\n\n    // console.log(\"image:\", filename)\n    useEffect(() => {\n        // let filesData = []\n        const FOLDER_NAME = `patients/${localStorage.getItem('child')}/vbmap`\n        let storageRef = storage.ref(FOLDER_NAME)\n\n        storageRef\n            .listAll()\n            .then(function (result) {\n                result.items.forEach(function (imageRef) {\n                    // And finally display them\n                    let fileData = {}\n                    fileData['name'] = imageRef.name\n                    // console.log(imageRef.name)\n                    let fullRef = storageRef.child(`${imageRef.name}`)\n                    // Get metadata properties\n                    fullRef\n                        .getMetadata()\n                        .then((metadata) => {\n                            // Metadata now contains the metadata for 'images/forest.jpg'\n                            fileData['timeCreated'] = metadata.timeCreated\n                            fileData['updated'] = metadata.updated\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        })\n                    displayImage(imageRef, fileData)\n                    // console.log('222')\n                })\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n\n        function displayImage(imageRef, fileData) {\n            imageRef\n                .getDownloadURL()\n                .then(function (url) {\n                    fileData['url'] = url\n                    // filesData.push(fileData)\n                    // console.log('333')\n                    console.log(fileData + 'fileData')\n                    setFilesList((filesList) => [...filesList, fileData])\n                    // setCount(fileList.push()[filesData]);\n                    // setCount([filesData]);\n                    // count.forEach(element => console.log(element));\n                    console.log(filesList + 'filesList')\n                })\n                .catch(function (error) {\n                    console.log(error)\n                })\n        }\n    }, [])\n\n    return (\n        <Container>\n            {console.log(filesList, '111')}\n            <Row className=\"justify-content-start\">\n                <Col\n                    md={{offset: 1, span: 7}}\n                    xs={12}\n                    lg={{offset: 2, span: 5}}\n                    sm={{offset: 1, span: 7}}\n                    className=\"vertical-align-center\"\n                >\n                    <Form class=\"file-form\">\n                        <Form.Group>\n                            <Form.File\n                                id=\"exampleFormControlFile1\"\n                                label=\"\"\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                    </Form>\n                </Col>\n                {/* <Col xl={2} lg={2} md={2} xs={12} sm={4} className=\"\">\n                    <Button onClick={handleUpload} variant=\"primary submit-button\">Завантажити</Button>\n                </Col> */}\n            </Row>\n            <Row className=\"justify-content-evenly \">\n                {filesList.map(({name, timeCreated, updated, url}, idx) => (\n                    <VBmapFile\n                        filename={name}\n                        timeCreated={timeCreated}\n                        updated={updated}\n                        url={url}\n                        key={`${name}_${idx}`}\n                    />\n                ))}\n            </Row>\n        </Container>\n    )\n}\n\nexport default About\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx",["626"],"import React from 'react'\nimport './SecondModal.css'\nimport app from '../../Firebase/firebase'\n//import DeleteProtocol from '../ProtocolList/PageComponent/ProtocolItem'\n\nfunction SecondModal({protocolId, handleClose, content}) {\n    return (\n        <div className=\"second-popup-box\">\n            <div className=\"second-box\">\n                <span className=\"second-close-icon\" onClick={handleClose}>\n                    x\n                </span>\n                {content}\n                <div className=\"second-button-popup\">\n                    <button\n                        onClick={handleClose}\n                        className=\"second-button_private\"\n                    >\n                        Скасувати\n                    </button>\n                    <button\n                        onClick={() => DeleteProtocol(protocolId)}\n                        className=\"second-button_public\"\n                    >\n                        Підтвердити\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SecondModal\n\nfunction DeleteProtocol(protocolId) {\n    console.log(protocolId)\n\n    const db = app.firestore()\n    db.collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .delete()\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\n        db.collection(\"Users\")\n        .doc(terapist)\n        .collection('Therapists')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(protocolId)\n            .delete()\n    })\n\n    alert(`Протокол успішно видалений!`)\n    setTimeout(() => {\n        window.location.reload()\n    }, 100)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx",["627","628","629"],"import {useState} from 'react'\nimport {AiOutlineArrowRight} from 'react-icons/ai'\nimport {Link} from 'react-router-dom'\nimport app from '../../../Firebase/firebase'\nimport Delete from '../../../assets/delete.svg'\nexport default function ProtocolItemTemplate({\n    number,\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n}) {\n    let [colorItem, setColorItem] = useState('')\n\n    if (+number % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n\n    return (\n        <>\n            <div\n                className=\"protocol_item\"\n                style={{backgroundColor: colorItem, marginLeft: '7vw'}}\n            >\n                <p className=\"protocol_item_text \">\n                    Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\n                    {skill}\n                </p>\n                <div className=\"icon_place\">\n                    <>\n                        <img\n                            title=\"Видалити\"\n                            className=\"icon\"\n                            onClick={() => DeleteProtocol(protocolId)}\n                            src={Delete}\n                        />\n                    </>\n\n                    <Link\n                        title=\"Переглянути\"\n                        onClick={() => {\n                            setData(protocolId, number)\n                        }}\n                        to=\"template-more-info-protocol\"\n                    >\n                        <AiOutlineArrowRight\n                            className=\"icon go_icon\"\n                            color=\"black\"\n                        />\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction DeleteProtocol(protocolId) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(protocolId)\n        .delete()\n        .then((doc) => {})\n}\n\nfunction setData(param1, param2) {\n    localStorage.setItem('program', param1)\n    localStorage.setItem('programNumber', param2)\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx",["630"],"import {Link} from 'react-router-dom'\nimport Arrow from '../../../assets/arrow.png'\n\nfunction ArrowHeaderEdit() {\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{marginLeft: '6rem'}}>\n                    <Link\n                        to=\"/vb-mapp\"\n                        className=\"patients_link\"\n                        onClick={() =>\n                            localStorage.setItem('templateType', 'private')\n                        }\n                    >\n                        Шаблони\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <Link to=\"/template-more-info\">\n                    <h2 style={{color: '#6F6F6F'}}>Редагування шаблона</h2>\n                </Link>\n            </div>\n        </>\n    )\n}\nexport default ArrowHeaderEdit\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBMapp\\ProgramElement\\StageElement.jsx",["631","632"],"import app from '../../../Firebase/firebase'\nimport \"../VBMapp.css\"\nimport React, { useEffect, useState } from 'react'\nimport { Update } from '@material-ui/icons'\nfunction StageElement({ id, idStage }) {\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        // /VB-MAPP_protocol/Манд/protocol\n        const db = app.firestore()\n        const unsubscribe = db\n        .collection(\"Users\")\n        .doc(localStorage.getItem('user'))\n        .collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('child'))\n\n            .collection(\"VB-MAPP_protocol\")\n            .doc(id).collection(\"protocols\").doc(idStage).collection(\"stage\")\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    console.log()\n    return (\n        <>\n            {protocols.map((proto) => (\n\n                <div className=\"under-block\" style={{backgroundColor:proto.color}} onClick={()=>UpdateCollor(id, idStage,proto)}>\n\n                </div>\n            ))}\n\n\n        </>\n    )\n}\nexport default StageElement\nfunction UpdateCollor(id, idStage,proto){\n    const db = app.firestore()\n    db\n    .collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n    .doc(localStorage.getItem('child'))\n\n    .collection(\"VB-MAPP_protocol\")\n    .doc(id).collection(\"protocols\").doc(idStage).collection(\"stage\").doc(proto.id).set({color:\"yellow\"})\n    db\n    .collection(\"Users\")\n    .doc(localStorage.getItem('user'))\n    .collection(localStorage.getItem('proffesion'))\n    .doc(localStorage.getItem('child')).collection(\"Protocols\").doc(proto.id).set(proto)\n\n\n\n\n\n}","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx",["633"],"import Delete from '../../../../assets/delete.png'\nimport app from '../../../../Firebase/firebase'\nfunction StimulusItem({name, stimulId}) {\n    return (\n        <div className=\"stymuls\">\n            <li>\n                <div className=\"stymul_grid_container\">\n                    <div>{name}</div>\n                    <img\n                        onClick={() => DeleteStimul(stimulId)}\n                        src={Delete}\n                        height=\"15\"\n                        className=\"delete_stymul\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '60px',\n                            marginRight: '30px',\n                            marginTop: '5px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </div>\n    )\n}\nexport default StimulusItem\nfunction DeleteStimul(stimulId) {\n    const db = app.firestore()\n    db.collection(localStorage.getItem('proffesion'))\n        .doc(localStorage.getItem('user'))\n        .collection('ProgramTemplates')\n        .doc(localStorage.getItem('templateIdMore'))\n        .collection('protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Stimulus')\n        .doc(stimulId)\n        .delete()\n}\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmapFile.jsx",["634","635"],"import React from 'react'\nimport {Col} from 'react-bootstrap'\nimport {storage} from '../../Firebase/firebase'\nimport Delete from '../../assets/trash.svg'\n\nimport close_img from '../../assets/cancel.svg'\nimport avi from '../../assets/avi.svg'\nimport csv from '../../assets/csv.svg'\nimport docx from '../../assets/docx.svg'\nimport exe from '../../assets/exe.svg'\nimport excel from '../../assets/exel.svg'\nimport html from '../../assets/html.svg'\nimport file from '../../assets/file1.svg'\nimport jpg from '../../assets/jpg.svg'\nimport mp3 from '../../assets/mp3.svg'\nimport mp4 from '../../assets/mp4.svg'\nimport pdf from '../../assets/pdf.svg'\nimport png from '../../assets/png.svg'\nimport txt from '../../assets/txt.svg'\nimport zip from '../../assets/zip.svg'\n\nconst getFileExtension = (filename) => {\n    return filename.slice(\n        (Math.max(0, filename.lastIndexOf('.')) || Infinity) + 1\n    )\n}\n\nconst FileExtensionsArray = {\n    avi: ['avi'],\n    csv: ['csv'],\n    docx: ['docx', 'docm', 'doc', 'dotx', 'dotm', 'dot', 'DOC', 'DOCX'],\n    exe: ['exe'],\n    excel: [\n        'excel',\n        'xlsx',\n        'xlsm',\n        'xlsb',\n        'xls',\n        'xml',\n        'xltx',\n        'xltm',\n        'xlt',\n        'xlx',\n        'XLSX',\n        'XLX',\n    ],\n    html: ['html'],\n    jpg: ['jpg', 'jpeg'],\n    mp3: ['mp3'],\n    mp4: ['mp4'],\n    pdf: ['pdf'],\n    png: ['png'],\n    txt: ['txt', 'log'],\n    zip: ['zip', 'rar'],\n}\n// var n = fruits.includes(\"Mango\");\n\nconst getFileIcon = (fileExtension) => {\n    if (FileExtensionsArray.avi.includes(fileExtension)) {\n        return avi\n    } else if (FileExtensionsArray.csv.includes(fileExtension)) {\n        return csv\n    } else if (FileExtensionsArray.docx.includes(fileExtension)) {\n        return docx\n    } else if (FileExtensionsArray.exe.includes(fileExtension)) {\n        return exe\n    } else if (FileExtensionsArray.excel.includes(fileExtension)) {\n        return excel\n    } else if (FileExtensionsArray.html.includes(fileExtension)) {\n        return html\n    } else if (FileExtensionsArray.jpg.includes(fileExtension)) {\n        return jpg\n    } else if (FileExtensionsArray.mp3.includes(fileExtension)) {\n        return mp3\n    } else if (FileExtensionsArray.mp4.includes(fileExtension)) {\n        return mp4\n    } else if (FileExtensionsArray.pdf.includes(fileExtension)) {\n        return pdf\n    } else if (FileExtensionsArray.png.includes(fileExtension)) {\n        return png\n    } else if (FileExtensionsArray.txt.includes(fileExtension)) {\n        return txt\n    } else if (FileExtensionsArray.zip.includes(fileExtension)) {\n        return zip\n    } else {\n        return file\n    }\n}\n\nfunction deleteFile(filename, url, folder = 'docs') {\n    let answer = window.confirm('Видалити файл?')\n    if (answer) {\n        let fileRef = storage.refFromURL(url)\n        // console.log(\"File in database before delete exists : \" + fileRef.exists())\n        fileRef\n            .delete()\n            .then(function () {\n                // File deleted successfully\n                console.log('File Deleted')\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    } else {\n        console.log('Помилка видалення файлу')\n    }\n}\n\nconst VBmapFile = ({filename, timeCreated, updated, url}) => (\n    <Col md=\"auto\" sm={5} xs={10} className=\"file-box \">\n        <img\n            src={getFileIcon(getFileExtension(filename))}\n            className=\"file-img \"\n            alt=\"file image\"\n        />\n        <img\n            src={Delete}\n            id=\"delete-file-img\"\n            onClick={() => deleteFile(filename, url)}\n            className=\"close-img\"\n            alt=\"close\"\n        />\n        <span className=\"file-name\">{filename}</span>\n    </Col>\n)\n\nexport default VBmapFile\n\n// Create a reference to the file to delete\n//     let desertRef = storage.child(`files/desert.jpg`);\n//     // Delete the file\n//     desertRef.delete().then(() => {\n//         // File deleted successfully\n//     }).catch((error) => {\n//         console.log(error)\n//     });\n//     alert(\"close\")\n","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ArrowHeader\\TreeArrowHeader.jsx",["636","637"],"import {Link} from 'react-router-dom'\nimport Arrow from '../../assets/arrow.png'\nfunction TreeArrowHeader({ patient, page }) {\n    return (\n        <> <div className=\"patient_upper_flex_container\" style={{ width: \"35rem\", justifyContent: \"space-around\", margin: '1% 0 1% 3.4%' }}>\n            < h2>\n                <Link to=\"/\" className=\"patients_link\">\n                    Пацієнти\n                                </Link>\n            </h2>\n            <img\n                src={Arrow}\n                height=\"25\"\n\n            />\n            <h2\n                className=\"patients_link\"\n\n            >\n                <Link to=\"/patient\" className=\"patients_link\">\n                    {patient}\n                </Link>\n\n            </h2>\n\n            <img\n                src={Arrow}\n                height=\"25\"\n\n            />\n            <h2\n                className=\"patients_link\"\n                style={{ color: '#6F6F6F' }}\n            >\n              \n                    {page}\n               \n\n            </h2>\n\n        </div>\n        </>\n    )\n}\nexport default TreeArrowHeader","D:\\IoT\\Prometheus\\IONKID_FRONT\\PROMETHEUS_web_project\\src\\Components\\ArrowHeader\\Arrow.jsx",["638"],"import Arrow from '../../assets/arrow.png'\nimport { Link } from 'react-router-dom'\nfunction ArrowHeader({ patient }) {\n    return (\n        <> <div className=\"patient_upper_flex_container\" style={{ width: \"22rem\", justifyContent: \"space-around\", margin: '1% 0 1% 3%' }}>\n            < h2>\n                <Link to=\"/\" className=\"patients_link\">\n                    Пацієнти\n                                </Link>\n            </h2>\n            <img\n                src={Arrow}\n                height=\"25\"\n\n            />\n            <h2\n                className=\"patients_link\"\n                style={{ color: '#6F6F6F' }}\n            >\n                {patient.Name}\n            </h2>\n\n        </div>\n        </>\n    )\n}\nexport default ArrowHeader",{"ruleId":"639","severity":1,"message":"640","line":9,"column":26,"nodeType":"641","messageId":"642","endLine":9,"endColumn":32},{"ruleId":"639","severity":1,"message":"643","line":25,"column":19,"nodeType":"641","messageId":"642","endLine":25,"endColumn":27},{"ruleId":"644","severity":1,"message":"645","line":53,"column":33,"nodeType":"646","endLine":57,"endColumn":35},{"ruleId":"647","severity":1,"message":"648","line":25,"column":47,"nodeType":"649","messageId":"650","endLine":25,"endColumn":49},{"ruleId":"651","severity":1,"message":"652","line":40,"column":9,"nodeType":"653","endLine":40,"endColumn":18,"suggestions":"654"},{"ruleId":"647","severity":1,"message":"648","line":42,"column":50,"nodeType":"649","messageId":"650","endLine":42,"endColumn":52},{"ruleId":"644","severity":1,"message":"645","line":71,"column":33,"nodeType":"646","endLine":75,"endColumn":35},{"ruleId":"644","severity":1,"message":"645","line":86,"column":33,"nodeType":"646","endLine":90,"endColumn":35},{"ruleId":"639","severity":1,"message":"640","line":5,"column":26,"nodeType":"641","messageId":"642","endLine":5,"endColumn":32},{"ruleId":"639","severity":1,"message":"655","line":5,"column":42,"nodeType":"641","messageId":"642","endLine":5,"endColumn":47},{"ruleId":"639","severity":1,"message":"656","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":13},{"ruleId":"639","severity":1,"message":"657","line":5,"column":9,"nodeType":"641","messageId":"642","endLine":5,"endColumn":13},{"ruleId":"639","severity":1,"message":"658","line":6,"column":21,"nodeType":"641","messageId":"642","endLine":6,"endColumn":29},{"ruleId":"639","severity":1,"message":"658","line":15,"column":8,"nodeType":"641","messageId":"642","endLine":15,"endColumn":16},{"ruleId":"647","severity":1,"message":"648","line":237,"column":18,"nodeType":"649","messageId":"650","endLine":237,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":238,"column":22,"nodeType":"649","messageId":"650","endLine":238,"endColumn":24},{"ruleId":"647","severity":1,"message":"648","line":239,"column":21,"nodeType":"649","messageId":"650","endLine":239,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":240,"column":20,"nodeType":"649","messageId":"650","endLine":240,"endColumn":22},{"ruleId":"647","severity":1,"message":"648","line":241,"column":17,"nodeType":"649","messageId":"650","endLine":241,"endColumn":19},{"ruleId":"647","severity":1,"message":"648","line":242,"column":18,"nodeType":"649","messageId":"650","endLine":242,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":243,"column":18,"nodeType":"649","messageId":"650","endLine":243,"endColumn":20},{"ruleId":"647","severity":1,"message":"648","line":244,"column":21,"nodeType":"649","messageId":"650","endLine":244,"endColumn":23},{"ruleId":"639","severity":1,"message":"659","line":248,"column":19,"nodeType":"641","messageId":"642","endLine":248,"endColumn":22},{"ruleId":"660","severity":1,"message":"661","line":310,"column":17,"nodeType":"646","endLine":319,"endColumn":19},{"ruleId":"662","severity":1,"message":"663","line":343,"column":33,"nodeType":"664","messageId":"650","endLine":343,"endColumn":43},{"ruleId":"639","severity":1,"message":"665","line":13,"column":12,"nodeType":"641","messageId":"642","endLine":13,"endColumn":23},{"ruleId":"639","severity":1,"message":"666","line":13,"column":25,"nodeType":"641","messageId":"642","endLine":13,"endColumn":39},{"ruleId":"647","severity":1,"message":"648","line":58,"column":44,"nodeType":"649","messageId":"650","endLine":58,"endColumn":46},{"ruleId":"647","severity":1,"message":"648","line":5,"column":44,"nodeType":"649","messageId":"650","endLine":5,"endColumn":46},{"ruleId":"639","severity":1,"message":"667","line":1,"column":16,"nodeType":"641","messageId":"642","endLine":1,"endColumn":24},{"ruleId":"639","severity":1,"message":"668","line":1,"column":26,"nodeType":"641","messageId":"642","endLine":1,"endColumn":35},{"ruleId":"647","severity":1,"message":"648","line":21,"column":44,"nodeType":"649","messageId":"650","endLine":21,"endColumn":46},{"ruleId":"639","severity":1,"message":"667","line":1,"column":9,"nodeType":"641","messageId":"642","endLine":1,"endColumn":17},{"ruleId":"639","severity":1,"message":"668","line":1,"column":19,"nodeType":"641","messageId":"642","endLine":1,"endColumn":28},{"ruleId":"639","severity":1,"message":"669","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":11},{"ruleId":"647","severity":1,"message":"648","line":7,"column":44,"nodeType":"649","messageId":"650","endLine":7,"endColumn":46},{"ruleId":"639","severity":1,"message":"670","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":19},{"ruleId":"639","severity":1,"message":"671","line":7,"column":8,"nodeType":"641","messageId":"642","endLine":7,"endColumn":13},{"ruleId":"639","severity":1,"message":"672","line":9,"column":9,"nodeType":"641","messageId":"642","endLine":9,"endColumn":21},{"ruleId":"639","severity":1,"message":"657","line":10,"column":9,"nodeType":"641","messageId":"642","endLine":10,"endColumn":13},{"ruleId":"639","severity":1,"message":"673","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":14},{"ruleId":"639","severity":1,"message":"657","line":3,"column":9,"nodeType":"641","messageId":"642","endLine":3,"endColumn":13},{"ruleId":"639","severity":1,"message":"658","line":4,"column":21,"nodeType":"641","messageId":"642","endLine":4,"endColumn":29},{"ruleId":"639","severity":1,"message":"674","line":8,"column":8,"nodeType":"641","messageId":"642","endLine":8,"endColumn":15},{"ruleId":"639","severity":1,"message":"675","line":10,"column":8,"nodeType":"641","messageId":"642","endLine":10,"endColumn":23},{"ruleId":"639","severity":1,"message":"673","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":14},{"ruleId":"639","severity":1,"message":"657","line":3,"column":9,"nodeType":"641","messageId":"642","endLine":3,"endColumn":13},{"ruleId":"639","severity":1,"message":"658","line":4,"column":21,"nodeType":"641","messageId":"642","endLine":4,"endColumn":29},{"ruleId":"639","severity":1,"message":"674","line":8,"column":8,"nodeType":"641","messageId":"642","endLine":8,"endColumn":15},{"ruleId":"639","severity":1,"message":"675","line":11,"column":8,"nodeType":"641","messageId":"642","endLine":11,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":68,"column":38,"nodeType":"649","messageId":"650","endLine":68,"endColumn":40},{"ruleId":"639","severity":1,"message":"676","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":26},{"ruleId":"639","severity":1,"message":"677","line":86,"column":12,"nodeType":"641","messageId":"642","endLine":86,"endColumn":25},{"ruleId":"639","severity":1,"message":"678","line":86,"column":27,"nodeType":"641","messageId":"642","endLine":86,"endColumn":43},{"ruleId":"639","severity":1,"message":"679","line":88,"column":9,"nodeType":"641","messageId":"642","endLine":88,"endColumn":18},{"ruleId":"647","severity":1,"message":"680","line":654,"column":21,"nodeType":"649","messageId":"650","endLine":654,"endColumn":23},{"ruleId":"639","severity":1,"message":"681","line":729,"column":10,"nodeType":"641","messageId":"642","endLine":729,"endColumn":37},{"ruleId":"639","severity":1,"message":"682","line":739,"column":10,"nodeType":"641","messageId":"642","endLine":739,"endColumn":37},{"ruleId":"639","severity":1,"message":"668","line":1,"column":16,"nodeType":"641","messageId":"642","endLine":1,"endColumn":25},{"ruleId":"639","severity":1,"message":"669","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":11},{"ruleId":"639","severity":1,"message":"683","line":3,"column":8,"nodeType":"641","messageId":"642","endLine":3,"endColumn":28},{"ruleId":"639","severity":1,"message":"657","line":5,"column":9,"nodeType":"641","messageId":"642","endLine":5,"endColumn":13},{"ruleId":"639","severity":1,"message":"684","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":27},{"ruleId":"639","severity":1,"message":"676","line":7,"column":8,"nodeType":"641","messageId":"642","endLine":7,"endColumn":26},{"ruleId":"639","severity":1,"message":"685","line":12,"column":9,"nodeType":"641","messageId":"642","endLine":12,"endColumn":13},{"ruleId":"639","severity":1,"message":"686","line":14,"column":12,"nodeType":"641","messageId":"642","endLine":14,"endColumn":21},{"ruleId":"639","severity":1,"message":"687","line":14,"column":23,"nodeType":"641","messageId":"642","endLine":14,"endColumn":35},{"ruleId":"647","severity":1,"message":"648","line":15,"column":46,"nodeType":"649","messageId":"650","endLine":15,"endColumn":48},{"ruleId":"647","severity":1,"message":"648","line":22,"column":46,"nodeType":"649","messageId":"650","endLine":22,"endColumn":48},{"ruleId":"639","severity":1,"message":"668","line":1,"column":16,"nodeType":"641","messageId":"642","endLine":1,"endColumn":25},{"ruleId":"639","severity":1,"message":"667","line":1,"column":27,"nodeType":"641","messageId":"642","endLine":1,"endColumn":35},{"ruleId":"639","severity":1,"message":"669","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":11},{"ruleId":"639","severity":1,"message":"684","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":27},{"ruleId":"639","severity":1,"message":"676","line":5,"column":8,"nodeType":"641","messageId":"642","endLine":5,"endColumn":26},{"ruleId":"639","severity":1,"message":"688","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":34},{"ruleId":"647","severity":1,"message":"648","line":12,"column":46,"nodeType":"649","messageId":"650","endLine":12,"endColumn":48},{"ruleId":"647","severity":1,"message":"648","line":19,"column":46,"nodeType":"649","messageId":"650","endLine":19,"endColumn":48},{"ruleId":"639","severity":1,"message":"689","line":3,"column":10,"nodeType":"641","messageId":"642","endLine":3,"endColumn":14},{"ruleId":"639","severity":1,"message":"690","line":3,"column":28,"nodeType":"641","messageId":"642","endLine":3,"endColumn":35},{"ruleId":"651","severity":1,"message":"691","line":52,"column":8,"nodeType":"653","endLine":52,"endColumn":10,"suggestions":"692"},{"ruleId":"639","severity":1,"message":"693","line":21,"column":17,"nodeType":"641","messageId":"642","endLine":21,"endColumn":23},{"ruleId":"644","severity":1,"message":"645","line":48,"column":29,"nodeType":"646","endLine":52,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":66,"column":29,"nodeType":"646","endLine":70,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":95,"column":29,"nodeType":"646","endLine":99,"endColumn":31},{"ruleId":"694","severity":1,"message":"695","line":105,"column":33,"nodeType":"696","endLine":105,"endColumn":46},{"ruleId":"647","severity":1,"message":"648","line":117,"column":62,"nodeType":"649","messageId":"650","endLine":117,"endColumn":64},{"ruleId":"647","severity":1,"message":"648","line":130,"column":62,"nodeType":"649","messageId":"650","endLine":130,"endColumn":64},{"ruleId":"647","severity":1,"message":"648","line":143,"column":62,"nodeType":"649","messageId":"650","endLine":143,"endColumn":64},{"ruleId":"644","severity":1,"message":"645","line":172,"column":25,"nodeType":"646","endLine":172,"endColumn":79},{"ruleId":"639","severity":1,"message":"697","line":26,"column":17,"nodeType":"641","messageId":"642","endLine":26,"endColumn":22},{"ruleId":"651","severity":1,"message":"698","line":48,"column":9,"nodeType":"653","endLine":48,"endColumn":18,"suggestions":"699"},{"ruleId":"644","severity":1,"message":"645","line":65,"column":29,"nodeType":"646","endLine":69,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":83,"column":29,"nodeType":"646","endLine":87,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":98,"column":29,"nodeType":"646","endLine":102,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":113,"column":29,"nodeType":"646","endLine":117,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":156,"column":25,"nodeType":"646","endLine":160,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":70,"column":25,"nodeType":"646","endLine":70,"endColumn":76},{"ruleId":"644","severity":1,"message":"645","line":74,"column":29,"nodeType":"646","endLine":78,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":92,"column":29,"nodeType":"646","endLine":96,"endColumn":31},{"ruleId":"644","severity":1,"message":"645","line":113,"column":25,"nodeType":"646","endLine":117,"endColumn":27},{"ruleId":"644","severity":1,"message":"645","line":123,"column":25,"nodeType":"646","endLine":123,"endColumn":79},{"ruleId":"660","severity":1,"message":"661","line":17,"column":13,"nodeType":"646","endLine":28,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":29,"column":13,"nodeType":"646","endLine":37,"endColumn":15},{"ruleId":"639","severity":1,"message":"667","line":1,"column":16,"nodeType":"641","messageId":"642","endLine":1,"endColumn":24},{"ruleId":"660","severity":1,"message":"661","line":24,"column":25,"nodeType":"646","endLine":31,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":41,"column":25,"nodeType":"646","endLine":51,"endColumn":27},{"ruleId":"700","severity":1,"message":"701","line":54,"column":21,"nodeType":"646","endLine":60,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":10,"column":17,"nodeType":"646","endLine":20,"endColumn":19},{"ruleId":"702","severity":1,"message":"703","line":10,"column":74,"nodeType":"704","messageId":"705","endLine":10,"endColumn":75},{"ruleId":"702","severity":1,"message":"703","line":19,"column":73,"nodeType":"704","messageId":"705","endLine":19,"endColumn":74},{"ruleId":"660","severity":1,"message":"661","line":22,"column":25,"nodeType":"646","endLine":27,"endColumn":31},{"ruleId":"660","severity":1,"message":"661","line":28,"column":29,"nodeType":"646","endLine":33,"endColumn":31},{"ruleId":"639","severity":1,"message":"668","line":1,"column":26,"nodeType":"641","messageId":"642","endLine":1,"endColumn":35},{"ruleId":"639","severity":1,"message":"677","line":13,"column":12,"nodeType":"641","messageId":"642","endLine":13,"endColumn":25},{"ruleId":"660","severity":1,"message":"661","line":144,"column":25,"nodeType":"646","endLine":152,"endColumn":27},{"ruleId":"700","severity":1,"message":"701","line":168,"column":21,"nodeType":"646","endLine":174,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":16,"column":17,"nodeType":"646","endLine":16,"endColumn":75},{"ruleId":"660","severity":1,"message":"661","line":18,"column":17,"nodeType":"646","endLine":22,"endColumn":19},{"ruleId":"639","severity":1,"message":"685","line":30,"column":9,"nodeType":"641","messageId":"642","endLine":30,"endColumn":13},{"ruleId":"639","severity":1,"message":"677","line":95,"column":12,"nodeType":"641","messageId":"642","endLine":95,"endColumn":25},{"ruleId":"647","severity":1,"message":"680","line":552,"column":21,"nodeType":"649","messageId":"650","endLine":552,"endColumn":23},{"ruleId":"639","severity":1,"message":"670","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":19},{"ruleId":"639","severity":1,"message":"706","line":12,"column":10,"nodeType":"641","messageId":"642","endLine":12,"endColumn":28},{"ruleId":"647","severity":1,"message":"648","line":25,"column":33,"nodeType":"649","messageId":"650","endLine":25,"endColumn":35},{"ruleId":"660","severity":1,"message":"661","line":44,"column":33,"nodeType":"646","endLine":48,"endColumn":35},{"ruleId":"660","severity":1,"message":"661","line":49,"column":33,"nodeType":"646","endLine":53,"endColumn":35},{"ruleId":"639","severity":1,"message":"707","line":7,"column":8,"nodeType":"641","messageId":"642","endLine":7,"endColumn":11},{"ruleId":"647","severity":1,"message":"648","line":103,"column":33,"nodeType":"649","messageId":"650","endLine":103,"endColumn":35},{"ruleId":"647","severity":1,"message":"648","line":138,"column":26,"nodeType":"649","messageId":"650","endLine":138,"endColumn":28},{"ruleId":"660","severity":1,"message":"661","line":157,"column":29,"nodeType":"646","endLine":161,"endColumn":31},{"ruleId":"660","severity":1,"message":"661","line":162,"column":29,"nodeType":"646","endLine":166,"endColumn":31},{"ruleId":"660","severity":1,"message":"661","line":281,"column":61,"nodeType":"646","endLine":290,"endColumn":63},{"ruleId":"708","severity":1,"message":"709","line":415,"column":5,"nodeType":"710","messageId":"711","endLine":415,"endColumn":19,"fix":"712"},{"ruleId":"647","severity":1,"message":"680","line":435,"column":24,"nodeType":"649","messageId":"650","endLine":435,"endColumn":26},{"ruleId":"708","severity":1,"message":"709","line":436,"column":9,"nodeType":"710","messageId":"711","endLine":436,"endColumn":23,"fix":"713"},{"ruleId":"647","severity":1,"message":"648","line":440,"column":26,"nodeType":"649","messageId":"650","endLine":440,"endColumn":28},{"ruleId":"639","severity":1,"message":"670","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":19},{"ruleId":"639","severity":1,"message":"671","line":7,"column":8,"nodeType":"641","messageId":"642","endLine":7,"endColumn":13},{"ruleId":"639","severity":1,"message":"672","line":9,"column":9,"nodeType":"641","messageId":"642","endLine":9,"endColumn":21},{"ruleId":"639","severity":1,"message":"714","line":15,"column":12,"nodeType":"641","messageId":"642","endLine":15,"endColumn":32},{"ruleId":"715","severity":1,"message":"716","line":29,"column":49,"nodeType":"717","messageId":"718","endLine":29,"endColumn":51},{"ruleId":"715","severity":1,"message":"716","line":31,"column":53,"nodeType":"717","messageId":"718","endLine":31,"endColumn":55},{"ruleId":"651","severity":1,"message":"719","line":61,"column":8,"nodeType":"653","endLine":61,"endColumn":10,"suggestions":"720"},{"ruleId":"639","severity":1,"message":"721","line":63,"column":12,"nodeType":"641","messageId":"642","endLine":63,"endColumn":31},{"ruleId":"715","severity":1,"message":"716","line":76,"column":45,"nodeType":"717","messageId":"718","endLine":76,"endColumn":47},{"ruleId":"715","severity":1,"message":"716","line":87,"column":69,"nodeType":"717","messageId":"718","endLine":87,"endColumn":71},{"ruleId":"715","severity":1,"message":"716","line":88,"column":69,"nodeType":"717","messageId":"718","endLine":88,"endColumn":71},{"ruleId":"651","severity":1,"message":"719","line":119,"column":8,"nodeType":"653","endLine":119,"endColumn":10,"suggestions":"722"},{"ruleId":"639","severity":1,"message":"723","line":198,"column":12,"nodeType":"641","messageId":"642","endLine":198,"endColumn":17},{"ruleId":"639","severity":1,"message":"724","line":226,"column":11,"nodeType":"641","messageId":"642","endLine":226,"endColumn":22},{"ruleId":"639","severity":1,"message":"725","line":231,"column":14,"nodeType":"641","messageId":"642","endLine":231,"endColumn":30},{"ruleId":"639","severity":1,"message":"726","line":235,"column":14,"nodeType":"641","messageId":"642","endLine":235,"endColumn":28},{"ruleId":"639","severity":1,"message":"727","line":238,"column":14,"nodeType":"641","messageId":"642","endLine":238,"endColumn":29},{"ruleId":"639","severity":1,"message":"728","line":243,"column":14,"nodeType":"641","messageId":"642","endLine":243,"endColumn":25},{"ruleId":"647","severity":1,"message":"648","line":252,"column":38,"nodeType":"649","messageId":"650","endLine":252,"endColumn":40},{"ruleId":"639","severity":1,"message":"729","line":410,"column":10,"nodeType":"641","messageId":"642","endLine":410,"endColumn":18},{"ruleId":"639","severity":1,"message":"657","line":5,"column":9,"nodeType":"641","messageId":"642","endLine":5,"endColumn":13},{"ruleId":"639","severity":1,"message":"656","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":13},{"ruleId":"639","severity":1,"message":"667","line":1,"column":16,"nodeType":"641","messageId":"642","endLine":1,"endColumn":24},{"ruleId":"639","severity":1,"message":"657","line":3,"column":9,"nodeType":"641","messageId":"642","endLine":3,"endColumn":13},{"ruleId":"647","severity":1,"message":"648","line":9,"column":46,"nodeType":"649","messageId":"650","endLine":9,"endColumn":48},{"ruleId":"647","severity":1,"message":"648","line":13,"column":46,"nodeType":"649","messageId":"650","endLine":13,"endColumn":48},{"ruleId":"639","severity":1,"message":"730","line":14,"column":9,"nodeType":"641","messageId":"642","endLine":14,"endColumn":21},{"ruleId":"639","severity":1,"message":"731","line":15,"column":9,"nodeType":"641","messageId":"642","endLine":15,"endColumn":20},{"ruleId":"639","severity":1,"message":"657","line":5,"column":9,"nodeType":"641","messageId":"642","endLine":5,"endColumn":13},{"ruleId":"639","severity":1,"message":"732","line":1,"column":8,"nodeType":"641","messageId":"642","endLine":1,"endColumn":17},{"ruleId":"639","severity":1,"message":"733","line":2,"column":8,"nodeType":"641","messageId":"642","endLine":2,"endColumn":15},{"ruleId":"639","severity":1,"message":"734","line":3,"column":8,"nodeType":"641","messageId":"642","endLine":3,"endColumn":17},{"ruleId":"639","severity":1,"message":"673","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":14},{"ruleId":"639","severity":1,"message":"668","line":5,"column":20,"nodeType":"641","messageId":"642","endLine":5,"endColumn":29},{"ruleId":"639","severity":1,"message":"669","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":11},{"ruleId":"639","severity":1,"message":"657","line":7,"column":10,"nodeType":"641","messageId":"642","endLine":7,"endColumn":14},{"ruleId":"639","severity":1,"message":"735","line":8,"column":8,"nodeType":"641","messageId":"642","endLine":8,"endColumn":16},{"ruleId":"639","severity":1,"message":"736","line":9,"column":8,"nodeType":"641","messageId":"642","endLine":9,"endColumn":19},{"ruleId":"639","severity":1,"message":"737","line":18,"column":21,"nodeType":"641","messageId":"642","endLine":18,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":20,"column":21,"nodeType":"649","messageId":"650","endLine":20,"endColumn":23},{"ruleId":"639","severity":1,"message":"673","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":14},{"ruleId":"639","severity":1,"message":"672","line":6,"column":9,"nodeType":"641","messageId":"642","endLine":6,"endColumn":21},{"ruleId":"639","severity":1,"message":"686","line":9,"column":12,"nodeType":"641","messageId":"642","endLine":9,"endColumn":21},{"ruleId":"660","severity":1,"message":"661","line":43,"column":17,"nodeType":"646","endLine":52,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":58,"column":17,"nodeType":"646","endLine":67,"endColumn":19},{"ruleId":"639","severity":1,"message":"729","line":80,"column":10,"nodeType":"641","messageId":"642","endLine":80,"endColumn":18},{"ruleId":"708","severity":1,"message":"709","line":83,"column":5,"nodeType":"710","messageId":"711","endLine":83,"endColumn":19,"fix":"738"},{"ruleId":"647","severity":1,"message":"648","line":50,"column":23,"nodeType":"649","messageId":"650","endLine":50,"endColumn":25},{"ruleId":"647","severity":1,"message":"648","line":85,"column":23,"nodeType":"649","messageId":"650","endLine":85,"endColumn":25},{"ruleId":"647","severity":1,"message":"648","line":113,"column":18,"nodeType":"649","messageId":"650","endLine":113,"endColumn":20},{"ruleId":"639","severity":1,"message":"737","line":25,"column":21,"nodeType":"641","messageId":"642","endLine":25,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":27,"column":21,"nodeType":"649","messageId":"650","endLine":27,"endColumn":23},{"ruleId":"639","severity":1,"message":"657","line":5,"column":9,"nodeType":"641","messageId":"642","endLine":5,"endColumn":13},{"ruleId":"660","severity":1,"message":"661","line":19,"column":17,"nodeType":"646","endLine":28,"endColumn":19},{"ruleId":"639","severity":1,"message":"739","line":11,"column":15,"nodeType":"641","messageId":"642","endLine":11,"endColumn":17},{"ruleId":"639","severity":1,"message":"677","line":91,"column":12,"nodeType":"641","messageId":"642","endLine":91,"endColumn":25},{"ruleId":"639","severity":1,"message":"678","line":91,"column":27,"nodeType":"641","messageId":"642","endLine":91,"endColumn":43},{"ruleId":"639","severity":1,"message":"679","line":93,"column":9,"nodeType":"641","messageId":"642","endLine":93,"endColumn":18},{"ruleId":"647","severity":1,"message":"680","line":665,"column":21,"nodeType":"649","messageId":"650","endLine":665,"endColumn":23},{"ruleId":"639","severity":1,"message":"681","line":754,"column":10,"nodeType":"641","messageId":"642","endLine":754,"endColumn":37},{"ruleId":"639","severity":1,"message":"682","line":766,"column":10,"nodeType":"641","messageId":"642","endLine":766,"endColumn":37},{"ruleId":"639","severity":1,"message":"740","line":11,"column":20,"nodeType":"641","messageId":"642","endLine":11,"endColumn":31},{"ruleId":"639","severity":1,"message":"740","line":12,"column":20,"nodeType":"641","messageId":"642","endLine":12,"endColumn":31},{"ruleId":"639","severity":1,"message":"673","line":1,"column":8,"nodeType":"641","messageId":"642","endLine":1,"endColumn":14},{"ruleId":"715","severity":1,"message":"716","line":49,"column":45,"nodeType":"717","messageId":"718","endLine":49,"endColumn":47},{"ruleId":"639","severity":1,"message":"668","line":2,"column":16,"nodeType":"641","messageId":"642","endLine":2,"endColumn":25},{"ruleId":"639","severity":1,"message":"667","line":2,"column":27,"nodeType":"641","messageId":"642","endLine":2,"endColumn":35},{"ruleId":"639","severity":1,"message":"673","line":4,"column":8,"nodeType":"641","messageId":"642","endLine":4,"endColumn":14},{"ruleId":"639","severity":1,"message":"669","line":5,"column":8,"nodeType":"641","messageId":"642","endLine":5,"endColumn":11},{"ruleId":"660","severity":1,"message":"661","line":15,"column":17,"nodeType":"646","endLine":24,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":30,"column":17,"nodeType":"646","endLine":39,"endColumn":19},{"ruleId":"651","severity":1,"message":"741","line":34,"column":8,"nodeType":"653","endLine":34,"endColumn":10,"suggestions":"742"},{"ruleId":"660","severity":1,"message":"661","line":51,"column":21,"nodeType":"646","endLine":55,"endColumn":22},{"ruleId":"639","severity":1,"message":"668","line":5,"column":19,"nodeType":"641","messageId":"642","endLine":5,"endColumn":28},{"ruleId":"639","severity":1,"message":"737","line":36,"column":21,"nodeType":"641","messageId":"642","endLine":36,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":38,"column":21,"nodeType":"649","messageId":"650","endLine":38,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":61,"column":25,"nodeType":"646","endLine":65,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":68,"column":21,"nodeType":"646","endLine":95,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":117,"column":21,"nodeType":"646","endLine":122,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":130,"column":18,"nodeType":"649","messageId":"650","endLine":130,"endColumn":20},{"ruleId":"660","severity":1,"message":"661","line":132,"column":13,"nodeType":"646","endLine":137,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":141,"column":13,"nodeType":"646","endLine":146,"endColumn":15},{"ruleId":"639","severity":1,"message":"743","line":2,"column":9,"nodeType":"641","messageId":"642","endLine":2,"endColumn":19},{"ruleId":"647","severity":1,"message":"648","line":50,"column":23,"nodeType":"649","messageId":"650","endLine":50,"endColumn":25},{"ruleId":"647","severity":1,"message":"648","line":85,"column":23,"nodeType":"649","messageId":"650","endLine":85,"endColumn":25},{"ruleId":"647","severity":1,"message":"648","line":113,"column":18,"nodeType":"649","messageId":"650","endLine":113,"endColumn":20},{"ruleId":"639","severity":1,"message":"657","line":1,"column":9,"nodeType":"641","messageId":"642","endLine":1,"endColumn":13},{"ruleId":"639","severity":1,"message":"656","line":3,"column":8,"nodeType":"641","messageId":"642","endLine":3,"endColumn":13},{"ruleId":"660","severity":1,"message":"661","line":19,"column":17,"nodeType":"646","endLine":28,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":9,"column":21,"nodeType":"646","endLine":21,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":41,"column":38,"nodeType":"649","messageId":"650","endLine":41,"endColumn":40},{"ruleId":"647","severity":1,"message":"648","line":7,"column":42,"nodeType":"649","messageId":"650","endLine":7,"endColumn":44},{"ruleId":"647","severity":1,"message":"680","line":33,"column":42,"nodeType":"649","messageId":"650","endLine":33,"endColumn":44},{"ruleId":"639","severity":1,"message":"668","line":5,"column":19,"nodeType":"641","messageId":"642","endLine":5,"endColumn":28},{"ruleId":"639","severity":1,"message":"737","line":35,"column":21,"nodeType":"641","messageId":"642","endLine":35,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":37,"column":21,"nodeType":"649","messageId":"650","endLine":37,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":65,"column":25,"nodeType":"646","endLine":69,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":72,"column":21,"nodeType":"646","endLine":99,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":117,"column":21,"nodeType":"646","endLine":124,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":132,"column":18,"nodeType":"649","messageId":"650","endLine":132,"endColumn":20},{"ruleId":"660","severity":1,"message":"661","line":134,"column":13,"nodeType":"646","endLine":139,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":143,"column":13,"nodeType":"646","endLine":148,"endColumn":15},{"ruleId":"708","severity":1,"message":"709","line":177,"column":5,"nodeType":"710","messageId":"711","endLine":177,"endColumn":19,"fix":"744"},{"ruleId":"708","severity":1,"message":"709","line":204,"column":13,"nodeType":"710","messageId":"711","endLine":204,"endColumn":27,"fix":"745"},{"ruleId":"715","severity":1,"message":"716","line":247,"column":68,"nodeType":"717","messageId":"718","endLine":247,"endColumn":70},{"ruleId":"639","severity":1,"message":"737","line":28,"column":21,"nodeType":"641","messageId":"642","endLine":28,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":30,"column":21,"nodeType":"649","messageId":"650","endLine":30,"endColumn":23},{"ruleId":"647","severity":1,"message":"648","line":69,"column":18,"nodeType":"649","messageId":"650","endLine":69,"endColumn":20},{"ruleId":"660","severity":1,"message":"661","line":71,"column":13,"nodeType":"646","endLine":76,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":80,"column":13,"nodeType":"646","endLine":85,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":17,"column":17,"nodeType":"646","endLine":26,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":32,"column":17,"nodeType":"646","endLine":41,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":9,"column":21,"nodeType":"646","endLine":21,"endColumn":23},{"ruleId":"639","severity":1,"message":"746","line":3,"column":9,"nodeType":"641","messageId":"642","endLine":3,"endColumn":15},{"ruleId":"639","severity":1,"message":"747","line":18,"column":11,"nodeType":"641","messageId":"642","endLine":18,"endColumn":23},{"ruleId":"651","severity":1,"message":"748","line":100,"column":8,"nodeType":"653","endLine":100,"endColumn":10,"suggestions":"749"},{"ruleId":"715","severity":1,"message":"716","line":46,"column":68,"nodeType":"717","messageId":"718","endLine":46,"endColumn":70},{"ruleId":"639","severity":1,"message":"737","line":26,"column":21,"nodeType":"641","messageId":"642","endLine":26,"endColumn":33},{"ruleId":"647","severity":1,"message":"680","line":28,"column":21,"nodeType":"649","messageId":"650","endLine":28,"endColumn":23},{"ruleId":"660","severity":1,"message":"661","line":44,"column":25,"nodeType":"646","endLine":49,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":19,"column":17,"nodeType":"646","endLine":28,"endColumn":19},{"ruleId":"639","severity":1,"message":"750","line":4,"column":10,"nodeType":"641","messageId":"642","endLine":4,"endColumn":16},{"ruleId":"651","severity":1,"message":"751","line":35,"column":8,"nodeType":"653","endLine":35,"endColumn":10,"suggestions":"752"},{"ruleId":"660","severity":1,"message":"661","line":9,"column":21,"nodeType":"646","endLine":21,"endColumn":23},{"ruleId":"639","severity":1,"message":"753","line":6,"column":8,"nodeType":"641","messageId":"642","endLine":6,"endColumn":17},{"ruleId":"644","severity":1,"message":"645","line":111,"column":9,"nodeType":"646","endLine":115,"endColumn":11},{"ruleId":"660","severity":1,"message":"661","line":11,"column":13,"nodeType":"646","endLine":15,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":26,"column":13,"nodeType":"646","endLine":30,"endColumn":15},{"ruleId":"660","severity":1,"message":"661","line":11,"column":13,"nodeType":"646","endLine":15,"endColumn":15},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'setEmail' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'currentUser.email' and 'currentUser.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["754"],"'Route' is defined but never used.","'Arrow' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'inputSearch' is assigned a value but never used.","'setInputSearch' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'app' is defined but never used.","'ArrowHeader' is defined but never used.","'Popup' is defined but never used.","'BsPlusCircle' is defined but never used.","'Delete' is defined but never used.","'AHeader' is defined but never used.","'ButtonsTemplate' is defined but never used.","'HeaderHomeTemplate' is defined but never used.","'fileGenerated' is assigned a value but never used.","'setFileGenerated' is assigned a value but never used.","'userEmail' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setCorrectionProcedureStep3' is defined but never used.","'setCorrectionProcedureStep2' is defined but never used.","'ProtocolItemTemplate' is defined but never used.","'ArrowHeaderTemplate' is defined but never used.","'test' is assigned a value but never used.","'protocols' is assigned a value but never used.","'setProtocols' is assigned a value but never used.","'ProgramTemplateViewPrivate' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'patientResultRef'. Either include it or remove the dependency array.",["755"],"'setSex' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'phone' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'history'. Either exclude it or remove the dependency array.",["756"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'RemoveCopiedStatus' is defined but never used.","'Kid' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property collection.","MemberExpression","unexpectedWhitespace",{"range":"757","text":"758"},{"range":"759","text":"758"},"'protocolsToTerapists' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'listTest'. Either include it or remove the dependency array.",["760"],"'stimulusToTerapists' is assigned a value but never used.",["761"],"'child' is assigned a value but never used.","'togglePopup' is assigned a value but never used.","'dragStartHandler' is defined but never used.","'dragEndHandler' is defined but never used.","'dragOverHandler' is defined but never used.","'dropHandler' is defined but never used.","'addProto' is defined but never used.","'decorPrivate' is assigned a value but never used.","'decorPublic' is assigned a value but never used.","'Duplicate' is defined but never used.","'Visible' is defined but never used.","'UnVisible' is defined but never used.","'EditIcon' is defined but never used.","'SecondModal' is defined but never used.","'setColorItem' is assigned a value but never used.",{"range":"762","text":"758"},"'db' is assigned a value but never used.","'setStimulus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.",["763"],"'withRouter' is defined but never used.",{"range":"764","text":"758"},{"range":"765","text":"758"},"'Button' is defined but never used.","'handleUpload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filesList'. Either include it or remove the dependency array.",["766"],"'Update' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'idStage'. Either include them or remove the dependency array.",["767"],"'close_img' is defined but never used.",{"desc":"768","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},[18106,18108],".",[18682,18684],{"desc":"774","fix":"775"},{"desc":"774","fix":"776"},[2730,2732],{"desc":"777","fix":"778"},[5505,5507],[6633,6635],{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, history]",{"range":"783","text":"784"},"Update the dependencies array to be: [patientResultRef]",{"range":"785","text":"786"},"Update the dependencies array to be: []",{"range":"787","text":"788"},"Update the dependencies array to be: [listTest]",{"range":"789","text":"790"},{"range":"791","text":"790"},"Update the dependencies array to be: [date]",{"range":"792","text":"793"},"Update the dependencies array to be: [filesList]",{"range":"794","text":"795"},"Update the dependencies array to be: [id, idStage]",{"range":"796","text":"797"},[1519,1528],"[currentUser.email, currentUser.emailVerified, history]",[1599,1601],"[patientResultRef]",[1644,1653],"[]",[2520,2522],"[listTest]",[5160,5162],[1086,1088],"[date]",[3606,3608],"[filesList]",[1184,1186],"[id, idStage]"]