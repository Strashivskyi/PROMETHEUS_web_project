[{"/home/kaizen/github/PROMETHEUS_web_project/src/index.js":"1","/home/kaizen/github/PROMETHEUS_web_project/src/App.js":"2","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/Program.jsx":"3","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUp.js":"4","/home/kaizen/github/PROMETHEUS_web_project/src/Components/SignIn/SignIn.js":"5","/home/kaizen/github/PROMETHEUS_web_project/src/Components/SignIn/ForgetPassword.js":"6","/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientInfo/PatientInfoPage.js":"7","/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/TherapyResult.js":"8","/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/Auth.js":"9","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Patient/Patient.jsx":"10","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/ProtocolList.jsx":"11","/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg.jsx":"12","/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin.jsx":"13","/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/firebase.js":"14","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/ProgramHeader.js":"15","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm1.js":"16","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm2.js":"17","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm3.js":"18","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm4.js":"19","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/Header.js":"20","/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/Pagination.js":"21","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/StimulusItem.jsx":"22","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ArrowHeader.jsx":"23","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step1.jsx":"24","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step2.jsx":"25","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step3.jsx":"26","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/CriteriongenGenerSkillElement/CriteriongenGenerSkill.jsx":"27","/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientItem/PatientItem.js":"28","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/PageComponent/ProtocolItem.jsx":"29","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/PageComponent/ArrowHeader.jsx":"30","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/Header.styled.js":"31","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/exportService.js":"32","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/DataPicker.js":"33","/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/File.js":"34","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/Navigation/LoginNavigation.jsx":"35","/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientItem/PatientItem.styled.js":"36","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/CriteriongenGenerSkillElement/CriteriongenGenerSkillItem.jsx":"37","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem.jsx":"38","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem3.jsx":"39","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem2.jsx":"40"},{"size":452,"mtime":1613416996364,"results":"41","hashOfConfig":"42"},{"size":2730,"mtime":1613416994088,"results":"43","hashOfConfig":"42"},{"size":40171,"mtime":1613416936936,"results":"44","hashOfConfig":"42"},{"size":1733,"mtime":1613416862815,"results":"45","hashOfConfig":"42"},{"size":3264,"mtime":1613417433705,"results":"46","hashOfConfig":"42"},{"size":2261,"mtime":1613416950828,"results":"47","hashOfConfig":"42"},{"size":8533,"mtime":1613416897039,"results":"48","hashOfConfig":"42"},{"size":2307,"mtime":1613416971364,"results":"49","hashOfConfig":"42"},{"size":755,"mtime":1613416984832,"results":"50","hashOfConfig":"42"},{"size":2233,"mtime":1613416891351,"results":"51","hashOfConfig":"42"},{"size":4676,"mtime":1613416946560,"results":"52","hashOfConfig":"42"},{"size":601,"mtime":1613416982028,"results":"53","hashOfConfig":"42"},{"size":605,"mtime":1613416980236,"results":"54","hashOfConfig":"42"},{"size":369,"mtime":1613416988152,"results":"55","hashOfConfig":"42"},{"size":6218,"mtime":1613416849407,"results":"56","hashOfConfig":"42"},{"size":3446,"mtime":1613416869183,"results":"57","hashOfConfig":"42"},{"size":4071,"mtime":1613416874023,"results":"58","hashOfConfig":"42"},{"size":2541,"mtime":1613416879307,"results":"59","hashOfConfig":"42"},{"size":3770,"mtime":1613416885075,"results":"60","hashOfConfig":"42"},{"size":1337,"mtime":1613416842675,"results":"61","hashOfConfig":"42"},{"size":2916,"mtime":1613416967152,"results":"62","hashOfConfig":"42"},{"size":1316,"mtime":1613416930120,"results":"63","hashOfConfig":"42"},{"size":1844,"mtime":1613416927836,"results":"64","hashOfConfig":"42"},{"size":2161,"mtime":1613416922911,"results":"65","hashOfConfig":"42"},{"size":3105,"mtime":1613416924367,"results":"66","hashOfConfig":"42"},{"size":3105,"mtime":1613416926344,"results":"67","hashOfConfig":"42"},{"size":5133,"mtime":1613416909947,"results":"68","hashOfConfig":"42"},{"size":1633,"mtime":1613416899715,"results":"69","hashOfConfig":"42"},{"size":5573,"mtime":1613416941984,"results":"70","hashOfConfig":"42"},{"size":3022,"mtime":1613416940008,"results":"71","hashOfConfig":"42"},{"size":208,"mtime":1613416844947,"results":"72","hashOfConfig":"42"},{"size":2206,"mtime":1613416839439,"results":"73","hashOfConfig":"42"},{"size":1063,"mtime":1613416856283,"results":"74","hashOfConfig":"42"},{"size":729,"mtime":1613416962352,"results":"75","hashOfConfig":"42"},{"size":939,"mtime":1613416853131,"results":"76","hashOfConfig":"42"},{"size":946,"mtime":1613416901111,"results":"77","hashOfConfig":"42"},{"size":1441,"mtime":1613416912059,"results":"78","hashOfConfig":"42"},{"size":1264,"mtime":1613416915335,"results":"79","hashOfConfig":"42"},{"size":1275,"mtime":1613416919475,"results":"80","hashOfConfig":"42"},{"size":1275,"mtime":1613416917471,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jjvjc5",{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},"/home/kaizen/github/PROMETHEUS_web_project/src/index.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/App.js",["190","191","192"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/SignIn/SignIn'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgetPassword from './Components/SignIn/ForgetPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport SingleProgram from './Components/Program/Program.jsx'\r\nimport { AuthProvider } from './Firebase/AuthSetup/Auth'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoPage from './Components/PatientInfo/PatientInfoPage'\r\nimport ProtocolList from './Components/ProtocolList/ProtocolList'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <AuthProvider>\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgetPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={SingleProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={ProtocolList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoPage}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={PatientInfoPage}\r\n                            component={TherapyResult}\r\n                        />\r\n                    </Switch>\r\n                </Router>\r\n            </AuthProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/Program.jsx",["193","194","195","196"],"import ProgramHeader from '../Header/ProgramHeader'\nimport './Program.css'\nimport Step1 from './ProgramElement/ProgramStep/Step1'\nimport { TextInput } from 'react-native-paper'\n\nimport React, { useEffect, useState } from 'react'\nimport app from '../../Firebase/firebase'\nimport ArrowHeader from './ProgramElement/ArrowHeader'\nimport CriteriongenGenerSkill from './ProgramElement/CriteriongenGenerSkillElement/CriteriongenGenerSkill'\nimport StimulusItem from './ProgramElement/StimulusItem'\nimport Step2 from './ProgramElement/ProgramStep/Step2'\nimport Step3 from './ProgramElement/ProgramStep/Step3'\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\n\nconst theme = {\n    ...DefaultTheme,\n    roundness: 0,\n    colors: {\n        ...DefaultTheme.colors,\n        primary: 'transparent',\n        accent: 'transparent',\n        dark: 'true',\n    },\n}\n\nfunction RemoveCopiedStatus({ protocol }) {\n    if (protocol.StatusCopied != null) {\n        const db = app.firestore()\n        db.collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .update({ StatusCopied: '' })\n    }\n\n    return <></>\n}\n\nfunction SingleProgram() {\n    let test = []\n\n    let [stimulus, setStimulus] = useState([])\n    let [stimulInput, setStimulInput] = useState('')\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('Stimulus')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setStimulus(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    // let [stimulus1, setStimulus1] = useState([]);\n\n    // useEffect(() => {\n    //     const fetchData = async () => {\n    //         const db = app.firestore()\n    //         test.map((t)=>{\n    //         const data = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(t).collection(\"Stimulus\").get()\n    //         setStimulus1(data.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //         console.log(stimulus1)\n    //         console.log(\"Сукаaaaaaaaa \")\n    //     })}\n    //     fetchData()\n    // }, [stimulus1, setStimulus1])\n\n    protocols = protocols.filter((protocol) =>\n        protocol.id.includes(localStorage.getItem('program'))\n    )\n\n    return (\n        <PaperProvider theme={theme}>\n            <>\n                <ProgramHeader />\n                <ArrowHeader />\n                <ul style={{ position: 'relative', right: '4%' }}>\n                    {protocols.map((protocol) => (\n                        <div className=\"program_big_flex_container\">\n                            <div\n                                style={{ marginBottom: '1rem' }}\n                                className=\"element_name\"\n                            >\n                                {' '}\n                                Протокол {protocol.ProtocolId}{' '}\n                                {protocol.StatusCopied}.{' '}\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\n                            </div>\n                            <RemoveCopiedStatus protocol={protocol} />\n                            <div className=\"each_element_grid_container\">\n                                <div\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                    className=\"element_name\"\n                                >\n                                    Сфера розвитку:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.SphereOfDevelopment}\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                    onChange={(e) =>\n                                        addSphereOfDevelopment(e.target.value)\n                                    }\n                                />\n\n                                <div\n                                    style={{ marginTop: '1rem' }}\n                                    className=\"element_name\"\n                                >\n                                    Навик:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.Skill}\n                                    style={{\n                                        fontSize: '20px',\n                                        marginTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: { background: 'transparent' },\n                                    }}\n                                    onChange={(e) => addSkill(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                    className=\"element_name\"\n                                >\n                                    Метод:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.Method}\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                    onChange={(e) => addMethod(e.target.value)}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{ paddingTop: '1rem' }}\n                                >\n                                    Бажана реакція:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.DesirableReaction}\n                                    style={{\n                                        fontSize: '20px',\n                                        paddingTop: '1rem',\n                                    }}\n                                    raised\n                                    theme={{\n                                        colors: { background: 'transparent' },\n                                    }}\n                                    onChange={(e) =>\n                                        addDesirableReaction(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <CriteriongenGenerSkill />\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ paddingTop: '1rem' }}\n                                >\n                                    Рівні інтенсивності підказки:\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ paddingTop: '1rem' }}\n                                >\n                                    Оберіть інтервал часу або тип виконання:\n                                    <select\n                                        onChange={(event) =>\n                                            addInterval(event.target.value)\n                                        }\n                                        style={{\n                                            marginLeft: '0.5rem',\n                                            background: '#F8FCFF',\n                                            border: '2px solid #CCE9FF',\n                                            boxSizing: 'border-box',\n                                            height: '40px',\n                                            fontSize: '20px',\n                                            lineHeight: '20px',\n                                            paddingLeft: '10px',\n                                        }}\n                                    >\n                                        <option value=\"0\">0 секунд</option>\n                                        <option value=\"2\">2 секунди</option>\n                                        <option value=\"4\">4 секунди</option>\n                                        <option value=\"6\">6 секунд</option>\n                                        <option value=\"Самостійна реакція\">\n                                            Самостійна реакція\n                                        </option>\n                                    </select>\n                                    <div\n                                        className=\"element_name\"\n                                        style={{ minHeight: '1rem' }}\n                                    ></div>\n                                    <div\n                                        className=\"element_value\"\n                                        style={{ minHeight: '1rem' }}\n                                    ></div>\n                                </div>\n                                <div\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                    className=\"element_name\"\n                                >\n                                    Критерій зниження рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.ReductionСriterion}\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                    onChange={(e) =>\n                                        addReductionСriterion(e.target.value)\n                                    }\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div className=\"element_name\">\n                                    Критерій підвищення рівня інтенсивності\n                                    підказки:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.CriterionIncrease}\n                                    onChange={(e) =>\n                                        addCriterionIncrease(e.target.value)\n                                    }\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: 'transparent' },\n                                    }}\n                                />\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_name\"\n                                >\n                                    Спосіб забирання підказки:\n                                </div>\n                                <div\n                                    style={{\n                                        backgroundColor: '#EEEEEE',\n                                        paddingTop: '1rem',\n                                    }}\n                                    className=\"element_value\"\n                                >\n                                    <select\n                                        onChange={(event) =>\n                                            addMethodTakingHint(\n                                                event.target.value\n                                            )\n                                        }\n                                        style={{\n                                            marginLeft: '-1rem',\n                                            background: '#F8FCFF',\n                                            border: '2px solid #CCE9FF',\n                                            boxSizing: 'border-box',\n                                            height: '40px',\n                                            fontSize: '20px',\n                                            lineHeight: '20px',\n                                            paddingLeft: '10px',\n                                        }}\n                                    >\n                                        <option value=\"Тимчасова затримка\">\n                                            Тимчасова затримка\n                                        </option>\n                                        <option value=\"Від найменшої до найбільшої\">\n                                            Від найменшої до найбільшої\n                                        </option>\n                                    </select>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{\n                                        minHeight: '1rem',\n                                        backgroundColor: '#EEEEEE',\n                                    }}\n                                ></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n\n                                <div className=\"element_name\">\n                                    Стимули до етапів\n                                </div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ lineHeight: '18px' }}\n                                >\n                                    <ul>\n                                        {stimulus.map((stimul) => (\n                                            <StimulusItem\n                                                name={stimul.Name}\n                                                stimulId={stimul.id}\n                                            />\n                                        ))}\n\n                                        <div\n                                            style={{\n                                                display: 'flex',\n                                                flexDirection: 'row',\n                                            }}\n                                        >\n                                            <button\n                                                onClick={() =>\n                                                    addStimul(stimulInput)\n                                                }\n                                                className=\"add_button\"\n                                            >\n                                                <h1\n                                                    style={{\n                                                        marginTop: '5px',\n                                                        marginBottom: '5px',\n                                                        textAlign: 'center',\n                                                        width: '22px',\n                                                        height: '20px',\n                                                        color: '#4d4d4d',\n                                                        fontSize: '20px',\n                                                    }}\n                                                >\n                                                    +\n                                                </h1>\n                                            </button>\n                                            <div className=\"transparent_input\">\n                                                <input\n                                                    type=\"text\"\n                                                    onChange={(event) =>\n                                                        setStimulInput(\n                                                            event.target.value\n                                                        )\n                                                    }\n                                                    name=\"name\"\n                                                    placeholder=\"Додати стимул....\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </ul>\n                                </div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n\n                                <div\n                                    className=\"element_name\"\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                >\n                                    Опис етапів:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={protocol.StepDescription}\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                    onChange={(event) =>\n                                        setStepDescription(event.target.value)\n                                    }\n                                />\n                                {/*step 1*/}\n                                <div\n                                    className=\"element_name\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div\n                                    className=\"element_value\"\n                                    style={{ minHeight: '1rem' }}\n                                ></div>\n                                <div className=\"element_name\">Етап 1</div>\n                                <div className=\"element_value\"></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={\n                                        protocol.CorrectionProcedureStep1\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep1(\n                                            event.target.value\n                                        )\n                                    }\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                />\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\n\n                                <div className=\"element_name\">\n                                    Інструкції до етапу:\n                                </div>\n                                <div className=\"element_value\">\n                                    <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        placeholder={protocol.Instructions1}\n                                        onChange={(event) =>\n                                            addInstruction1(event.target.value)\n                                        }\n                                        style={{ fontSize: '20px' }}\n                                        raised\n                                        theme={{\n                                            colors: { background: '#fcfcfc' },\n                                        }}\n                                    />\n                                </div>\n                                {/*step 2*/}\n                                <div className=\"element_name\">Етап 2</div>\n                                <div className=\"element_value\"></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={\n                                        protocol.CorrectionProcedureStep2\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep2(\n                                            event.target.value\n                                        )\n                                    }\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                />\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу:\n                                </div>\n                                <div className=\"element_value\">\n                                    <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        placeholder={protocol.Instructions2}\n                                        onChange={(event) =>\n                                            addInstruction2(event.target.value)\n                                        }\n                                        style={{ fontSize: '20px' }}\n                                        raised\n                                        theme={{\n                                            colors: { background: '#fcfcfc' },\n                                        }}\n                                    />\n                                </div>\n                                {/*step 3*/}\n                                <div className=\"element_name\">Етап 3</div>\n                                <div className=\"element_value\"></div>\n                                <div\n                                    className=\"element_name\"\n                                    style={{ backgroundColor: '#EEEEEE' }}\n                                >\n                                    Процедура корекції неправильної відповіді:\n                                </div>\n                                <TextInput\n                                    className=\"element_value\"\n                                    multiline=\"true\"\n                                    underlineColor=\"transparent\"\n                                    selectionColor=\"primary\"\n                                    placeholder={\n                                        protocol.CorrectionProcedureStep3\n                                    }\n                                    onChange={(event) =>\n                                        setCorrectionProcedureStep3(\n                                            event.target.value\n                                        )\n                                    }\n                                    style={{ fontSize: '20px' }}\n                                    raised\n                                    theme={{\n                                        colors: { background: '#fcfcfc' },\n                                    }}\n                                />\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\n                                <div className=\"element_name\">\n                                    Інструкції до етапу:\n                                </div>\n                                <div className=\"element_value\">\n                                    <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n                                        placeholder={protocol.Instructions3}\n                                        onChange={(event) =>\n                                            addInstruction3(event.target.value)\n                                        }\n                                        style={{ fontSize: '20px' }}\n                                        raised\n                                        theme={{\n                                            colors: { background: '#fcfcfc' },\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </ul>\n                <div style={{ height: '100px' }}></div>\n            </>\n        </PaperProvider>\n    )\n}\nexport default SingleProgram\n\nfunction addInstruction1(instructionInput) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Instructions1: instructionInput })\n}\n\nfunction addInstruction2(instructionInput) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Instructions2: instructionInput })\n}\n\nfunction addInstruction3(instructionInput) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Instructions3: instructionInput })\n}\n\nfunction addStimul(stimulInput) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Stimulus')\n        .add({ Name: stimulInput })\n    setTimeout(() => {\n        window.location.reload()\n    }, 300)\n}\nfunction addSkill(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Skill: params })\n    console.log(params)\n}\n\nfunction addMethod(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Method: params })\n    console.log(params)\n}\nfunction addDesirableReaction(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ DesirableReaction: params })\n    console.log(params)\n}\n\nfunction addReductionСriterion(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ ReductionСriterion: params })\n    console.log(params)\n}\n\nfunction addCriterionIncrease(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ CriterionIncrease: params })\n    console.log(params)\n}\n\nfunction setStepDescription(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ StepDescription: params })\n    console.log(params)\n}\nfunction setCorrectionProcedureStep3(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ CorrectionProcedureStep3: params })\n    console.log(params)\n}\nfunction setCorrectionProcedureStep2(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ CorrectionProcedureStep2: params })\n    console.log(params)\n}\nfunction setCorrectionProcedureStep1(params) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ CorrectionProcedureStep1: params })\n    console.log(params)\n}\n\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\n    console.log(sphereOfDevelopment)\n}\n\nfunction addInterval(interval) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ Interval: interval })\n}\n\nfunction addMethodTakingHint(method) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .update({ MethodTakingHint: method })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUp.js",["197"],"import SignUpForm1 from './SignUpForm1'\nimport SignUpForm2 from './SignUpForm2'\nimport SignUpForm3 from './SignUpForm3'\nimport SignUpForm4 from './SignUpForm4'\nimport PrivateRouteToReg from '../../Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './Login1.css'\n\nfunction SignUp() {\n    return (\n        <>\n            <div className=\"image-form-division\">\n                <div className=\"image\" />\n                <div className=\"form\">\n                    <div className=\"sign-up-text\">Реєстрація</div>\n                    <Router>\n                        <Switch>\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration\"\n                                component={SignUpForm1}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup2\"\n                                component={SignUpForm2}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup3\"\n                                component={SignUpForm3}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup4\"\n                                component={SignUpForm4}\n                            />\n                        </Switch>\n                    </Router>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignUp\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/SignIn/SignIn.js",["198","199","200"],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/SignIn/ForgetPassword.js",["201","202","203","204","205"],"import React, { useCallback, useContext } from 'react'\nimport { useState } from 'react'\nimport { withRouter, Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport app from '../../Firebase/firebase'\nimport '../Login/Login1.css'\nimport './ForgetPassword.css'\n\nfunction recover(Email, history) {\n    app.auth()\n        .sendPasswordResetEmail(Email)\n        .then(function (user) {\n            alert('Please check your email...')\n            history.push('/')\n        })\n        .catch(function (e) {\n            alert(e)\n        })\n}\n\nfunction ForgetPassword() {\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    console.log(email)\n    return (\n        <>\n            <div className=\"image-form-division\">\n                <div className=\"image\" />\n                <div className=\"form\">\n                    <div className=\"sign-up-text\"> Відновлення паролю</div>\n                    <form className=\"forget_form\">\n                        <div>\n                            **Якщо Ви забули свій пароль, будь ласка, введіть\n                            поточну електронну адресу і перевірте свою пошту.\n                            Вам має прийти лист з посиланням,за яким Ви повинні\n                            перейти і ввести новий пароль.\n                        </div>\n                        <input\n                            className=\"forget_text_input\"\n                            type=\"text\"\n                            id=\"fname\"\n                            name=\"email\"\n                            placeholder=\"Email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n\n                        <p\n                            className=\"forget_submit\"\n                            onClick={() => recover(email, history)}\n                        >\n                            Відправити\n                        </p>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ForgetPassword\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientInfo/PatientInfoPage.js",["206","207","208"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/kid.jpg'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PatientInfoPage() {\r\n    let [patients, setPatients] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('User')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter((patient) =>\r\n        patient.id.includes(localStorage.getItem('child'))\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ul>\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2 style={{ color: '#6F6F6F' }}>{patient.Name}</h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                            <img src={patient.Image} height=\"270\" />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_parents_data\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_gender_data\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_age_data\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_birthday_data\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_town_data\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_country_data\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_weight_data\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_height_data\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_blood_data\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                                onClick={() =>\r\n                                    localStorage.setItem(\r\n                                        'telegramUserName',\r\n                                        patient.TelegramUserName\r\n                                    )\r\n                                }\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to=\"/protocol-list\"\r\n                                onClick={() =>\r\n                                    localStorage.setItem('program', 'ok')\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default PatientInfoPage\r\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/TherapyResult.js",["209","210","211"],"import React from 'react'\nimport Header from '../Header/Header'\nimport './TherapyResult.css'\nimport Arrow from '../../assets/arrow.png'\nimport { Link, useHistory } from 'react-router-dom'\nimport PaginationRounded from './Pagination'\n\nconst TherapyResult = () => {\n    var history = useHistory()\n\n    return (\n        <>\n            <Header />\n            <div\n                className=\"patient_upper_flex_container\"\n                style={{ marginTop: '10px' }}\n            >\n                <h2 style={{ marginLeft: '100px' }}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link\n                        to=\"/patient\"\n                        className=\"patients_link\"\n                        style={{ color: '#6F6F6F' }}\n                    >\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link\n                        style={{ color: 'black' }}\n                        className=\"patients_link\"\n                        to=\"/protocol-list\"\n                    >\n                        Результати терапії\n                    </Link>\n                </h2>\n            </div>\n            <div className=\"container\">\n                <p class=\"choose-file-title\">\n                    Натисніть на файл, щоб завантажити його\n                </p>\n                <PaginationRounded />\n            </div>\n        </>\n    )\n}\n\nexport default TherapyResult\n","/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/Auth.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/Patient/Patient.jsx",["212","213"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nimport Logo from '../../assets/Logo.svg'\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('User')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    patients = patients.filter((protocol) =>\r\n        protocol.Name.includes(inputSearch)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"header\">\r\n                    <img\r\n                        src={Logo}\r\n                        onClick={() => signOut()}\r\n                        width=\"14.7%\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            left: '4%',\r\n                            marginTop: '1.1%',\r\n                            marginBottom: '-20px',\r\n                        }}\r\n                    />\r\n                    <input\r\n                        className=\"search\"\r\n                        onChange={(e) => setInputSearch(e.target.value)}\r\n                        placeholder=\"Пошук...\"\r\n                    />\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            position: 'relative',\r\n                            top: '8.2%',\r\n                            left: '3.33%',\r\n                            width: '93.2%',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n            <PatientItem patients={patients} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/ProtocolList.jsx",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg.jsx",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin.jsx",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Firebase/firebase.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/ProgramHeader.js",["214","215","216","217"],"import React, { useState, useEffect } from 'react'\nimport { HeaderSection } from './Header.styled'\nimport Logo from '../../assets/Logo.svg'\nimport './ProgramHeader.css'\n\nimport app from '../../Firebase/firebase'\n\nconst exportUsersToExcel = require('./exportService')\n\nconst users = [\n    {\n        id: 1,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 2,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 3,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 4,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 5,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 6,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 7,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 8,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 9,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n    {\n        id: 10,\n\n        stym: ['', '', '', '', '', '', '', '', ''],\n        instr1: '',\n        instr2: '',\n        instr3: '',\n        bool_field: 0,\n    },\n]\n\nusers[1].bool_field = 0\nconst workSheetColumnName = [\n    'Number',\n    'Text1',\n    'Text2',\n    'Text3',\n    'Stymul1',\n    'Stymul2',\n    'Stymul3',\n    'Stymul4',\n    'Stymul5',\n    'Stymul6',\n    'Stymul7',\n    'Stymul8',\n    'Stymul9',\n    'Instructions for first difficulty level ->',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'Instructions for second difficulty level ->',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'Instructions for third difficulty level ->',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    '',\n    'some boolean field',\n]\n\nconst workSheetName = 'Users'\nconst filePath = './outputFiles/Book1.xls'\n\nfunction signOut() {\n    localStorage.setItem('user', 'none')\n    app.auth().signOut()\n}\nfunction name() {}\nfunction ProgramHeader() {\n    let [protocols, setProtocols] = useState([])\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    let [stimulus, setStimulus] = useState('')\n    useEffect(() => {\n        const db = app.firestore()\n        let j = 0\n        JSON.parse(localStorage.getItem('protoID')).map((protoId) => {\n            users[j].stym1 = ''\n            console.log(protoId)\n\n            const unsubscribe = db\n                .collection('User')\n                .doc(localStorage.getItem('user'))\n                .collection('Patient')\n                .doc(localStorage.getItem('child'))\n                .collection('Protocols')\n                .doc(protoId)\n                .collection('Stimulus')\n                .onSnapshot((snapshot) => {\n                    if (snapshot.size) {\n                        let i = 0\n                        setStimulus(\n                            snapshot.docs.map((doc) => {\n                                users[j].stym[i] = doc.data().Name\n                                i++\n                            })\n                        )\n                        console.log(j)\n                    } else {\n                        console.log('Сука1')\n                    }\n                    j += 1\n                })\n\n            return () => {\n                unsubscribe()\n            }\n        })\n    }, [])\n\n    return (\n        <>\n            <HeaderSection>\n                <div style={{ display: 'flex' }}>\n                    <img\n                        src={Logo}\n                        onClick={() => signOut()}\n                        width=\"220\"\n                        style={{ marginLeft: '3.4rem', marginTop: '0.4rem' }}\n                    />\n                    <div style={{ marginTop: '40px', marginBottom: '15px' }}>\n                        <button\n                            className=\"save_button\"\n                            style={{ top: '1rem', cursor: 'pointer' }}\n                            onClick={() =>\n                                exportUsersToExcel(\n                                    users,\n                                    workSheetColumnName,\n                                    workSheetName,\n                                    filePath,\n                                    protocols\n                                )\n                            }\n                        >\n                            Зберегти\n                        </button>\n                    </div>\n                </div>\n                <hr\n                    style={{\n                        marginLeft: '4rem',\n                    }}\n                />\n            </HeaderSection>\n        </>\n    )\n}\n\nexport default ProgramHeader\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm1.js",["218","219"],"import React, { useState } from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport { withRouter, Redirect } from 'react-router'\nimport DataPicker from './DataPicker'\nimport app from '../../Firebase/firebase'\n\nfunction SignUpForm1() {\n    const [firstName, setFirstName] = useState('')\n    localStorage.setItem('Name', firstName)\n    console.log(firstName)\n    const [lastName, setLastName] = useState('')\n    localStorage.setItem('Surname', lastName)\n    console.log(lastName)\n    const [sex, setSex] = useState('')\n    localStorage.setItem('Gender', sex)\n    console.log(sex)\n    return (\n        <div>\n            <LoginNavigation />\n            <form className=\"form-itself\">\n                <p className=\"personal_text\">Особиста інформація</p>\n                <div className=\"input_text_name\">\n                    <input\n                        onChange={(event) => setFirstName(event.target.value)}\n                        type=\"text\"\n                        id=\"fname\"\n                        name=\"firstname\"\n                        placeholder=\"Ім'я\"\n                    />\n                </div>\n                <div className=\"input_text_name\">\n                    <input\n                        onChange={(event) => setLastName(event.target.value)}\n                        type=\"text\"\n                        id=\"lname\"\n                        name=\"lastname\"\n                        placeholder=\"Прізвище\"\n                    />\n                </div>\n                <div className=\"birthday_date\">\n                    Вкажіть вашу дату народження:\n                </div>\n                <div className=\"birthday_date_picker\">\n                    <DataPicker />\n                </div>\n                <p className=\"gender\">Стать</p>\n                <div className=\"gender_container\">\n                    <div className=\"group\">\n                        <input\n                            onClick={() => setSex('Чоловіча')}\n                            className=\"gender_checks\"\n                            type=\"checkbox\"\n                            id=\"xd\"\n                        />\n                        <label for=\"xd\">Чоловіча</label>\n                    </div>\n\n                    <div className=\"group\">\n                        <input\n                            onClick={() => setSex('Жіноча')}\n                            type=\"checkbox\"\n                            id=\"figma\"\n                            className=\"gender_checks\"\n                        />\n                        <label for=\"figma\">Жіноча</label>\n                    </div>\n\n                    <div className=\"group\">\n                        <input\n                            onClick={() => setSex('Інше')}\n                            type=\"checkbox\"\n                            id=\"sketch\"\n                            className=\"gender_checks\"\n                        />\n                        <label for=\"sketch\">Інше</label>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default withRouter(SignUpForm1)\n\n// function addFirstInputRegistr(firstName,lastName,sex) {\n//     const db = app.firestore();\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Name: firstName, Surname: lastName, Gender: sex})\n// }\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm2.js",["220","221","222"],"import React from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport Upload from '../../assets/Vector.svg'\nimport $ from 'jquery'\nimport { useState, useEffect } from 'react'\nimport app from '../../Firebase/firebase'\nimport './SignUpForm2.css'\n\nfunction SignUpForm2() {\n    const [selectedFile, setSelectedFile] = useState()\n    const [preview, setPreview] = useState()\n    useEffect(() => {\n        if (!selectedFile) {\n            setPreview(undefined)\n            return\n        }\n        if (selectedFile) {\n            setPreview(undefined)\n            $('#div1').remove()\n        }\n        const objectUrl = URL.createObjectURL(selectedFile)\n        setPreview(objectUrl)\n        return () => URL.revokeObjectURL(objectUrl)\n    }, [selectedFile])\n    const onSelectFile = (e) => {\n        if (!e.target.files || e.target.files.length === 0) {\n            setSelectedFile(undefined)\n            return\n        }\n        setSelectedFile(e.target.files[0])\n    }\n    // const imageInput = document.getElementById('image_input');\n\n    // const fileChosen = document.getElementById('file-chosen');\n    // if (imageInput == null) {\n    //     fileChosen.textContent = this.files[0].name\n    // }\n    // if (imageInput != null) {\n    //     imageInput.addEventListener('change', function () {\n\n    //         fileChosen.textContent = this.files[0].name\n    //     })\n    // }\n\n    const [country, setCountry] = useState('')\n    console.log(country)\n    localStorage.setItem('Country', country)\n    const [city, setCity] = useState('')\n    localStorage.setItem('City', city)\n    console.log(city)\n    return (\n        <div>\n            <LoginNavigation />\n\n            <form className=\"form-second-personal-data\">\n                <p className=\"personal_text\">Особиста інформація</p>\n\n                <div className=\"custom_image_input\">\n                    <label for=\"image_input\">\n                        <img\n                            src={Upload}\n                            height=\"25\"\n                            style={{\n                                cursor: 'pointer',\n                                marginLeft: '25px',\n                                marginRight: '15px',\n                                marginTop: '9px',\n                                color: '#EEEEEE',\n                            }}\n                        />\n                        <span className=\"download_image\" id=\"file-chosen\">\n                            Завантажити фото профілю\n                        </span>\n                        <hr />\n                    </label>\n                    <input\n                        type=\"file\"\n                        id=\"image_input\"\n                        onChange={onSelectFile}\n                    />\n                </div>\n                {selectedFile && <img src={preview} className=\"input_image\" />}\n                <div id=\"div1\" className=\"image_container_simulator\">\n                    Фото\n                </div>\n                <div className=\"input-city\">\n                    <input\n                        onChange={(event) => setCountry(event.target.value)}\n                        type=\"text\"\n                        id=\"fname\"\n                        name=\"firstname\"\n                        placeholder=\"Країна\"\n                    />\n                </div>\n                <div className=\"input-city\">\n                    <input\n                        onChange={(event) => setCity(event.target.value)}\n                        type=\"text\"\n                        id=\"fname\"\n                        name=\"firstname\"\n                        placeholder=\"Місто\"\n                    />\n                </div>\n            </form>\n        </div>\n    )\n}\nexport default SignUpForm2\n// function addSecondInputRegistr(photo, country, city) {\n//     const db = app.firestore();\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Photo: photo, Country: country, City: city})\n// }\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm3.js",["223"],"import React from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport app from '../../Firebase/firebase'\nimport './SignUpForm3.css'\nimport Select from 'react-select'\nimport { useState } from 'react'\n\nconst options = [\n    { value: 'therapist', label: 'терапевт' },\n    { value: 'ordinary doctor', label: 'звичайний лікар' },\n    { value: 'psychologist', label: 'психолог' },\n    { value: 'child psychologist', label: 'дитячий психолог' },\n]\n\nfunction SignUpForm3() {\n    const [profession, setProfession] = useState('')\n    console.log(profession)\n    localStorage.setItem('Profession', profession)\n    const [organization, setOrganization] = useState('')\n    localStorage.setItem('Organization', organization)\n    console.log(organization)\n    return (\n        <div>\n            <LoginNavigation />\n            <form className=\"third_form\">\n                <div className=\"work_text\">Робота</div>\n                <div className=\"choose_profession\">Оберіть вашу професію:</div>\n                <Select\n                    onChange={(event) => setProfession(event.value)}\n                    className=\"third_form_select\"\n                    defaultValue={options[2]}\n                    label=\"Single select\"\n                    options={options}\n                    theme={(theme) => ({\n                        ...theme,\n                        borderRadius: 0,\n                        colors: {\n                            ...theme.colors,\n                            primary25: 'whitesmoke',\n                            primary: '#48535F',\n                        },\n                    })}\n                />\n                <div className=\"input-work-second\">\n                    <input\n                        onChange={(event) =>\n                            setOrganization(event.target.value)\n                        }\n                        type=\"text\"\n                        id=\"organizationname\"\n                        name=\"organizationname\"\n                        placeholder=\"Назва організації\"\n                    />\n                </div>\n                <div></div>\n            </form>\n        </div>\n    )\n}\nexport default SignUpForm3\n// function addThirdInputRegistr(profession,organization) {\n//     const db = app.firestore();\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Profession: profession, Organization: organization})\n// }\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/SignUpForm4.js",["224"],"import React, { useCallback, useState } from 'react'\nimport './SignUpForm1.css'\nimport LoginNavigation from './Navigation/LoginNavigation'\nimport 'fontsource-dm-sans'\nimport './SignUpForm4.css'\nimport { withRouter } from 'react-router'\nimport app from '../../Firebase/firebase'\n\nfunction SignUpForm4({ history }) {\n    const handleSignUp = useCallback(\n        async (event) => {\n            event.preventDefault()\n            const {\n                email,\n                password,\n                passwordCheck,\n                phone,\n            } = event.target.elements\n            try {\n                if (password.value === passwordCheck.value) {\n                    await app\n                        .auth()\n                        .createUserWithEmailAndPassword(\n                            email.value,\n                            password.value\n                        )\n\n                    await app.auth().currentUser.sendEmailVerification()\n\n                    addInputRegistr()\n                    history.push('/')\n                } else {\n                    alert('Будь ласка, перевірте ваш пароль')\n                }\n            } catch (error) {\n                alert(error)\n            }\n        },\n        [history]\n    )\n    const [phone, setPhoneNumber] = useState('')\n    console.log(phone)\n    localStorage.setItem('PhoneNumber', phone)\n\n    const [email, setEmail] = useState('')\n    localStorage.setItem('userEmail', email)\n    console.log(email)\n    return (\n        <div>\n            <LoginNavigation />\n            <form className=\"forth_form\" onSubmit={handleSignUp}>\n                <div className=\"contact_text\">Контакти</div>\n                <input\n                    onChange={(event) => setEmail(event.target.value)}\n                    className=\"inputE\"\n                    type=\"text\"\n                    id=\"fname\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                />\n                <input\n                    className=\"inputP\"\n                    type=\"text\"\n                    id=\"lname\"\n                    name=\"password\"\n                    placeholder=\"Пароль\"\n                />\n                <input\n                    className=\"inputCp\"\n                    type=\"text\"\n                    id=\"lname\"\n                    name=\"passwordCheck\"\n                    placeholder=\"Підтвердження паролю\"\n                />\n                <input\n                    onChange={(event) => setPhoneNumber(event.target.value)}\n                    className=\"inputPh\"\n                    type=\"text\"\n                    id=\"lname\"\n                    name=\"phone\"\n                    placeholder=\"Номер телефону\"\n                />\n                <input\n                    style={{ marginTop: '50px' }}\n                    className=\"forth_form_submit\"\n                    type=\"submit\"\n                    value=\"Зареєструватись\"\n                />\n            </form>\n        </div>\n    )\n}\nexport default withRouter(SignUpForm4)\nfunction addInputRegistr() {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('userEmail'))\n        .set({\n            Name: localStorage.getItem('Name'),\n            Surname: localStorage.getItem('Surname'),\n            Birthday: localStorage.getItem('Birthday'),\n            Gender: localStorage.getItem('Gender'),\n            Country: localStorage.getItem('Country'),\n            City: localStorage.getItem('City'),\n            Profession: localStorage.getItem('Profession'),\n            Organization: localStorage.getItem('Organization'),\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\n        })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/Header.js",["225","226","227"],"import React, { useState } from 'react'\r\nimport './ProgramHeader.css'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport app from '../../Firebase/firebase'\r\nfunction signOut() {\r\n    localStorage.setItem('user', '@gmail')\r\n    app.auth().signOut()\r\n}\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => signOut()}\r\n                    width=\"14.7%\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: '-20px',\r\n                    }}\r\n                />\r\n                <input\r\n                    className=\"search\"\r\n                    onChange={console.log('qqq')}\r\n                    placeholder=\"Пошук...\"\r\n                />\r\n                <h1\r\n                    style={{\r\n                        border: 'none',\r\n                        borderBottom: ' 1px solid #6F6F6F',\r\n                        position: 'relative',\r\n                        top: '8.2%',\r\n                        left: '3.33%',\r\n                        width: '93.2%',\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/Pagination.js",["228","229","230"],"import React, { useState, useEffect } from 'react'\nimport Pagination from '@material-ui/lab/Pagination'\nimport { List, makeStyles, Divider, Box } from '@material-ui/core'\nimport app from '../../Firebase/firebase'\nimport File from './File'\nimport './Pagination.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(4),\n        },\n    },\n    items: {\n        padding: theme.spacing(2),\n    },\n}))\n\nconst PaginationRounded = () => {\n    const classes = useStyles()\n    const [files, setFiles] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1)\n    const [filesPerPage] = useState(4)\n\n    console.log('')\n    var storageRef = app.storage().ref()\n    var patientResultRef = storageRef.child(\n        'patient_result/' + localStorage.getItem('telegramUserName')\n    )\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true)\n            patientResultRef.listAll().then(function (result) {\n                setFiles(\n                    result.items.map((url) => {\n                        return url\n                            .toString()\n                            .replace(\n                                'gs://ionkid-abd2f.appspot.com/patient_result/' +\n                                    localStorage.getItem('telegramUserName') +\n                                    '/',\n                                ''\n                            )\n                    })\n                )\n            })\n            setLoading(false)\n        }\n        fetchData()\n    }, []) // [files, setFiles]\n\n    const handleChange = (event, value) => {\n        setPage(value)\n    }\n\n    console.log('sho?   \\n' + files.length)\n    return (\n        <>\n            <div\n                className=\"table-wrapper\"\n                style={{ position: 'relative', bottom: '5rem' }}\n            >\n                {files\n                    .slice((page - 1) * filesPerPage, page * filesPerPage)\n                    .map((file) => {\n                        return <File file={file} loading={loading} />\n                    })}\n                {/* 'Divider' protrudes to the left || Need to fix or delete */}\n                {/* <Divider /> */}\n            </div>\n            <Box component=\"span\" className=\"pagination-box\">\n                <Pagination\n                    count={Math.ceil(files.length / filesPerPage)}\n                    page={page}\n                    onChange={handleChange}\n                    defaultPage={1}\n                    color=\"primary\"\n                    size=\"large\"\n                    variant=\"outlined\"\n                    shape=\"rounded\"\n                    showFirstButton\n                    showLastButton\n                    classes={{ ul: classes.paginator }}\n                />\n            </Box>\n        </>\n    )\n}\n\nexport default PaginationRounded\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/StimulusItem.jsx",["231"],"import Delete from '../../../assets/delete.png'\nimport app from '../../../Firebase/firebase'\nfunction StimulusItem({ name, stimulId }) {\n    return (\n        <>\n            <li>\n                <div className=\"stymul_grid_container\">\n                    <div>{name}</div>\n                    <img\n                        onClick={() => DeleteStimul(stimulId)}\n                        src={Delete}\n                        height=\"15\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '60px',\n                            marginRight: '30px',\n                            marginTop: '5px',\n                            color: '#EEEEEE',\n                            height: '13px',\n                        }}\n                    />\n                </div>\n            </li>\n        </>\n    )\n}\nexport default StimulusItem\nfunction DeleteStimul(stimulId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Stimulus')\n        .doc(stimulId)\n        .delete()\n    setTimeout(() => {\n        window.location.reload()\n    }, 300)\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ArrowHeader.jsx",["232","233"],"import { Link } from 'react-router-dom'\nimport Arrow from '../../../assets/arrow.png'\nimport '../Program.css'\nfunction ArrowHeader() {\n    return (\n        <>\n            <div\n                className=\"patient_upper_flex_container\"\n                style={{ marginTop: '10px' }}\n            >\n                <h2 style={{ marginLeft: '100px' }}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link\n                        to=\"/patient\"\n                        className=\"patients_link\"\n                        style={{ color: '#6F6F6F' }}\n                    >\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link\n                        style={{ color: 'black' }}\n                        className=\"patients_link\"\n                        to=\"/protocol-list\"\n                    >\n                        Програма\n                    </Link>\n                </h2>\n            </div>\n        </>\n    )\n}\nexport default ArrowHeader\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step1.jsx",["234","235","236","237"],"import React, { useEffect, useState } from 'react'\nimport app from '../../../../Firebase/firebase'\nimport InstructionItem from '../../ProgramElement/Instruction/InstructionItem'\nimport { TextInput } from 'react-native-paper'\nfunction Step1({ Instructions1 }) {\n    let [instructionInput, setInstructionInput] = useState('')\n    // let [instructions, setInstructions] = useState([]);\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"Instructions\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n\n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\")\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n    return (\n        <>\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n                <TextInput\n                    className=\"element_value\"\n                    multiline=\"true\"\n                    underlineColor=\"transparent\"\n                    selectionColor=\"primary\"\n                    placeholder={Instructions1}\n                    onChange={(event) => addInstruction(event.target.value)}\n                    style={{ fontSize: '20px' }}\n                    raised\n                    theme={{ colors: { background: '#fcfcfc' } }}\n                />\n            </div>\n        </>\n    )\n}\nexport default Step1\nfunction addInstruction(instructionInput) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .set({ Instructions1: instructionInput })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step2.jsx",["238","239","240","241"],"import React, { useEffect, useState } from 'react'\nimport app from '../../../../Firebase/firebase'\nimport InstructionItem2 from '../../ProgramElement/Instruction/InstructionItem2'\nimport { TextInput } from 'react-native-paper'\nfunction Step2({ Instructions2 }) {\n    let [instructionInput, setInstructionInput] = useState('')\n    // let [instructions, setInstructions] = useState([]);\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"InstructionsDificult2\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n\n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\")\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n    return (\n        <>\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n                {/* {instructions.map((instruction) => ( */}\n                {/* <InstructionItem text={Instructions1}  */}\n                {/* // instructionId={instruction.id}\n                     /> */}\n                {/* ))} */}\n\n                <TextInput\n                    className=\"element_value\"\n                    multiline=\"true\"\n                    underlineColor=\"transparent\"\n                    selectionColor=\"primary\"\n                    placeholder={Instructions2}\n                    onChange={(event) => addInstruction(event.target.value)}\n                    style={{ fontSize: '20px' }}\n                    raised\n                    theme={{ colors: { background: '#fcfcfc' } }}\n                />\n\n                {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <button onClick={() => addInstruction(instructionInput)} className=\"add_button\">                                                <h1 style={{ marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\", width: \"22px\", height: \"20px\", color: \"#4d4d4d\", fontSize: \"20px\" }}>+</h1></button>\n                        <div className=\"transparent_input\">\n                            <input type=\"text\" onChange={(event) => setInstructionInput(event.target.value)} type=\"text\" name=\"name\" placeholder=\"Додати інструкцію....\" />\n                        </div>\n                    </div> */}\n            </div>\n        </>\n    )\n}\nexport default Step2\nfunction addInstruction(instructionInput) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .set({ Instructions2: instructionInput })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/ProgramStep/Step3.jsx",["242","243","244","245"],"import React, { useEffect, useState } from 'react'\nimport app from '../../../../Firebase/firebase'\nimport InstructionItem3 from '../../ProgramElement/Instruction/InstructionItem3'\nimport { TextInput } from 'react-native-paper'\nfunction Step3({ Instructions3 }) {\n    let [instructionInput, setInstructionInput] = useState('')\n    // let [instructions, setInstructions] = useState([]);\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"InstructionsDificult3\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n\n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\")\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n    return (\n        <>\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n                {/* {instructions.map((instruction) => ( */}\n                {/* <InstructionItem text={Instructions1}  */}\n                {/* // instructionId={instruction.id}\n                     /> */}\n                {/* ))} */}\n\n                <TextInput\n                    className=\"element_value\"\n                    multiline=\"true\"\n                    underlineColor=\"transparent\"\n                    selectionColor=\"primary\"\n                    placeholder={Instructions3}\n                    onChange={(event) => addInstruction(event.target.value)}\n                    style={{ fontSize: '20px' }}\n                    raised\n                    theme={{ colors: { background: '#fcfcfc' } }}\n                />\n\n                {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <button onClick={() => addInstruction(instructionInput)} className=\"add_button\">                                                <h1 style={{ marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\", width: \"22px\", height: \"20px\", color: \"#4d4d4d\", fontSize: \"20px\" }}>+</h1></button>\n                        <div className=\"transparent_input\">\n                            <input type=\"text\" onChange={(event) => setInstructionInput(event.target.value)} type=\"text\" name=\"name\" placeholder=\"Додати інструкцію....\" />\n                        </div>\n                    </div> */}\n            </div>\n        </>\n    )\n}\nexport default Step3\nfunction addInstruction(instructionInput) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .set({ Instructions3: instructionInput })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/CriteriongenGenerSkillElement/CriteriongenGenerSkill.jsx",["246"],"import Delete from '../../../../assets/delete.png'\nimport CriteriongenGenerSkillItem from './CriteriongenGenerSkillItem'\nimport React, { useEffect, useState } from 'react'\nimport app from '../../../../Firebase/firebase'\nimport '../../Program.css'\n\nfunction CriteriongenGenerSkill() {\n    let [criteriongenGenerSkills, setCriteriongenGenerSkills] = useState([])\n    let [\n        criteriongenGenerSkillInput,\n        setCriteriongenGenerSkillInput,\n    ] = useState('')\n\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .doc(localStorage.getItem('program'))\n            .collection('CriteriongenGenerSkill')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setCriteriongenGenerSkills(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука ')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n\n    return (\n        <>\n            <div\n                style={{ backgroundColor: '#EEEEEE' }}\n                className=\"element_name\"\n            >\n                Критерій узагальнення навику:{' '}\n            </div>\n            <div\n                style={{ backgroundColor: '#EEEEEE' }}\n                className=\"element_value\"\n            >\n                <div style={{ backgroundColor: '#EEEEEE' }}>\n                    <ol\n                        style={{\n                            fontFamily: 'Inter',\n                            marginLeft: '-0.9rem',\n                            fontStyle: 'normal',\n                            fontWeight: 'normal',\n                            fontSize: '20px',\n                            lineHeight: '29px',\n                            marginTop: '10px',\n                        }}\n                    >\n                        {criteriongenGenerSkills.map(\n                            (criteriongenGenerSkill) => (\n                                <CriteriongenGenerSkillItem\n                                    text={criteriongenGenerSkill.Text}\n                                    criteriongenGenerSkillId={\n                                        criteriongenGenerSkill.id\n                                    }\n                                />\n                            )\n                        )}\n                    </ol>\n\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            marginLeft: '30px',\n                        }}\n                    >\n                        <button\n                            onClick={() =>\n                                addCriteriongenGenerSkill(\n                                    criteriongenGenerSkillInput\n                                )\n                            }\n                            className=\"add_button\"\n                        >\n                            <h1\n                                style={{\n                                    marginTop: '5px',\n                                    marginBottom: '5px',\n                                    textAlign: 'center',\n                                    width: '22px',\n                                    height: '20px',\n                                    color: '#4d4d4d',\n                                    fontSize: '20px',\n                                }}\n                            >\n                                +\n                            </h1>\n                        </button>\n                        <div className=\"transparent_input\">\n                            <input\n                                type=\"text\"\n                                onChange={(event) =>\n                                    setCriteriongenGenerSkillInput(\n                                        event.target.value\n                                    )\n                                }\n                                name=\"name\"\n                                placeholder=\"Додати критерій....\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default CriteriongenGenerSkill\n\nfunction addCriteriongenGenerSkill(criteriongenGenerSkillInput) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('CriteriongenGenerSkill')\n        .add({ Text: criteriongenGenerSkillInput })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientItem/PatientItem.js",["247","248","249","250","251"],"import app from '../../Firebase/firebase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Item, Name, ButtonItem, Amount, Patient } from './PatientItem.styled'\r\nimport { Link } from 'react-router-dom'\r\nimport kid from '../../assets/boy.png'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nfunction PatientItem({ patients }) {\r\n    console.log(patients)\r\n    return (\r\n        <div className=\"all_inter\">\r\n            <Patient\r\n                className=\"patient_inter\"\r\n                style={{\r\n                    marginLeft: '105px',\r\n                    marginTop: '45px',\r\n                    fontSize: '24px',\r\n                }}\r\n            >\r\n                Пацієнти\r\n            </Patient>\r\n            <Amount>Кількість: {patients.length}</Amount>\r\n\r\n            {patients.map((patient) => (\r\n                <Item>\r\n                    <img\r\n                        src={patient.Image}\r\n                        width=\"250\"\r\n                        style={{ marginLeft: '0.8rem', marginTop: '0.9rem' }}\r\n                    />\r\n\r\n                    <Name>{patient.Name}</Name>\r\n                    <ButtonItem\r\n                        onClick={() =>\r\n                            localStorage.setItem('child', patient.id)\r\n                        }\r\n                    >\r\n                        <Link to=\"/patient\" className=\"viewmore_patient\">\r\n                            Переглянути\r\n                        </Link>\r\n                    </ButtonItem>\r\n                </Item>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem\r\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/PageComponent/ProtocolItem.jsx",["252","253","254","255","256","257","258","259"],"import Duplicate from '../../../assets/duplicate_task.svg'\nimport Visible from '../../../assets/visible.svg'\nimport UnVisible from '../../../assets/unVisible.svg'\nimport Delete from '../../../assets/delete.svg'\nimport { useState, useEffect } from 'react'\nimport app from '../../../Firebase/firebase'\nimport { Link } from 'react-router-dom'\nimport EditIcon from '@material-ui/icons/Edit'\n\nfunction ProtocolItem({\n    protocolId,\n    protocolName,\n    sphereOfDevelopment,\n    skill,\n    length,\n    statusCopied,\n    isActive,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription,\n}) {\n    let [colorItem, setColorItem] = useState('')\n    if (+protocolName % 2 != true) {\n        colorItem = '#EEEEEE'\n    }\n\n    return (\n        <>\n            <div\n                className=\"protocol_item\"\n                style={{ backgroundColor: colorItem, marginLeft: '5rem' }}\n            >\n                <p className=\"protocol_item_text \">\n                    Протокол {protocolName} {statusCopied}.{' '}\n                    {sphereOfDevelopment}. {skill}\n                </p>\n                <div className=\"icon_place\">\n                    <Link\n                        onClick={() =>\n                            localStorage.setItem('program', protocolId)\n                        }\n                        to=\"/program\"\n                    >\n                        <EditIcon style={{ color: 'black' }} />\n                    </Link>\n\n                    <img\n                        className=\"icon\"\n                        onClick={() =>\n                            CreateDuplicateProtocol(\n                                protocolId,\n                                +length + 1,\n                                sphereOfDevelopment,\n                                skill,\n                                protocolName,\n                                interval,\n                                correctionProcedureStep1,\n                                correctionProcedureStep2,\n                                correctionProcedureStep3,\n                                criterionIncrease,\n                                desirableReaction,\n                                method,\n                                methodTakingHint,\n                                reductionСriterion,\n                                stepDescription\n                            )\n                        }\n                        src={Duplicate}\n                    />\n                    <CheckIsActive\n                        isActive={isActive}\n                        protocolId={protocolId}\n                    />\n\n                    <img\n                        className=\"icon\"\n                        onClick={() => DeleteProtocol(protocolId)}\n                        src={Delete}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\nexport default ProtocolItem\n\nfunction CreateDuplicateProtocol(\n    protocolId,\n    id,\n    sphereOfDevelopment,\n    skill,\n    copiId,\n    interval,\n    correctionProcedureStep1,\n    correctionProcedureStep2,\n    correctionProcedureStep3,\n    criterionIncrease,\n    desirableReaction,\n    method,\n    methodTakingHint,\n    reductionСriterion,\n    stepDescription\n) {\n    localStorage.setItem('program', protocolId)\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc()\n        .set({\n            SphereOfDevelopment: sphereOfDevelopment,\n            ProtocolId: id,\n            Skill: skill,\n            StatusCopied: '(Копія Протокол ' + copiId + ')',\n            IsActive: '0',\n            Interval: interval,\n            CorrectionProcedureStep1: correctionProcedureStep1,\n            CorrectionProcedureStep2: correctionProcedureStep2,\n            CorrectionProcedureStep3: correctionProcedureStep3,\n            CriterionIncrease: criterionIncrease,\n            DesirableReaction: desirableReaction,\n            Method: method,\n            MethodTakingHint: methodTakingHint,\n            ReductionСriterion: reductionСriterion,\n            StepDescription: stepDescription,\n        })\n\n    // console.log(data.key)\n}\nfunction DeleteProtocol(protocolId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .delete()\n}\nfunction CheckIsActive({ isActive, protocolId }) {\n    console.log(isActive)\n    if (isActive == true) {\n        return (\n            <img\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\n                className=\"icon\"\n                src={Visible}\n            />\n        )\n    } else {\n        return (\n            <img\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\n                className=\"icon\"\n                src={UnVisible}\n            />\n        )\n    }\n}\nfunction UpdateActiveStatus(protocolId, valueStatus) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(protocolId)\n        .update({ IsActive: valueStatus })\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/ProtocolList/PageComponent/ArrowHeader.jsx",["260","261","262"],"import { Link } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\nimport Arrow from '../../../assets/arrow.png'\nimport Delete from '../../../assets/delete.svg'\nimport app from '../../../Firebase/firebase'\nfunction ArrowHeader() {\n    const [protocols, setProtocols] = useState([])\n    useEffect(() => {\n        const db = app.firestore()\n        const unsubscribe = db\n            .collection('User')\n            .doc(localStorage.getItem('user'))\n            .collection('Patient')\n            .doc(localStorage.getItem('child'))\n            .collection('Protocols')\n            .onSnapshot((snapshot) => {\n                if (snapshot.size) {\n                    setProtocols(\n                        snapshot.docs.map((doc) => ({\n                            ...doc.data(),\n                            id: doc.id,\n                        }))\n                    )\n                    console.log('Сука')\n                } else {\n                    console.log('Сука1')\n                }\n            })\n        return () => {\n            unsubscribe()\n        }\n    }, [])\n    return (\n        <>\n            <div className=\"patient_upper_flex_container\">\n                <h2 style={{ marginLeft: '6rem' }}>\n                    <Link to=\"/\" className=\"patients_link\">\n                        Пацієнти\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>\n                    <Link\n                        to=\"/patient\"\n                        className=\"patients_link\"\n                        style={{ color: '#6F6F6F' }}\n                    >\n                        {localStorage.getItem('childName')}\n                    </Link>\n                </h2>\n                <img\n                    src={Arrow}\n                    height=\"20\"\n                    style={{\n                        marginLeft: '30px',\n                        marginRight: '30px',\n                        marginTop: '28px',\n                        color: 'black',\n                    }}\n                />\n                <h2>Програма</h2>\n                <div\n                    onClick={() => addProto(protocols.length)}\n                    className=\"add-proto\"\n                >\n                    <img className=\"add-foto\" src={Delete}></img>\n                </div>\n            </div>\n        </>\n    )\n}\nfunction addProto(length) {\n    const db = app.firestore()\n\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .add({ ProtocolId: +length + 1 })\n\n    // console.log(data.key)\n}\nexport default ArrowHeader\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/Header.styled.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/Header/exportService.js",["263"],"const xlsx = require('xlsx')\nconst path = require('path')\n\nconst exportExcel = (data, workSheetColumnNames, workSheetName, filePath) => {\n    const workBook = xlsx.utils.book_new()\n    const workSheetData = [workSheetColumnNames, ...data]\n    const workSheet = xlsx.utils.aoa_to_sheet(workSheetData)\n    xlsx.utils.book_append_sheet(workBook, workSheet, workSheetName)\n    xlsx.writeFile(workBook, path.resolve(filePath))\n}\n\nconst exportUsersToExcel = (\n    users,\n    workSheetColumnNames,\n    workSheetName,\n    filePath,\n    protocols\n) => {\n    for (let i = 0; i < protocols.length; i += 1) {\n        users[i].text1 =\n            protocols[i].SphereOfDevelopment + '.' + protocols[i].Skill\n        users[i].instr1 = protocols[i].Instructions1\n        users[i].instr2 = protocols[i].Instructions2\n        users[i].instr3 = protocols[i].Instructions3\n        if (protocols[i].IsActive == true) {\n            users[i].bool_field = '1'\n        } else {\n            users[i].bool_field = '0'\n        }\n        console.log(protocols[i])\n    }\n\n    const data = users.map((user) => {\n        return [\n            user.id,\n            user.text1,\n            user.text2,\n            user.text3,\n            user.stym[0],\n            user.stym[1],\n            user.stym[2],\n            user.stym[3],\n            user.stym[4],\n            user.stym[5],\n            user.stym[6],\n            user.stym[7],\n            user.stym[8],\n            user.instr1,\n            user.k,\n            user.l,\n            user.m,\n            user.n,\n            user.o,\n            user.p,\n            user.q,\n            user.r,\n            user.s,\n            user.instr2,\n            user.u,\n            user.v,\n            user.w,\n            user.x,\n            user.y,\n            user.z,\n            user.aa,\n            user.ab,\n            user.ac,\n            user.instr3,\n            user.ae,\n            user.af,\n            user.ag,\n            user.ah,\n            user.ai,\n            user.aj,\n            user.ak,\n            user.al,\n            user.am,\n            user.bool_field,\n        ]\n    })\n    exportExcel(data, workSheetColumnNames, workSheetName, filePath)\n}\n\nmodule.exports = exportUsersToExcel\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/DataPicker.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/TherapyResult/File.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/Login/Navigation/LoginNavigation.jsx",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/PatientItem/PatientItem.styled.js",[],"/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/CriteriongenGenerSkillElement/CriteriongenGenerSkillItem.jsx",["264"],"import Delete from '../../../../assets/delete.png'\n\nimport React from 'react'\nimport app from '../../../../Firebase/firebase'\nfunction CriteriongenGenerSkillItem({ text, criteriongenGenerSkillId }) {\n    return (\n        <>\n            <li>\n                <div className=\"step_grid_container\">\n                    <div>{text}</div>\n                    <img\n                        onClick={() =>\n                            DeleteCriteriongenGenerSkill(\n                                criteriongenGenerSkillId\n                            )\n                        }\n                        src={Delete}\n                        height=\"15\"\n                        style={{\n                            marginLeft: '30px',\n                            marginRight: '30px',\n                            marginTop: '9px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </>\n    )\n}\nexport default CriteriongenGenerSkillItem\nfunction DeleteCriteriongenGenerSkill(criteriongenGenerSkillId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('CriteriongenGenerSkill')\n        .doc(criteriongenGenerSkillId)\n        .delete()\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem.jsx",["265"],"import Delete from '../../../../assets/delete.png'\nimport app from '../../../../Firebase/firebase'\n\nfunction InstructionItem({ text, instructionId }) {\n    return (\n        <>\n            <li>\n                <div className=\"step_grid_container\">\n                    <input placeholder={text}></input>\n                    <img\n                        onClick={() => DeleteInstruction(instructionId)}\n                        src={Delete}\n                        height=\"15\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '30px',\n                            marginRight: '30px',\n                            marginTop: '9px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </>\n    )\n}\nexport default InstructionItem\nfunction DeleteInstruction(instuctionId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('Instructions')\n        .doc(instuctionId)\n        .delete()\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem3.jsx",["266"],"import Delete from '../../../../assets/delete.png'\nimport app from '../../../../Firebase/firebase'\n\nfunction InstructionItem3({ text, instructionId }) {\n    return (\n        <>\n            <li>\n                <div className=\"step_grid_container\">\n                    <input placeholder={text}></input>\n                    <img\n                        onClick={() => DeleteInstruction(instructionId)}\n                        src={Delete}\n                        height=\"15\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '30px',\n                            marginRight: '30px',\n                            marginTop: '9px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </>\n    )\n}\nexport default InstructionItem3\nfunction DeleteInstruction(instuctionId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('InstructionsDificult3')\n        .doc(instuctionId)\n        .delete()\n}\n","/home/kaizen/github/PROMETHEUS_web_project/src/Components/Program/ProgramElement/Instruction/InstructionItem2.jsx",["267"],"import Delete from '../../../../assets/delete.png'\nimport app from '../../../../Firebase/firebase'\n\nfunction InstructionItem2({ text, instructionId }) {\n    return (\n        <>\n            <li>\n                <div className=\"step_grid_container\">\n                    <input placeholder={text}></input>\n                    <img\n                        onClick={() => DeleteInstruction(instructionId)}\n                        src={Delete}\n                        height=\"15\"\n                        style={{\n                            cursor: 'pointer',\n                            marginLeft: '30px',\n                            marginRight: '30px',\n                            marginTop: '9px',\n                            color: '#EEEEEE',\n                        }}\n                    />\n                </div>\n            </li>\n        </>\n    )\n}\nexport default InstructionItem2\nfunction DeleteInstruction(instuctionId) {\n    const db = app.firestore()\n    db.collection('User')\n        .doc(localStorage.getItem('user'))\n        .collection('Patient')\n        .doc(localStorage.getItem('child'))\n        .collection('Protocols')\n        .doc(localStorage.getItem('program'))\n        .collection('InstructionsDificult2')\n        .doc(instuctionId)\n        .delete()\n}\n",{"ruleId":"268","severity":1,"message":"269","line":52,"column":29,"nodeType":"270","endLine":52,"endColumn":34},{"ruleId":"268","severity":1,"message":"269","line":54,"column":29,"nodeType":"270","endLine":54,"endColumn":62},{"ruleId":"268","severity":1,"message":"269","line":56,"column":29,"nodeType":"270","endLine":56,"endColumn":54},{"ruleId":"271","severity":1,"message":"272","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":13},{"ruleId":"271","severity":1,"message":"275","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":13},{"ruleId":"271","severity":1,"message":"276","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":13},{"ruleId":"271","severity":1,"message":"277","line":42,"column":9,"nodeType":"273","messageId":"274","endLine":42,"endColumn":13},{"ruleId":"271","severity":1,"message":"278","line":7,"column":43,"nodeType":"273","messageId":"274","endLine":7,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":19,"column":47,"nodeType":"281","messageId":"282","endLine":19,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":28,"column":9,"nodeType":"285","endLine":28,"endColumn":18,"suggestions":"286"},{"ruleId":"279","severity":1,"message":"280","line":30,"column":50,"nodeType":"281","messageId":"282","endLine":30,"endColumn":52},{"ruleId":"271","severity":1,"message":"287","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":28},{"ruleId":"271","severity":1,"message":"288","line":1,"column":30,"nodeType":"273","messageId":"274","endLine":1,"endColumn":40},{"ruleId":"271","severity":1,"message":"289","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":20},{"ruleId":"271","severity":1,"message":"290","line":3,"column":22,"nodeType":"273","messageId":"274","endLine":3,"endColumn":30},{"ruleId":"271","severity":1,"message":"291","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"292","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":11},{"ruleId":"293","severity":1,"message":"294","line":45,"column":29,"nodeType":"295","endLine":54,"endColumn":31},{"ruleId":"293","severity":1,"message":"294","line":58,"column":29,"nodeType":"295","endLine":58,"endColumn":69},{"ruleId":"271","severity":1,"message":"296","line":9,"column":9,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":23,"column":17,"nodeType":"295","endLine":32,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":42,"column":17,"nodeType":"295","endLine":51,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":36,"column":21,"nodeType":"295","endLine":46,"endColumn":23},{"ruleId":"297","severity":1,"message":"298","line":52,"column":21,"nodeType":"295","endLine":61,"endColumn":23},{"ruleId":"271","severity":1,"message":"299","line":158,"column":10,"nodeType":"273","messageId":"274","endLine":158,"endColumn":14},{"ruleId":"271","severity":1,"message":"300","line":188,"column":10,"nodeType":"273","messageId":"274","endLine":188,"endColumn":18},{"ruleId":"301","severity":1,"message":"302","line":208,"column":53,"nodeType":"303","messageId":"304","endLine":208,"endColumn":55},{"ruleId":"293","severity":1,"message":"294","line":230,"column":21,"nodeType":"295","endLine":235,"endColumn":23},{"ruleId":"271","severity":1,"message":"290","line":5,"column":22,"nodeType":"273","messageId":"274","endLine":5,"endColumn":30},{"ruleId":"271","severity":1,"message":"305","line":7,"column":8,"nodeType":"273","messageId":"274","endLine":7,"endColumn":11},{"ruleId":"271","severity":1,"message":"305","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":11},{"ruleId":"293","severity":1,"message":"294","line":62,"column":25,"nodeType":"295","endLine":72,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":84,"column":34,"nodeType":"295","endLine":84,"endColumn":79},{"ruleId":"271","severity":1,"message":"305","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":11},{"ruleId":"271","severity":1,"message":"306","line":17,"column":17,"nodeType":"273","messageId":"274","endLine":17,"endColumn":22},{"ruleId":"271","severity":1,"message":"307","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":13,"column":17,"nodeType":"295","endLine":23,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":29,"column":17,"nodeType":"295","endLine":38,"endColumn":19},{"ruleId":"271","severity":1,"message":"308","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"309","line":3,"column":28,"nodeType":"273","messageId":"274","endLine":3,"endColumn":35},{"ruleId":"283","severity":1,"message":"310","line":52,"column":8,"nodeType":"285","endLine":52,"endColumn":10,"suggestions":"311"},{"ruleId":"293","severity":1,"message":"294","line":9,"column":21,"nodeType":"295","endLine":21,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":16,"column":17,"nodeType":"295","endLine":25,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":35,"column":17,"nodeType":"295","endLine":44,"endColumn":19},{"ruleId":"271","severity":1,"message":"312","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":26},{"ruleId":"271","severity":1,"message":"313","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":23},{"ruleId":"271","severity":1,"message":"314","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26},{"ruleId":"271","severity":1,"message":"315","line":6,"column":28,"nodeType":"273","messageId":"274","endLine":6,"endColumn":47},{"ruleId":"271","severity":1,"message":"312","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":26},{"ruleId":"271","severity":1,"message":"316","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":24},{"ruleId":"271","severity":1,"message":"314","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26},{"ruleId":"271","severity":1,"message":"315","line":6,"column":28,"nodeType":"273","messageId":"274","endLine":6,"endColumn":47},{"ruleId":"271","severity":1,"message":"312","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":26},{"ruleId":"271","severity":1,"message":"317","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":24},{"ruleId":"271","severity":1,"message":"314","line":6,"column":10,"nodeType":"273","messageId":"274","endLine":6,"endColumn":26},{"ruleId":"271","severity":1,"message":"315","line":6,"column":28,"nodeType":"273","messageId":"274","endLine":6,"endColumn":47},{"ruleId":"271","severity":1,"message":"318","line":1,"column":8,"nodeType":"273","messageId":"274","endLine":1,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":1,"column":8,"nodeType":"273","messageId":"274","endLine":1,"endColumn":11},{"ruleId":"271","severity":1,"message":"312","line":2,"column":17,"nodeType":"273","messageId":"274","endLine":2,"endColumn":26},{"ruleId":"271","severity":1,"message":"307","line":2,"column":28,"nodeType":"273","messageId":"274","endLine":2,"endColumn":36},{"ruleId":"271","severity":1,"message":"319","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":11},{"ruleId":"293","severity":1,"message":"294","line":26,"column":21,"nodeType":"295","endLine":30,"endColumn":23},{"ruleId":"271","severity":1,"message":"312","line":5,"column":20,"nodeType":"273","messageId":"274","endLine":5,"endColumn":29},{"ruleId":"271","severity":1,"message":"320","line":29,"column":21,"nodeType":"273","messageId":"274","endLine":29,"endColumn":33},{"ruleId":"279","severity":1,"message":"321","line":30,"column":27,"nodeType":"281","messageId":"282","endLine":30,"endColumn":29},{"ruleId":"293","severity":1,"message":"294","line":54,"column":21,"nodeType":"295","endLine":76,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":82,"column":21,"nodeType":"295","endLine":86,"endColumn":23},{"ruleId":"279","severity":1,"message":"280","line":152,"column":18,"nodeType":"281","messageId":"282","endLine":152,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":154,"column":13,"nodeType":"295","endLine":158,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":162,"column":13,"nodeType":"295","endLine":166,"endColumn":15},{"ruleId":"293","severity":1,"message":"294","line":41,"column":17,"nodeType":"295","endLine":50,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":60,"column":17,"nodeType":"295","endLine":69,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":75,"column":21,"nodeType":"295","endLine":75,"endColumn":60},{"ruleId":"279","severity":1,"message":"280","line":25,"column":35,"nodeType":"281","messageId":"282","endLine":25,"endColumn":37},{"ruleId":"293","severity":1,"message":"294","line":11,"column":21,"nodeType":"295","endLine":25,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":10,"column":21,"nodeType":"295","endLine":21,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":10,"column":21,"nodeType":"295","endLine":21,"endColumn":23},{"ruleId":"293","severity":1,"message":"294","line":10,"column":21,"nodeType":"295","endLine":21,"endColumn":23},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'Step1' is defined but never used.","Identifier","unusedVar","'Step2' is defined but never used.","'Step3' is defined but never used.","'test' is assigned a value but never used.","'Route' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'currentUser.email' and 'currentUser.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["322"],"'useCallback' is defined but never used.","'useContext' is defined but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Kid' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'name' is defined but never used.","'stimulus' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'app' is defined but never used.","'phone' is assigned a value but never used.","'useState' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'patientResultRef'. Either include it or remove the dependency array.",["323"],"'useEffect' is defined but never used.","'InstructionItem' is defined but never used.","'instructionInput' is assigned a value but never used.","'setInstructionInput' is assigned a value but never used.","'InstructionItem2' is defined but never used.","'InstructionItem3' is defined but never used.","'Delete' is defined but never used.","'kid' is defined but never used.","'setColorItem' is assigned a value but never used.","Expected '!==' and instead saw '!='.",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, history]",{"range":"328","text":"329"},"Update the dependencies array to be: [patientResultRef]",{"range":"330","text":"331"},[1009,1018],"[currentUser.email, currentUser.emailVerified, history]",[1612,1614],"[patientResultRef]"]