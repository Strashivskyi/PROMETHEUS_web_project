[{"C:\\Users\\dosko\\ionkid\\src\\index.js":"1","C:\\Users\\dosko\\ionkid\\src\\App.js":"2","C:\\Users\\dosko\\ionkid\\src\\Components\\SignIn\\ForgetPassword.js":"3","C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\Auth.js":"4","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUp.js":"5","C:\\Users\\dosko\\ionkid\\src\\Components\\SignIn\\SignIn.js":"6","C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx":"7","C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx":"8","C:\\Users\\dosko\\ionkid\\src\\Components\\Patient\\Patient.jsx":"9","C:\\Users\\dosko\\ionkid\\src\\Firebase\\firebase.js":"10","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm2.js":"11","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm3.js":"12","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm4.js":"13","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm1.js":"14","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\Header.js":"15","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientItem\\PatientItem.js":"16","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx":"17","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientItem\\PatientItem.styled.js":"18","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolList.jsx":"19","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx":"20","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx":"21","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\ProgramHeader.js":"22","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx":"23","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx":"24","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step1.jsx":"25","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step2.jsx":"26","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step3.jsx":"27","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\DataPicker.js":"28","C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\TherapyResult.js":"29","C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\Pagination.js":"30","C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\File.js":"31","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\exportService.js":"32","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx":"33","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx":"34","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx":"35","C:\\Users\\dosko\\ionkid\\src\\Components\\RegistrationPatient\\RegPatientPage.js":"36","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\SimpleHeader.js":"37","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\UserRoleChoosing.js":"38","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramBranching.jsx":"39","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx":"40","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx":"41","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramEditable.jsx":"42","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramOnlyView.jsx":"43","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx":"44","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx":"45","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx":"46","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoUser.jsx":"47","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\MobileRegistration.js":"48","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\MobileHeader.js":"49","C:\\Users\\dosko\\ionkid\\src\\Components\\ModalWindow\\Popup.jsx":"50"},{"size":452,"mtime":1611657258018,"results":"51","hashOfConfig":"52"},{"size":3289,"mtime":1614282228204,"results":"53","hashOfConfig":"52"},{"size":2321,"mtime":1613768252319,"results":"54","hashOfConfig":"52"},{"size":755,"mtime":1611657258009,"results":"55","hashOfConfig":"52"},{"size":1978,"mtime":1614282279491,"results":"56","hashOfConfig":"52"},{"size":5536,"mtime":1614466493113,"results":"57","hashOfConfig":"52"},{"size":678,"mtime":1612439239652,"results":"58","hashOfConfig":"52"},{"size":619,"mtime":1611007838938,"results":"59","hashOfConfig":"52"},{"size":4572,"mtime":1614030566733,"results":"60","hashOfConfig":"52"},{"size":369,"mtime":1611657258012,"results":"61","hashOfConfig":"52"},{"size":3947,"mtime":1614466248878,"results":"62","hashOfConfig":"52"},{"size":2450,"mtime":1613515864000,"results":"63","hashOfConfig":"52"},{"size":4410,"mtime":1614466295284,"results":"64","hashOfConfig":"52"},{"size":3679,"mtime":1614466174533,"results":"65","hashOfConfig":"52"},{"size":1374,"mtime":1614030246294,"results":"66","hashOfConfig":"52"},{"size":1210,"mtime":1613768252288,"results":"67","hashOfConfig":"52"},{"size":1586,"mtime":1613771125408,"results":"68","hashOfConfig":"52"},{"size":948,"mtime":1613768252289,"results":"69","hashOfConfig":"52"},{"size":12109,"mtime":1614466737235,"results":"70","hashOfConfig":"52"},{"size":3354,"mtime":1614289383906,"results":"71","hashOfConfig":"52"},{"size":7132,"mtime":1614289430363,"results":"72","hashOfConfig":"52"},{"size":2113,"mtime":1614030281018,"results":"73","hashOfConfig":"52"},{"size":1839,"mtime":1613768252292,"results":"74","hashOfConfig":"52"},{"size":1349,"mtime":1614288611459,"results":"75","hashOfConfig":"52"},{"size":2323,"mtime":1613346493450,"results":"76","hashOfConfig":"52"},{"size":3265,"mtime":1613346412170,"results":"77","hashOfConfig":"52"},{"size":3278,"mtime":1613346414960,"results":"78","hashOfConfig":"52"},{"size":1104,"mtime":1613768252269,"results":"79","hashOfConfig":"52"},{"size":1924,"mtime":1614032521639,"results":"80","hashOfConfig":"52"},{"size":3019,"mtime":1613905264916,"results":"81","hashOfConfig":"52"},{"size":791,"mtime":1614032502471,"results":"82","hashOfConfig":"52"},{"size":1703,"mtime":1613380928472,"results":"83","hashOfConfig":"52"},{"size":2614,"mtime":1614289287288,"results":"84","hashOfConfig":"52"},{"size":1674,"mtime":1614289116525,"results":"85","hashOfConfig":"52"},{"size":2609,"mtime":1614289259281,"results":"86","hashOfConfig":"52"},{"size":17918,"mtime":1613866799398,"results":"87","hashOfConfig":"52"},{"size":1033,"mtime":1614029958532,"results":"88","hashOfConfig":"52"},{"size":2470,"mtime":1614465896061,"results":"89","hashOfConfig":"52"},{"size":302,"mtime":1614288687462,"results":"90","hashOfConfig":"52"},{"size":426,"mtime":1614289624082,"results":"91","hashOfConfig":"52"},{"size":5314,"mtime":1613866770862,"results":"92","hashOfConfig":"52"},{"size":42732,"mtime":1614288950641,"results":"93","hashOfConfig":"52"},{"size":23636,"mtime":1614289033236,"results":"94","hashOfConfig":"52"},{"size":2921,"mtime":1614466043343,"results":"95","hashOfConfig":"52"},{"size":374,"mtime":1614285189607,"results":"96","hashOfConfig":"52"},{"size":11680,"mtime":1614290535835,"results":"97","hashOfConfig":"52"},{"size":19384,"mtime":1614291354272,"results":"98","hashOfConfig":"52"},{"size":1153,"mtime":1614283591695,"results":"99","hashOfConfig":"52"},{"size":1107,"mtime":1614030109189,"results":"100","hashOfConfig":"52"},{"size":310,"mtime":1614464932476,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1f4ttgq",{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"171"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"171"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"171"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"104"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"104"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"104"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"104"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"104"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"104"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"104"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"104"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\dosko\\ionkid\\src\\index.js",[],["242","243"],"C:\\Users\\dosko\\ionkid\\src\\App.js",["244"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/SignIn/SignIn'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgetPassword from './Components/SignIn/ForgetPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport RenderProgram from './Components/Program/ProgramBranching'\r\nimport { AuthProvider } from './Firebase/AuthSetup/Auth'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoRender from './Components/PatientInfo/PatientInfoBranching'\r\nimport RenderProgramList from './Components/ProtocolList/ProtocolListBranching'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nimport RegistrationPatient from './Components/RegistrationPatient/RegPatientPage'\r\nimport ProgramTemplate from './Components/ProgramTemplate/ProgramTemplate'\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n        <HashRouter>\r\n            <AuthProvider>\r\n                \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgetPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={RenderProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={RenderProgramList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoRender}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={TherapyResult}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient_registration\"\r\n                            component={RegistrationPatient}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template\"\r\n                            component={ProgramTemplate}\r\n                        />\r\n                    </Switch>\r\n         \r\n            </AuthProvider>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\SignIn\\ForgetPassword.js",["245","246","247","248","249"],"import React, { useCallback, useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './ForgetPassword.css'\r\n\r\nfunction recover(Email, history) {\r\n    app.auth()\r\n        .sendPasswordResetEmail(Email)\r\n        .then(function (user) {\r\n            alert('Please check your email...')\r\n            history.push('/')\r\n        })\r\n        .catch(function (e) {\r\n            alert(e)\r\n        })\r\n}\r\n\r\nfunction ForgetPassword() {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    console.log(email)\r\n    return (\r\n        <>\r\n            <div className=\"image-form-division\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-up-text\"> Відновлення паролю</div>\r\n                    <form className=\"forget_form\">\r\n                        <div>\r\n                            **Якщо Ви забули свій пароль, будь ласка, введіть\r\n                            поточну електронну адресу і перевірте свою пошту.\r\n                            Вам має прийти лист з посиланням,за яким Ви повинні\r\n                            перейти і ввести новий пароль.\r\n                        </div>\r\n                        <input\r\n                            className=\"forget_text_input\"\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <p\r\n                            className=\"forget_submit\"\r\n                            onClick={() => recover(email, history)}\r\n                        >\r\n                            Відправити\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ForgetPassword\r\n","C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\Auth.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUp.js",["250","251"],"import SignUpForm1 from './SignUpForm1'\nimport SignUpForm2 from './SignUpForm2'\nimport UserRoleChoosing from './UserRoleChoosing'\nimport SignUpForm4 from './SignUpForm4'\nimport PrivateRouteToReg from '../../Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\nimport MobileHeader from '../Header/MobileHeader'\nimport MobileRegistration from './MobileRegistration'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { HashRouter} from 'react-router-dom'\nimport './Login1.css'\n\nfunction SignUp() {\n    return (\n        <>\n            <MobileHeader/>\n            <MobileRegistration/>\n            <div className=\"image-form-division-sign-up\">\n                <div className=\"image\" />\n                <div className=\"form\">\n                    <div className=\"sign-up-text\">Реєстрація</div>\n                    <HashRouter>\n                        <Switch>\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration\"\n                                component={UserRoleChoosing}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup2\"\n                                component={SignUpForm1}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup3\"\n                                component={SignUpForm2}\n                            />\n                            <PrivateRouteToReg\n                                exact\n                                path=\"/registration/signup4\"\n                                component={SignUpForm4}\n                            />\n                        </Switch>\n                        </HashRouter>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignUp\n","C:\\Users\\dosko\\ionkid\\src\\Components\\SignIn\\SignIn.js",["252","253","254","255","256","257","258"],"import React, { useCallback, useContext } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './SignIn.css'\r\nimport { AuthContext } from '../../Firebase/AuthSetup/Auth'\r\nimport { Link } from 'react-router-dom'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport Logo from '../../assets/Logo.svg';\r\nimport SignOut from '../../assets/SignOut.svg';\r\n\r\nfunction SignIn({ history }) {\r\n    const { currentUser } = useContext(AuthContext)\r\n    const handleLogin = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const { email, password } = event.target.elements\r\n\r\n            const db = app.firestore()\r\n            await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n\r\n                    snapshot.docs.map((doc) => {\r\n                        localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                    })\r\n                } else {\r\n                    console.log('Немає професії')\r\n                }\r\n            })\r\n            // .collection('Patient')\r\n            // .doc(localStorage.getItem('child'))\r\n            // .collection('Protocols')\r\n            // .doc(localStorage.getItem('program'))\r\n            // .collection('Stimulus')\r\n            // .onSnapshot((snapshot) => {\r\n            //     if (snapshot.size) {\r\n            //         setStimulus(\r\n            //             snapshot.docs.map((doc) => ({\r\n            //                 ...doc.data(),\r\n            //                 id: doc.id,\r\n            //             }))\r\n            //         )\r\n            //         console.log('Сука ')\r\n            //     } else {\r\n            //         console.log('Сука1')\r\n            //     }\r\n            // })\r\n\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value)\r\n                if (currentUser.emailVerified == true) {\r\n\r\n                    await db.collection('Users').where(\"Email\", '==', email.value).onSnapshot((snapshot) => {\r\n                        if (snapshot.size) {\r\n\r\n                            snapshot.docs.map((doc) => {\r\n                                localStorage.setItem(\"proffesion\", doc.data().Profession)\r\n                            })\r\n                        } else {\r\n                            console.log('Немає професії')\r\n                        }\r\n                    })\r\n\r\n                    localStorage.setItem('user', currentUser.email)\r\n                    history.push('/home')\r\n                } else {\r\n                    alert('please verify your email')\r\n                }\r\n            } catch (error) { }\r\n        },\r\n        [history]\r\n    )\r\n    if (currentUser && currentUser.emailVerified == true) {\r\n        localStorage.setItem('user', currentUser.email)\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n    localStorage.removeItem('userEmail')\r\n    localStorage.removeItem('Name')\r\n    localStorage.removeItem('Surname')\r\n    localStorage.removeItem('Birthday')\r\n    localStorage.removeItem('Gender')\r\n    localStorage.removeItem('Country')\r\n    localStorage.removeItem('City')\r\n    localStorage.removeItem('PhoneNumber')\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <div className=\"image-form-division\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-in-text\"> Увійти на сайт</div>\r\n                    <form className=\"login_form\" onSubmit={handleLogin}>\r\n                        <input\r\n                            className=\"login_text_input\"\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        <input\r\n                            className=\"login_text_input_second\"\r\n                            type=\"password\"\r\n                            id=\"lname\"\r\n                            name=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                        />\r\n                        <input\r\n                            class=\"slide-hover-left-3\"\r\n                            type=\"submit\"\r\n                            value=\"Увійти\"\r\n                        />\r\n                    </form>\r\n                    <div className=\"still_no_acc\">\r\n                        <span className=\"still_no_acc_text\">\r\n                            Досі немає акаунту? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                        <Link className=\"login_link_reg\" to=\"/registration\">\r\n                            Зареєструватись\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"forgot_password\">\r\n                        <span className=\"forgot_password_text\">\r\n                            Забули пароль? &nbsp;&nbsp;&nbsp;\r\n                        </span>{' '}\r\n                        <Link className=\"login_link_reg\" to=\"/forgetPassword\">\r\n                            Відновити пароль\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(SignIn)\r\n","C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx",[],"C:\\Users\\dosko\\ionkid\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Patient\\Patient.jsx",["259","260","261","262"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\nimport \"./Patients.css\"\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\nimport Logo from '../../assets/Logo.svg'\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    let [user, setUser] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setUser(\r\n                        snapshot.docs.filter((u) =>\r\n                        u.id.includes(localStorage.getItem('user'))\r\n                    ).map((doc) => {\r\n                        localStorage.setItem(\"telegramUserName\", (doc.data().TelegramUserID))\r\n                        })\r\n                    )\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n    \r\n    patients = patients.filter((protocol) =>\r\n        protocol.Name.includes(inputSearch)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <>\r\n            <MobileHeader/>\r\n                <div className=\"header\">\r\n                    <img\r\n                        src={Logo}\r\n                        onClick={() => signOut()}\r\n                        width=\"14.7%\"\r\n                        style={{\r\n                            position: 'relative',\r\n                            left: '4%',\r\n                            marginTop: '1.1%',\r\n                            marginBottom: '-20px',\r\n                        }}\r\n                    />\r\n                    <input className=\"search\" onChange={(e) => (setInputSearch(e.target.value))} type=\"text\" name=\"search\" placeholder=\"Пошук..\"/>\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            position: 'relative',\r\n                            top: '8.2%',\r\n                            left: '3.33%',\r\n                            width: '93.2%',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </>\r\n            <div className=\"info_title\">\r\n                <div className=\"inter_fing\">\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '45px',\r\n                            fontSize: '25px',\r\n                            color: '#6F6F6F',\r\n                            fontWeight: '700'\r\n                        }}\r\n                    >\r\n                        Пацієнти\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '40px',\r\n                            marginBottom: '20px',\r\n\r\n                            fontSize: '20px',\r\n                            color: \"#48535f\"\r\n                        }}\r\n                    >\r\n                        Кількість: {patients.length}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Link\r\n                to=\"/patient_registration\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '11.5rem',\r\n                    right: '10rem',\r\n                    color: 'grey',\r\n                }}\r\n                className=\"add_patient_button\"\r\n            >\r\n                <BsPlusCircle size={50} />\r\n            </Link>\r\n            <PatientItem patients={patients} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\n","C:\\Users\\dosko\\ionkid\\src\\Firebase\\firebase.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm2.js",["263","264","265"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './SignUpForm2.css'\r\n\r\nfunction SignUpForm2() {\r\n    \r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const [country, setCountry] = useState('')\r\n    console.log(country)\r\n    localStorage.setItem('Country', country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    localStorage.setItem(\"step\",3)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n\r\n            <form className=\"form-second-personal-data\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n\r\n                <div className=\"custom_image_input\">\r\n                    <label for=\"image_input\">\r\n                        <img\r\n                            src={Upload}\r\n                            height=\"25\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                marginLeft: '25px',\r\n                                marginRight: '15px',\r\n                                marginTop: '9px',\r\n                                color: '#EEEEEE',\r\n                            }}\r\n                        />\r\n                        <span className=\"download_image\" id=\"file-chosen\">\r\n                            Завантажити фото профілю\r\n                        </span>\r\n                        <hr />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image_input\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                </div>\r\n                {selectedFile && <img src={preview} className=\"input_image\" />}\r\n                <div id=\"div1\" className=\"image_container_simulator\">\r\n                    Фото\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCountry(event.target.value)}\r\n                        type=\"text\"\r\n                        defaultValue={localStorage.getItem('Country')}\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Країна\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCity(event.target.value)}\r\n                        type=\"text\"\r\n                        defaultValue={localStorage.getItem('City')}\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Місто\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm2\r\n// function addSecondInputRegistr(photo, country, city) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Photo: photo, Country: country, City: city})\r\n// }\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm3.js",["266"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport app from \"../../Firebase/firebase\";\r\nimport './SignUpForm3.css'\r\nimport Select from 'react-select'\r\nimport { useState } from 'react';\r\n\r\nconst options = [\r\n    { value: 'therapist', label: 'терапевт' },\r\n    { value: 'ordinary doctor', label: 'звичайний лікар' },\r\n    { value: 'psychologist', label: 'психолог' },\r\n    { value: 'child psychologist', label: 'дитячий психолог' },\r\n]\r\n    \r\nfunction SignUpForm3() {\r\n    const [profession, setProfession] = useState(\"\")\r\n    console.log(profession)\r\n    localStorage.setItem(\"Profession\",profession)\r\n    const [organization, setOrganization] = useState(\"\")\r\n    localStorage.setItem(\"Organization\",organization)\r\n    console.log(organization)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n            <form className=\"third_form\">\r\n                <div className=\"work_text\">Робота</div>\r\n                <div className=\"choose_profession\">Оберіть вашу професію:</div>\r\n                <Select onChange={(event)=> (setProfession(event.value))}\r\n                    className=\"third_form_select\"\r\n                    defaultValue={options[2]}\r\n                    label=\"Single select\"\r\n                    options={options}\r\n                    theme={(theme) => ({\r\n                        ...theme,\r\n                        borderRadius: 0,\r\n                        colors: {\r\n                            ...theme.colors,\r\n                            primary25: 'whitesmoke',\r\n                            primary: '#48535F',\r\n                        },\r\n                    })}\r\n                />\r\n                <div className=\"input-work-second\">\r\n                    <input onChange={(event)=> (setOrganization(event.target.value))}\r\n                        type=\"text\"\r\n                        id=\"organizationname\"\r\n                        name=\"organizationname\"\r\n                        placeholder=\"Назва організації\"\r\n                    />\r\n                </div>\r\n                <div></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm3\r\n// function addThirdInputRegistr(profession,organization) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Profession: profession, Organization: organization})\r\n// }\r\n",["267","268"],"C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm4.js",["269"],"import React, { useCallback, useState } from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport './SignUpForm4.css'\r\nimport { withRouter } from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\n\r\nfunction SignUpForm4({ history }) {\r\n    localStorage.setItem(\"step\", 4)\r\n    const handleSignUp = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const {\r\n                email,\r\n                password,\r\n                passwordCheck,\r\n                phone,\r\n            } = event.target.elements\r\n            try {\r\n                if (password.value === passwordCheck.value) {\r\n                    await app\r\n                        .auth()\r\n                        .createUserWithEmailAndPassword(\r\n                            email.value,\r\n                            password.value\r\n                        )\r\n\r\n                    await app.auth().currentUser.sendEmailVerification()\r\n\r\n                    addInputRegistr()\r\n                    history.push('/')\r\n                } else {\r\n                    alert('Будь ласка, перевірте ваш пароль')\r\n                }\r\n            } catch (error) {\r\n                alert(error)\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n\r\n    const [phone, setPhoneNumber] = useState('')\r\n    console.log(phone)\r\n    localStorage.setItem('PhoneNumber', phone)\r\n\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n            <form className=\"forth_form\" onSubmit={handleSignUp}>\r\n                <div className=\"contact_text\">Контакти</div>\r\n                <div className=\"inputE\">\r\n                    <input\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        defaultValue={localStorage.getItem('PhoneNumber')}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputP\">\r\n                    <input\r\n\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputCp\">\r\n                    <input\r\n\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"passwordCheck\"\r\n                        placeholder=\"Підтвердження паролю\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputPh\">\r\n                    <input\r\n                        onChange={(event) => setPhoneNumber(event.target.value)}\r\n                        defaultValue={localStorage.getItem('userEmail')}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Номер телефону\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    class=\"slide-hover-left-4\"\r\n                    type=\"submit\"\r\n                    value=\"Зареєструватись\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm4)\r\nfunction addInputRegistr() {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('userEmail'))\r\n        .set({\r\n            Name: localStorage.getItem('Name'),\r\n            Surname: localStorage.getItem('Surname'),\r\n            Birthday: localStorage.getItem('Birthday'),\r\n            Gender: localStorage.getItem('Gender'),\r\n            Country: localStorage.getItem('Country'),\r\n            City: localStorage.getItem('City'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\r\n            TelegramUserID: '',\r\n        })\r\n    db.collection(\"Users\")\r\n        .doc()\r\n        .set({\r\n            Email: localStorage.getItem('userEmail'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n        })\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\SignUpForm1.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\Header.js",["270","271","272"],"import React, { useState } from 'react'\r\nimport './ProgramHeader.css'\r\nimport './Header.css'\r\nimport Logo from '../../assets/Logo.svg';\r\nimport app from '../../Firebase/firebase'\r\nfunction signOut() {\r\n    localStorage.setItem(\"user\",'@gmail')\r\n    app.auth().signOut()\r\n    \r\n}\r\nfunction Header() {\r\n\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => signOut()}\r\n                    width=\"14.7%\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: \"-20px\"\r\n                    }}\r\n                />\r\n                <input\r\n                    className=\"search\"\r\n                    onChange={console.log(\"qqq\")}\r\n                    placeholder=\"Пошук...\"\r\n                />\r\n                <h1\r\n                    style={{\r\n                        border: 'none',\r\n                        borderBottom: ' 1px solid #6F6F6F',\r\n                        position: 'relative',\r\n                        top: '8.2%',\r\n                        left: '3.33%',\r\n                        width: '93.2%',\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientItem\\PatientItem.js",["273","274","275","276","277","278"],"import React, { useEffect, useState } from 'react'\r\nimport { Item, Name, ButtonItem, Amount, Patient } from './PatientItem.styled'\r\nimport { Link } from 'react-router-dom'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nfunction PatientItem({ patients }) {\r\n    console.log(patients)\r\n    return (\r\n        <div className=\"all_inter\">\r\n            {patients.map((patient) => (\r\n                <Item className=\"hover_patient\" style={{ height: '26rem' }}>\r\n                    <img\r\n                        src={patient.Image}\r\n                        width=\"250\"\r\n                        height=\"240\"\r\n                        style={{ marginLeft: '0.8rem', marginTop: '0.9rem' }}\r\n                    />\r\n\r\n                    <Name style={{ marginLeft: \"-3.8rem\", textAlign: \"center\", height: '4rem' }}>{patient.Name}</Name>\r\n\r\n                        <Link to=\"/patient\" className=\"viewmore_patient button_item\" onClick={() =>\r\n                            localStorage.setItem('child', patient.id)}>\r\n                            Переглянути\r\n                        </Link>\r\n                </Item>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx",["279"],"import React from 'react'\r\nimport '../SignUpForm1.css'\r\nimport 'fontsource-dm-sans'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction LoginNavigation() {\r\n    let colorBackground = 'white'\r\n    let colorText = '#48535f'\r\n\r\n    return (\r\n        <nav className=\"number-buttons\">\r\n            <Link to=\"/registration\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={1} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup2\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={2} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup3\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={3} />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup4\">\r\n                <StepButton colorBackground={colorBackground} colorText={colorText} stepNumber={4} />\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\nexport default LoginNavigation\r\n\r\nfunction StepButton({ colorBackground, colorText, stepNumber }) {\r\n    if (localStorage.getItem(\"step\") == stepNumber) {\r\n        return (\r\n            <button style={{ backgroundColor: colorBackground, color: colorText }} className=\"number-button\">{stepNumber}</button>)\r\n    } else {\r\n        return (\r\n            <button className=\"number-button\">{stepNumber}</button>)\r\n\r\n    }\r\n}","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientItem\\PatientItem.styled.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolList.jsx",["280","281","282","283","284","285","286","287","288","289","290"],"C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx",["291","292","293"],"import { Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nimport { BsPlusCircle } from 'react-icons/bs'\r\n\r\nfunction ArrowHeader() {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 ><Link to=\"/patient\" className=\"patients_link\" >{localStorage.getItem(\"childName\")}</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <h2 style={{ color: \"#6F6F6F\" }}>Програма</h2>\r\n\r\n                <div\r\n                    onClick={() => addProto(protocols.length)}\r\n                    className=\"add-proto\"\r\n                >\r\n                    <BsPlusCircle size={50} style={{marginTop:\"30px\"}} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1, \r\n            SphereOfDevelopment: \"\", \r\n            Skill: \"\", \r\n            IsActive: '0',\r\n            Interval: \"0\",\r\n            CorrectionProcedureStep1: \"\",\r\n            CorrectionProcedureStep2: \"\",\r\n            CorrectionProcedureStep3: \"\",\r\n            CriterionIncrease: \"\",\r\n            DesirableReaction: \"\",\r\n            Method: \"\",\r\n            MethodTakingHint: \"Тимчасова затримка\",\r\n            ReductionСriterion: \"\",\r\n            StepDescription: \"\",CriteriongenGenerSkill:\"\"\r\n        })\r\n\r\n\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx",["294","295","296","297","298","299","300","301","302"],"import Duplicate from '../../../assets/duplicate_task.svg'\r\nimport Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport { useState, useEffect } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport { Link } from 'react-router-dom'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nexport default function ProtocolItem({\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+protocolName % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{ backgroundColor: colorItem, marginLeft: '5rem' }}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {protocolName} {statusCopied}.{' '}\r\n                    {sphereOfDevelopment}. {skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <Link\r\n                        onClick={() =>\r\n                            localStorage.setItem('program', protocolId)\r\n                        }\r\n                        to=\"/program\"\r\n                    >\r\n                        <EditIcon className=\"icon\" style={{ position: \"relative\", top: \"-5px\", color: \"black\" }} />\r\n                    </Link>\r\n\r\n                    <img\r\n                        className=\"icon\"\r\n                        onClick={() =>\r\n                            CreateDuplicateProtocol(\r\n                                protocolId,\r\n                                +length + 1,\r\n                                sphereOfDevelopment,\r\n                                skill,\r\n                                protocolName,\r\n                                interval,\r\n                                correctionProcedureStep1,\r\n                                correctionProcedureStep2,\r\n                                correctionProcedureStep3,\r\n                                criterionIncrease,\r\n                                desirableReaction,\r\n                                method,\r\n                                methodTakingHint,\r\n                                reductionСriterion,\r\n                                stepDescription, CriteriongenGenerSkill\r\n                            )\r\n                        }\r\n                        src={Duplicate}\r\n                    />\r\n                    <CheckIsActive className=\"icon\" isActive={isActive} protocolId={protocolId} />\r\n\r\n\r\n                    <img\r\n                        className=\"icon\"\r\n                        onClick={() => DeleteProtocol(protocolId)}\r\n                        src={Delete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CreateDuplicateProtocol(\r\n    protocolId,\r\n    id,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    copiId,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription, CriteriongenGenerSkill\r\n) {\r\n    localStorage.setItem('program', protocolId)\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            SphereOfDevelopment: sphereOfDevelopment,\r\n            ProtocolId: id,\r\n            Skill: skill,\r\n            StatusCopied: '(Копія Протокол ' + copiId + ')',\r\n            IsActive: '0',\r\n            Interval: interval,\r\n            CorrectionProcedureStep1: correctionProcedureStep1,\r\n            CorrectionProcedureStep2: correctionProcedureStep2,\r\n            CorrectionProcedureStep3: correctionProcedureStep3,\r\n            CriterionIncrease: criterionIncrease,\r\n            DesirableReaction: desirableReaction,\r\n            Method: method,\r\n            MethodTakingHint: methodTakingHint,\r\n            ReductionСriterion: reductionСriterion,\r\n            StepDescription: stepDescription,\r\n            CriteriongenGenerSkill: CriteriongenGenerSkill\r\n        })\r\n        .then(function (docRef) {\r\n            db.collection(localStorage.getItem(\"proffesion\"))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols').doc(docRef.id)\r\n                .collection(\"CriteriongenGenerSkill\")\r\n                .add({ Text: \"\" })\r\n            db.collection('User')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols').doc(docRef.id)\r\n                .collection(\"Stimulus\")\r\n                .add({ Name: \"\" })\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function (error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n\r\n    // console.log(data.key)\r\n}\r\nfunction DeleteProtocol(protocolId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .delete()\r\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\r\n        db.collection('Therapists')\r\n            .doc(terapist)\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols').doc(protocolId).delete()\r\n    })\r\n\r\n\r\n}\r\nfunction CheckIsActive({ isActive, protocolId }) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({ IsActive: valueStatus })\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\ProgramHeader.js",["303","304","305"],"import React, { useState, useEffect } from 'react'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport './ProgramHeader.css'\r\n\r\nimport app from '../../Firebase/firebase'\r\n\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction ProgramHeader() {\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        fetch(`/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <div className=\"full_program_header\">\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => signOut()}\r\n                    width=\"220\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: '-20px',\r\n                    }}\r\n                />\r\n                <div style={{ position: 'absolute', top: '0.9%', left: '20%' }}>\r\n                    <button\r\n                        className=\"save_button btn-background-slide\"\r\n                        style={{ top: '1rem', cursor: 'pointer' }}\r\n                        onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                    >\r\n                        Зберегти файл\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <hr\r\n                style={{\r\n                    border: 'none',\r\n                    borderBottom: ' 1px solid #6F6F6F',\r\n                    position: 'relative',\r\n                    top: '1.5rem',\r\n                    left: '1.7%',\r\n                    width: '93.2%',\r\n                    marginBottom: '2rem',\r\n                    marginRight: '4.5rem',\r\n                }}\r\n            />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgramHeader\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx",["306","307"],"import { Link } from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport '../Program.css'\r\nimport '../../PatientItem/PatientItem.css'\r\nfunction ArrowHeader() {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        className=\"program_link\"\r\n                        to=\"/protocol-list\"\r\n                    >\r\n                        Програма\r\n                    </Link>\r\n                </h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx",["308"],"import Delete from '../../../assets/delete.png'\r\nimport app from '../../../Firebase/firebase'\r\nfunction StimulusItem({ name, stimulId }) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step1.jsx",["309","310","311","312"],"\nimport React, { useEffect, useState } from \"react\";\nimport app from \"../../../../Firebase/firebase\";\nimport InstructionItem from \"../../ProgramElement/Instruction/InstructionItem\";\nimport { TextInput } from 'react-native-paper';\nfunction Step1({Instructions1}) {\n    let [instructionInput, setInstructionInput] = useState(\"\")\n    // let [instructions, setInstructions] = useState([]);\n\n\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"Instructions\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n\n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\")\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n\n    return (\n        <>\n\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n            \n\n                     <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n\n                                        placeholder={Instructions1}\n                                        onChange={(event) => addInstruction(event.target.value)}\n                                        style={{ fontSize: \"20px\" }}\n                                        raised theme={{ colors: { background: '#fcfcfc' } }}\n                                    />\n\n             \n           \n            </div>\n        </>\n    )\n}\nexport default Step1\nfunction addInstruction(instructionInput) {\n    const db = app.firestore();\n    db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).set({ Instructions1: instructionInput })\n\n}\n",["313","314"],"C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step2.jsx",["315","316","317","318"],"\nimport React, { useEffect, useState } from \"react\";\nimport app from \"../../../../Firebase/firebase\";\nimport InstructionItem2 from \"../../ProgramElement/Instruction/InstructionItem2\";\nimport { TextInput } from 'react-native-paper';\nfunction Step2({Instructions2} ) {\n    let [instructionInput, setInstructionInput] = useState(\"\")\n    // let [instructions, setInstructions] = useState([]);\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"InstructionsDificult2\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n\n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\")\n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n\n\n    return (\n\n        <>\n\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n               \n                    {/* {instructions.map((instruction) => ( */}\n                    {/* <InstructionItem text={Instructions1}  */}\n                    {/* // instructionId={instruction.id}\n                     /> */}\n                     {/* ))} */}\n\n                     <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n\n                                        placeholder={Instructions2}\n                                        onChange={(event) => addInstruction(event.target.value)}\n                                        style={{ fontSize: \"20px\" }}\n                                        raised theme={{ colors: { background: '#fcfcfc' } }}\n                                    />\n\n                    {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <button onClick={() => addInstruction(instructionInput)} className=\"add_button\">                                                <h1 style={{ marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\", width: \"22px\", height: \"20px\", color: \"#4d4d4d\", fontSize: \"20px\" }}>+</h1></button>\n                        <div className=\"transparent_input\">\n                            <input type=\"text\" onChange={(event) => setInstructionInput(event.target.value)} type=\"text\" name=\"name\" placeholder=\"Додати інструкцію....\" />\n                        </div>\n                    </div> */}\n            </div>\n        </>\n\n    )\n}\nexport default Step2\nfunction addInstruction(instructionInput) {\n    const db = app.firestore();\n\n    db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).set({ Instructions2: instructionInput })\n\n}\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramElement\\ProgramStep\\Step3.jsx",["319","320","321","322"],"import React, { useEffect, useState } from \"react\";\nimport app from \"../../../../Firebase/firebase\";\nimport InstructionItem3 from \"../../ProgramElement/Instruction/InstructionItem3\";\nimport { TextInput } from 'react-native-paper';\nfunction Step3({Instructions3} ) {\n    let [instructionInput, setInstructionInput] = useState(\"\")\n    // let [instructions, setInstructions] = useState([]);\n\n\n\n    // useEffect(() => {\n    //     const db = app.firestore();\n    //     const unsubscribe = db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).collection(\"InstructionsDificult3\")\n    //         .onSnapshot(snapshot => {\n    //             if (snapshot.size) {\n                    \n    //                 setInstructions(snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n    //                 console.log(\"Сука \")\n    //             } else {\n    //                 console.log(\"Сука1\") \n    //             }\n    //         })\n    //     return () => {\n    //         unsubscribe()\n    //     }\n    // }, [])\n\n    return (\n\n        <>\n\n            <div className=\"element_name\">Інструкції до етапу:</div>\n            <div className=\"element_value\">\n        \n                    {/* {instructions.map((instruction) => ( */}\n                    {/* <InstructionItem text={Instructions1}  */}\n                    {/* // instructionId={instruction.id}\n                     /> */}\n                     {/* ))} */}\n\n                     <TextInput\n                                        className=\"element_value\"\n                                        multiline=\"true\"\n                                        underlineColor=\"transparent\"\n                                        selectionColor=\"primary\"\n\n                                        placeholder={Instructions3}\n                                        onChange={(event) => addInstruction(event.target.value)}\n                                        style={{ fontSize: \"20px\" }}\n                                        raised theme={{ colors: { background: '#fcfcfc' } }}\n                                    />\n\n                    {/* <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                        <button onClick={() => addInstruction(instructionInput)} className=\"add_button\">                                                <h1 style={{ marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\", width: \"22px\", height: \"20px\", color: \"#4d4d4d\", fontSize: \"20px\" }}>+</h1></button>\n                        <div className=\"transparent_input\">\n                            <input type=\"text\" onChange={(event) => setInstructionInput(event.target.value)} type=\"text\" name=\"name\" placeholder=\"Додати інструкцію....\" />\n                        </div>\n                    </div> */}\n            </div>\n        </>\n\n    )\n}\nexport default Step3\nfunction addInstruction(instructionInput) {\n    const db = app.firestore();\n\n    db.collection(\"User\").doc(localStorage.getItem(\"user\")).collection(\"Patient\").doc(localStorage.getItem(\"child\")).collection(\"Protocols\").doc(localStorage.getItem(\"program\")).set({ Instructions3: instructionInput })\n\n}\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\DataPicker.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\TherapyResult.js",["323","324","325"],"import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport './TherapyResult.css'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport PaginationRounded from './Pagination'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nconst TherapyResult = () => {\r\n    var history = useHistory()\r\n\r\n    return (\r\n        <>\r\n        <MobileHeader/>\r\n            <Header />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 ><Link to=\"/patient\" className=\"patients_link\" >{localStorage.getItem(\"childName\")}</Link></h2>\r\n                <img src={Arrow} height=\"20\" style={{ marginLeft: \"30px\", marginRight: \"30px\", marginTop: \"28px\", color: \"black\" }} />\r\n                <h2 ><Link style={{ color: \"#666666\", cursor: \"default\" }} className=\"patients_link\" to=\"/protocol-list\">Результати терапії</Link></h2>\r\n            </div>\r\n            <div className=\"container\">\r\n                <p class=\"choose-file-title\">\r\n                    Натисніть на файл, щоб завантажити його\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <PaginationRounded />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TherapyResult\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\Pagination.js",["326","327","328"],"import React, { useState, useEffect } from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { List, makeStyles, Divider, Box } from '@material-ui/core'\r\nimport app from '../../Firebase/firebase'\r\nimport File from './File'\r\nimport './Pagination.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n    },\r\n    items: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nconst PaginationRounded = () => {\r\n    const classes = useStyles()\r\n    const [files, setFiles] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [filesPerPage] = useState(4)\r\n\r\n    console.log('')\r\n    var storageRef = app.storage().ref()\r\n    var patientResultRef = storageRef.child(\r\n        'patients/' + localStorage.getItem('child') + '/results'\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            patientResultRef.listAll().then(function (result) {\r\n                setFiles(\r\n                    result.items.map((url) => {\r\n                        return url\r\n                            .toString()\r\n                            .replace(\r\n                                'gs://ionkid-abd2f.appspot.com/patients/' +\r\n                                    localStorage.getItem('child') +\r\n                                    '/results/',\r\n                                ''\r\n                            )\r\n                    })\r\n                )\r\n            })\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, []) // [files, setFiles]\r\n\r\n    console.log(files)\r\n    const handleChange = (event, value) => {\r\n        setPage(value)\r\n    }\r\n\r\n    console.log('sho?   \\n' + files.length)\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"table-wrapper\"\r\n                style={{ position: 'relative', bottom: '5rem' }}\r\n            >\r\n                {files\r\n                    .slice((page - 1) * filesPerPage, page * filesPerPage)\r\n                    .map((file) => {\r\n                        return <File file={file} loading={loading} />\r\n                    })}\r\n                {/* 'Divider' protrudes to the left || Need to fix or delete */}\r\n                {/* <Divider /> */}\r\n            </div>\r\n            <Box component=\"span\" className=\"pagination-box\">\r\n                <Pagination\r\n                    count={Math.ceil(files.length / filesPerPage)}\r\n                    page={page}\r\n                    onChange={handleChange}\r\n                    defaultPage={1}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                    classes={{ ul: classes.paginator }}\r\n                />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginationRounded\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\TherapyResult\\File.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\exportService.js",["329","330"],"\r\nconst xlsx = require('xlsx');\r\nconst path = require('path');\r\n\r\nconst exportExcel = (data, workSheetColumnNames, workSheetName, filePath) => {\r\n    const workBook = xlsx.utils.book_new();\r\n    const workSheetData = [\r\n        workSheetColumnNames,\r\n        ... data\r\n    ];\r\n    const workSheet = xlsx.utils.aoa_to_sheet(workSheetData);\r\n    xlsx.utils.book_append_sheet(workBook, workSheet, workSheetName);\r\n    xlsx.writeFile(workBook, path.resolve(filePath));\r\n}\r\n\r\n\r\nconst exportUsersToExcel = (users, workSheetColumnNames, workSheetName, filePath,protocols) => {\r\n\r\n    \r\nfor (let i = 0; i <protocols.length; i += 1) {\r\n    users[i].text1=protocols[i].SphereOfDevelopment+\".\"+protocols[i].Skill\r\n    users[i].instr1=protocols[i].Instructions1\r\n    users[i].instr2=protocols[i].Instructions2\r\n    users[i].instr3=protocols[i].Instructions3\r\n    if (protocols[i].IsActive == true) {\r\n        users[i].bool_field=\"1\"\r\n    }\r\n    else {\r\n        users[i].bool_field=\"0\"\r\n    }\r\n    console.log(protocols[i])\r\n    \r\n};\r\n\r\n    const data = users.map(user => {\r\n        return [user.id, user.text1, user.text2, user.text3, user.stym[0], user.stym[1], user.stym[2], user.stym[3], user.stym[4],\r\n        user.stym[5], user.stym[6],user.stym[7], user.stym[8], user.instr1, user.k, user.l, user.m, user.n, user.o, user.p,\r\n            user.q, user.r, user.s, user.instr2, user.u, user.v, user.w, user.x, user.y, user.z, user.aa, user.ab,\r\n            user.ac, user.instr3, user.ae, user.af, user.ag, user.ah, user.ai, user.aj, user.ak, user.al, user.am,\r\n            user.bool_field];\r\n    });\r\n    exportExcel(data, workSheetColumnNames, workSheetName, filePath);\r\n}\r\n\r\nmodule.exports = exportUsersToExcel;","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx",["331","332"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/Item'\r\n\r\nfunction ProgramTemplate({ history }) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"template_title\">\r\n                <div className=\"templates_string\">\r\n                    {' '}\r\n                    Створити програму на основі шаблону серед наведених нище АБО\r\n                </div>\r\n                <Link className=\"template_link\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx",["333","334","335","336","337","338"],"import { Link } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nfunction AHeader() {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                        style={{ color: '#6F6F6F' }}\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>Програма</h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AHeader\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx",["339","340"],"import Delete from '../../../assets/delete.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({ diagnos, age, count, number, idTemplate, history }) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <img\r\n                    className=\"template_img\"\r\n                    onClick={() => DeleteTemplate(idTemplate)}\r\n                    src={Delete}\r\n                ></img>\r\n\r\n                <div\r\n                    className=\"template_categories\"\r\n                    onClick={() => CreateDuplicateTemplate(idTemplate, history)}\r\n                >\r\n                    <div className=\"template_program\">Програма: {number}</div>\r\n                    <div className=\"template_diagnos\">Діагноз: {diagnos}</div>\r\n                    <div className=\"template_age\">Вік: {age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів: {count}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection(localStorage.getItem(\"proffesion\"))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem(\"proffesion\"))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n\r\n\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\RegistrationPatient\\RegPatientPage.js",["341","342"],"import React, { useState, createRef } from 'react'\r\nimport SimpleHeader from '../Header/SimpleHeader'\r\nimport { Link } from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { Avatar, Button as MuiButton } from '@material-ui/core'\r\nimport { spacing } from '@material-ui/system'\r\nimport styled from 'styled-components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport app from '../../Firebase/firebase'\r\nimport './RegPatientPage.css'\r\n\r\n/* -\r\n----------------------------\r\n|  Style components block  |\r\n----------------------------\r\n */\r\nconst Button = styled(MuiButton)(spacing)\r\n\r\nconst CenteredContent = styled.div`\r\n    text-align: center;\r\n`\r\n\r\n/* -\r\n------------------------\r\n|    Main component    |\r\n------------------------\r\n */\r\n\r\nconst currenciesGenders = [\r\n    {\r\n        value: 'male',\r\n        label: 'чоловік',\r\n    },\r\n    {\r\n        value: 'female',\r\n        label: 'жінка',\r\n    },\r\n    {\r\n        value: 'other',\r\n        label: 'інше',\r\n    },\r\n]\r\n\r\nconst currenciesBlood = [\r\n    {\r\n        value: '4+',\r\n        label: '4+',\r\n    },\r\n    {\r\n        value: '4-',\r\n        label: '4-',\r\n    },\r\n    {\r\n        value: '3+',\r\n        label: '3+',\r\n    },\r\n    {\r\n        value: '3-',\r\n        label: '3-',\r\n    },\r\n    {\r\n        value: '2+',\r\n        label: '2+',\r\n    },\r\n    {\r\n        value: '',\r\n        label: '2-',\r\n    },\r\n    {\r\n        value: '1+',\r\n        label: '1+',\r\n    },\r\n    {\r\n        value: '1-',\r\n        label: '1-',\r\n    },\r\n]\r\n\r\nexport default function RegistrationPatient() {\r\n    const useStyles = makeStyles((theme) => ({\r\n        rootForTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '28ch',\r\n            },\r\n        },\r\n        rootForSubTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        rootForDate: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n            },\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [diagnose, setDiagnose] = useState('')\r\n    const [parents, setParents] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    const [weight, setWeight] = useState('')\r\n    const [height, setHeight] = useState('')\r\n    const [blood, setBlood] = useState('')\r\n    const [image, _setImage] = useState(null)\r\n    const inputFileRef = createRef(null)\r\n\r\n    // FOR IMAGE\r\n    const cleanup = () => {\r\n        URL.revokeObjectURL(image)\r\n        inputFileRef.current.value = null\r\n    }\r\n\r\n    const setImage = (newImage) => {\r\n        if (image) {\r\n            cleanup()\r\n        }\r\n        _setImage(newImage)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        const newImage = event.target?.files?.[0]\r\n\r\n        if (newImage) {\r\n            setImage(URL.createObjectURL(newImage))\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     */\r\n    const handleClick = (event) => {\r\n        if (image) {\r\n            event.preventDefault()\r\n            setImage(null)\r\n        }\r\n    }\r\n\r\n    //FOR INPUTS\r\n    const db = app.firestore()\r\n\r\n    const nameChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const diagnoseChange = (event) => {\r\n        setDiagnose(event.target.value)\r\n    }\r\n    const parentsChange = (event) => {\r\n        setParents(event.target.value)\r\n    }\r\n    const genderChange = (event) => {\r\n        setGender(event.target.value)\r\n    }\r\n    const ageChange = (event) => {\r\n        setAge(event.target.value)\r\n    }\r\n    const dateChange = (event) => {\r\n        setDate(event.target.value)\r\n        console.log(date)\r\n    }\r\n    const cityChange = (event) => {\r\n        setCity(event.target.value)\r\n    }\r\n    const countryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const weightChange = (event) => {\r\n        setWeight(event.target.value)\r\n    }\r\n    const heightChange = (event) => {\r\n        setHeight(event.target.value)\r\n        console.log(height)\r\n    }\r\n    const bloodChange = (event) => {\r\n        setBlood(event.target.value)\r\n        console.log(blood)\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        const res = await db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .add({\r\n                Name: name,\r\n                Diagnos: diagnose,\r\n                Parents: parents,\r\n                Gender: gender,\r\n                Age: age,\r\n                BirthDate: date,\r\n                City: city,\r\n                Country: country,\r\n                KidWeight: weight,\r\n                KidHeight: height,\r\n                BloodType: blood,\r\n                Image:\r\n                    'https://pulson.ru/wp-content/uploads/2013/10/krasivyie-foto-detey4.jpg',\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SimpleHeader />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{ marginTop: '10px' }}\r\n            >\r\n                <h2 style={{ marginLeft: '100px' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2\r\n                    style={{\r\n                        color: 'GrayText',\r\n                    }}\r\n                >\r\n                    Реєстрація пацієнта\r\n                </h2>\r\n            </div>\r\n            {/* --------------------------------- */}\r\n            {/* --------  Main  content  -------- */}\r\n            {/* --------------------------------- */}\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"avatar-reg-wrapper\">\r\n                    <CenteredContent>\r\n                        <Avatar\r\n                            alt=\"Avatar\"\r\n                            src={image}\r\n                            variant=\"square\"\r\n                            style={{\r\n                                width: '256px',\r\n                                height: '256px',\r\n                            }}\r\n                        />\r\n                        <input\r\n                            ref={inputFileRef}\r\n                            accept=\"image/*\"\r\n                            hidden\r\n                            id=\"avatar-image-upload\"\r\n                            type=\"file\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                        <label htmlFor=\"avatar-image-upload\">\r\n                            <Button\r\n                                className=\"upload-image-btn\"\r\n                                variant=\"contained\"\r\n                                color=\"grey\"\r\n                                component=\"span\"\r\n                                mb={2}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {image ? 'Очистити' : 'Завантажити'}\r\n                            </Button>\r\n                        </label>\r\n                    </CenteredContent>\r\n                </div>\r\n                <div className=\"column-direction-list\">\r\n                    {/* Start of inputs */}\r\n                    <div\r\n                        className={classes.rootForTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-title\">\r\n                            <div className=\"label-area\">Ім'я та Прізвище:</div>\r\n\r\n                            <TextField\r\n                                onChange={(event) => nameChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={classes.rootForSubTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-subtitle\">\r\n                            <div className=\"patient-subtitle-label\">\r\n                                Діагноз:\r\n                            </div>\r\n                            <TextField\r\n                                className=\"patient-subtitle-input\"\r\n                                onChange={(event) => diagnoseChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"zebra-table\">\r\n                            <div className=\"zebra-table-left-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Батьки:</div>\r\n\r\n                                    <TextField\r\n                                        onChange={(event) =>\r\n                                            parentsChange(event)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Стать:</div>\r\n                                    <TextField\r\n                                        select\r\n                                        value={gender}\r\n                                        onChange={(event) =>\r\n                                            genderChange(event)\r\n                                        }\r\n                                    >\r\n                                        {currenciesGenders.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вік:</div>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) => ageChange(event)}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    років\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Дата народження:\r\n                                    </div>\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        className={classes.textField}\r\n                                        color=\"secondary\"\r\n                                        size=\"medium\"\r\n                                        onChange={(event) => dateChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Місто:</div>\r\n                                    <TextField\r\n                                        onChange={(event) => cityChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Країна:</div>\r\n                                    <TextField\r\n                                        onChange={(event) =>\r\n                                            countryChange(event)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"zebra-table-right-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вага:</div>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            weightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    кг\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Зріст:</div>\r\n                                    <TextField\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            heightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    см\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Група крові:\r\n                                    </div>\r\n                                    <TextField\r\n                                        select\r\n                                        value={blood}\r\n                                        onChange={(event) => bloodChange(event)}\r\n                                    >\r\n                                        {currenciesBlood.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/\">\r\n                        <button\r\n                            className=\"save_button\"\r\n                            style={{\r\n                                top: '3.1rem',\r\n                                right: '5.6rem',\r\n                                cursor: 'pointer',\r\n                                position: 'absolute',\r\n                            }}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Зберегти\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\SimpleHeader.js",["343","344"],"import React from 'react'\nimport './ProgramHeader.css'\nimport Logo from '../../assets/Logo.svg'\nimport app from '../../Firebase/firebase'\n\nfunction SimpleHeader() {\n    return (\n        <>\n            <div className=\"header\">\n                <img\n                    src={Logo}\n                    onClick={() => app.auth().signOut()}\n                    width=\"14.7%\"\n                    style={{\n                        position: 'relative',\n                        left: '4%',\n                        marginTop: '1.1%',\n                        marginBottom: '-20px',\n                    }}\n                />\n\n                <h1\n                    style={{\n                        border: 'none',\n                        borderBottom: ' 1px solid #6F6F6F',\n                        position: 'relative',\n                        top: '8.2%',\n                        left: '3.33%',\n                        width: '93.2%',\n                    }}\n                />\n            </div>\n        </>\n    )\n}\n\nexport default SimpleHeader","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\UserRoleChoosing.js",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramBranching.jsx",["345"],"import ProgramEditable from './ProgramEditable'\r\nimport ProgramOnlyView from './ProgramOnlyView'\r\n\r\nexport default function RenderProgram() {\r\n    if (localStorage.getItem('proffesion') == 'Therapists') {\r\n        return <ProgramOnlyView />\r\n    } else {\r\n        return <ProgramEditable />\r\n    }\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx",["346","347","348","349"],"import { useState, useEffect } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolListSuperVisor from './ProtocolList'\r\nimport ProtocolListTherapist from './ProtocolListTherapist'\r\n\r\nexport default function RenderProgramList() {\r\n\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <ProtocolListSuperVisor />\r\n    } else {\r\n        return <ProtocolListTherapist />\r\n    }\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx",["350","351","352"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItemTherapist from './PageComponent/ProtocolItemTherapist'\r\nimport Header from '../Header/Header'\r\nimport { Link } from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport './ProtocolList.css'\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{ marginLeft: '6rem' }}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                        style={{ color: '#6F6F6F' }}\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>Програма</h2>\r\n            </div>\r\n\r\n            {protocols\r\n                .sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n                .map((protocol) => (\r\n                    <ProtocolItemTherapist\r\n                        protocolId={protocol.id}\r\n                        protocolName={protocol.ProtocolId}\r\n                        sphereOfDevelopment={protocol.SphereOfDevelopment}\r\n                        length={protocols.length}\r\n                        skill={protocol.Skill}\r\n                        statusCopied={protocol.StatusCopied}\r\n                        isActive={protocol.IsActive}\r\n                        interval={protocol.Interval}\r\n                        correctionProcedureStep1={\r\n                            protocol.CorrectionProcedureStep1\r\n                        }\r\n                        correctionProcedureStep2={\r\n                            protocol.CorrectionProcedureStep2\r\n                        }\r\n                        correctionProcedureStep3={\r\n                            protocol.CorrectionProcedureStep3\r\n                        }\r\n                        criterionIncrease={protocol.CriterionIncrease}\r\n                        desirableReaction={protocol.DesirableReaction}\r\n                        method={protocol.Method}\r\n                        methodTakingHint={protocol.MethodTakingHint}\r\n                        reductionСriterion={protocol.ReductionСriterion}\r\n                        stepDescription={protocol.StepDescription}\r\n                    />\r\n                ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramEditable.jsx",["353","354"],"import ProgramHeader from '../Header/ProgramHeader'\r\nimport './Program.css'\r\nimport { TextInput } from 'react-native-paper'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({ protocol }) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({ StatusCopied: '' })\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditable() {\r\n    let test = []\r\n\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n            <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{ position: 'relative', right: '4%' }}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{ marginBottom: '1rem' }}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {protocol.ProtocolId}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{ marginTop: '1rem' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                 <>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_name\"\r\n            >\r\n                Критерій узагальнення навику:{' '}\r\n            </div>\r\n            <div\r\n                style={{ backgroundColor: '#EEEEEE' }}\r\n                className=\"element_value\"\r\n            >\r\n                <div style={{ backgroundColor: '#EEEEEE' }}>\r\n                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriteriongenGenerSkill}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addCriteriongenGenerSkill(e.target.value)\r\n                                    }\r\n                                />\r\n                </div>\r\n            </div>\r\n        </>\r\n                        \r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ paddingTop: '1rem' }}\r\n                                >\r\n                                    Оберіть інтервал часу або тип виконання:\r\n                                    <select\r\n                                    defaultValue={protocol.Interval}\r\n                                        onChange={(event) =>\r\n                                            addInterval(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '0.5rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"0\">0 секунд</option>\r\n                                        <option value=\"2\">2 секунди</option>\r\n                                        <option value=\"4\">4 секунди</option>\r\n                                        <option value=\"6\">6 секунд</option>\r\n                                        <option value=\"Самостійна реакція\">\r\n                                            Самостійна реакція\r\n                                        </option>\r\n                                    </select>\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{ minHeight: '1rem' }}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: 'transparent' },\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                     defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        style={{\r\n                                            marginLeft: '-1rem',\r\n                                            background: '#F8FCFF',\r\n                                            border: '2px solid #CCE9FF',\r\n                                            boxSizing: 'border-box',\r\n                                            height: '40px',\r\n                                            fontSize: '20px',\r\n                                            lineHeight: '20px',\r\n                                            paddingLeft: '10px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ lineHeight: '18px' }}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                            }}\r\n                                        >\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_button\"\r\n                                            >\r\n                                                <h1\r\n                                                    style={{\r\n                                                        marginTop: '5px',\r\n                                                        marginBottom: '5px',\r\n                                                        textAlign: 'center',\r\n                                                        width: '22px',\r\n                                                        height: '20px',\r\n                                                        color: '#4d4d4d',\r\n                                                        fontSize: '20px',\r\n                                                    }}\r\n                                                >\r\n                                                    +\r\n                                                </h1>\r\n                                            </button>\r\n                                            <div className=\"transparent_input\">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) =>\r\n                                                        setStimulInput(\r\n                                                            event.target.value\r\n                                                        )\r\n                                                    }\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Додати стимул....\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{ minHeight: '1rem' }}\r\n                                ></div>\r\n                                <div className=\"element_name\">Етап 1</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{ fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 2*/}\r\n                                <div className=\"element_name\">Етап 2</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep2\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep2(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {/*step 3*/}\r\n                                <div className=\"element_name\">Етап 3</div>\r\n                                <div className=\"element_value\"></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep3\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep3(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{ fontSize: '20px' }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: { background: '#fcfcfc' },\r\n                                    }}\r\n                                />\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <TextInput\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{ fontSize: '20px' }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{ height: '100px' }}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions1: instructionInput })\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions2: instructionInput })\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Instructions3: instructionInput })\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .add({ Name: stimulInput })\r\n    }else {alert(\"Неможливо надіслати пустий стимул\")}\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Skill: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Method: params })\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ DesirableReaction: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ ReductionСriterion: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriterionIncrease: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ StepDescription: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep3: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep2: params })\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CorrectionProcedureStep1: params })\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ SphereOfDevelopment: sphereOfDevelopment })\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ Interval: interval })\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ MethodTakingHint: method })\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(\"Supervisors\")\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ CriteriongenGenerSkill: generSkill })\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Program\\ProgramOnlyView.jsx",[],"C:\\Users\\dosko\\ionkid\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx",["355","356","357","358","359"],"import Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport { useState } from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ProtocolItemTherapist({\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n\r\n    if (+protocolName % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{ backgroundColor: colorItem, marginLeft: '5rem' }}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {protocolName} {statusCopied}.{' '}\r\n                    {sphereOfDevelopment}. {skill}\r\n                </p>\r\n                <div className=\"control-panel\">\r\n                    <CheckIsActive\r\n                        isActive={isActive}\r\n                        protocolId={protocolId}\r\n                    />\r\n                    <Link\r\n                        onClick={() =>\r\n                            localStorage.setItem('program', protocolId)\r\n                        }\r\n                        to=\"/program\"\r\n                    >\r\n                        <AiOutlineArrowRight\r\n                            size={25}\r\n                            style={{\r\n                                paddingLeft: '2rem',\r\n                            }}\r\n                            color=\"black\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CheckIsActive({ isActive, protocolId }) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem(\"proffesion\"))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({ IsActive: valueStatus })\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx",["360","361","362"],"import React, { useState, useEffect } from 'react'\r\nimport PatientInfoTherapist from './PatientInfoTherapist'\r\nimport PatientInfoUser from './PatientInfoUser'\r\n\r\nexport default function PatientInfoRender() {\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <PatientInfoUser />\r\n    } else {\r\n        return <PatientInfoTherapist />\r\n    }\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx",["363","364","365","366","367"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/kid.jpg'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\n\r\nexport default function PatientInfoTherapist() {\r\n    let [patients, setPatients] = useState([])\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Therapists')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ul>\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{ color: '#6F6F6F' }}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                            <img\r\n                                src={patient.Image}\r\n                                height=\"270\"\r\n                                style={{ marginTop: '80px' }}\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    {/* <div>Терапевти:</div>\r\n                                    <div>\r\n                                        \r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            fontSize: '20px',\r\n                                                            display: 'flex',\r\n                                                            flexDirection:\r\n                                                                'row',\r\n                                                            justifyContent:\r\n                                                                'space-between',\r\n                                                        }}\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '-20px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                    </div> */}\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            marginLeft: '2rem',\r\n                                        }}\r\n                                    ></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={'/protocol-list'}\r\n                                onClick={() =>\r\n                                    localStorage.setItem('program', 'ok')\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\PatientInfo\\PatientInfoUser.jsx",["368","369","370","371","372","373","374"],"import React, { useEffect, useState } from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/kid.jpg'\r\nimport { Link } from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\n\r\nexport default function PatientInfoUser() {\r\n    let [patients, setPatients] = useState([])\r\n\r\n    let [therapistInput, setTherapistInput] = useState('')\r\n\r\n    let test = []\r\n\r\n    const [terapists, setTerapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTerapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    terapists.map((terapist) => test.push(terapist.id))\r\n    console.log(test)\r\n    localStorage.setItem('therapistID', JSON.stringify(test))\r\n\r\n    const [therapists, setTherapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTherapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Supervisors')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    let path = '/protocol-list'\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    if (protocols.length == 0) {\r\n        path = '/program-template'\r\n    } else {\r\n        path = '/protocol-list'\r\n    }\r\n    localStorage.setItem('childData', JSON.stringify(patients[0]))\r\n    return (\r\n        <>\r\n            <Header />\r\n            <ul>\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{ marginLeft: '4rem' }}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{ color: '#6F6F6F' }}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                            <img\r\n                                src={patient.Image}\r\n                                height=\"270\"\r\n                                style={{ marginTop: '80px' }}\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{ color: '#6F6F6F' }}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <div>Терапевти:</div>\r\n                                    <div>\r\n                                        {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            fontSize: '20px',\r\n                                                            display: 'flex',\r\n                                                            flexDirection:\r\n                                                                'row',\r\n                                                            justifyContent:\r\n                                                                'space-between',\r\n                                                        }}\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '-20px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"icon_place\">\r\n                                                            <img\r\n                                                                className=\"icon\"\r\n                                                                onClick={() =>\r\n                                                                    DeleteTherapist(\r\n                                                                        therapist.id\r\n                                                                    )\r\n                                                                }\r\n                                                                src={Delete}\r\n                                                                width=\"8px\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                   \r\n                                    </div>\r\n                                   \r\n                                    <div\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            marginLeft: '2rem',\r\n                                        }}\r\n                                    >\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                addTherapist(therapistInput)\r\n                                            }\r\n                                            className=\"add_button\"\r\n                                        >\r\n                                            <h1\r\n                                                style={{\r\n                                                    marginTop: '5px',\r\n                                                    marginBottom: '5px',\r\n                                                    textAlign: 'center',\r\n                                                    width: '22px',\r\n                                                    height: '20px',\r\n                                                    color: '#4d4d4d',\r\n                                                    fontSize: '20px',\r\n                                                }}\r\n                                            >\r\n                                                +\r\n                                            </h1>\r\n                                        </button>\r\n                                        <div className=\"transparent_input\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setTherapistInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати за поштою....\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: { patient },\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={path}\r\n                                onClick={() =>\r\n                                    localStorage.setItem('program', 'ok')\r\n                                }\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction DeleteTherapist(therapistId) {\r\n    console.log('хуй')\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Therapists')\r\n        .doc(therapistId)\r\n        .delete()\r\n        db.collection('Therapists')\r\n        .doc(therapistId)\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .delete()\r\n\r\n}\r\n\r\nfunction addTherapist(therapistInput) {\r\n    const db = app.firestore()\r\n    if (therapistInput != '') {\r\n        db.collection('Therapists')\r\n            .doc(therapistInput)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    console.log('zaebis pashe')\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({ Name: doc.data().Name })\r\n                } else {\r\n                    alert('Необхідно вказати дійсну пошту терапевта')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    } else {\r\n        alert('Спочатку вкажіть пошту терапевта')\r\n    }\r\n}\r\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Login\\MobileRegistration.js",["375","376"],"import './MobileRegistration.css'\nimport React, { useState } from 'react'\nimport DataPicker from './DataPicker'\n\n\nfunction MobileRegistration() {\n    // const [firstName, setFirstName] = useState('')\n    // localStorage.setItem('Name', firstName)\n    // console.log(firstName)\n    // const [lastName, setLastName] = useState('')\n    // localStorage.setItem('Surname', lastName)\n    // console.log(lastName)\n    // const [sex, setSex] = useState('')\n    // localStorage.setItem('Gender', sex)\n    // console.log(sex)\n    return (\n        <>\n        <div className=\"mobile_registration\">  \n            <div className=\"sign-up-text-mobile\">Реєстрація</div>\n            <div className=\"input_form\">\n            <div>Ім'я</div>\n            <div className=\"input_text_name_mobile\">\n                    <input\n                        // onChange={(event) => setLastName(event.target.value)}\n                        type=\"text\"\n                        id=\"lname\"\n                        name=\"lastname\"\n                    />\n                </div>\n            </div>\n        </div>\n        \n        </>\n    )\n}\n\nexport default MobileRegistration;\n","C:\\Users\\dosko\\ionkid\\src\\Components\\Header\\MobileHeader.js",["377","378"],"\nimport React from 'react'\nimport './ProgramHeader.css'\nimport Logo from '../../assets/Logo.svg'\nimport SignOut from '../../assets/SignOut.svg'\n\nimport app from '../../Firebase/firebase'\nfunction signOut() {\n    localStorage.setItem(\"user\",'@gmail')\n    app.auth().signOut()\n    \n}\n\nfunction MobileHeader() {\n    return (\n        <div className=\"logo_container\">\n            <img\n                    src={SignOut}\n                    onClick={() => signOut()}\n                    height=\"100%\"\n                    width= \"10%\"\n                    className=\"sign_out_button\"\n                    style={{\n                        cursor: 'pointer',\n                        position: 'relative',\n                        marginLeft: '10%',\n                    }}\n                />\n            <img\n                    src={Logo}\n                    height=\"100%\"\n                    width= \"50%\"\n                    style={{\n                        marginLeft: '7%',\n                        position: 'relative',\n                    }}\n                />\n            </div>\n    )\n}\n\nexport default MobileHeader","C:\\Users\\dosko\\ionkid\\src\\Components\\ModalWindow\\Popup.jsx",[],{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","severity":1,"message":"384","line":9,"column":27,"nodeType":"385","messageId":"386","endLine":9,"endColumn":33},{"ruleId":"383","severity":1,"message":"387","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":28},{"ruleId":"383","severity":1,"message":"388","line":1,"column":30,"nodeType":"385","messageId":"386","endLine":1,"endColumn":40},{"ruleId":"383","severity":1,"message":"389","line":3,"column":10,"nodeType":"385","messageId":"386","endLine":3,"endColumn":20},{"ruleId":"383","severity":1,"message":"390","line":3,"column":22,"nodeType":"385","messageId":"386","endLine":3,"endColumn":30},{"ruleId":"383","severity":1,"message":"391","line":4,"column":10,"nodeType":"385","messageId":"386","endLine":4,"endColumn":14},{"ruleId":"383","severity":1,"message":"384","line":8,"column":27,"nodeType":"385","messageId":"386","endLine":8,"endColumn":33},{"ruleId":"383","severity":1,"message":"392","line":8,"column":43,"nodeType":"385","messageId":"386","endLine":8,"endColumn":48},{"ruleId":"383","severity":1,"message":"393","line":9,"column":8,"nodeType":"385","messageId":"386","endLine":9,"endColumn":12},{"ruleId":"383","severity":1,"message":"394","line":10,"column":8,"nodeType":"385","messageId":"386","endLine":10,"endColumn":15},{"ruleId":"395","severity":1,"message":"396","line":23,"column":45,"nodeType":"397","messageId":"398","endLine":23,"endColumn":47},{"ruleId":"399","severity":1,"message":"400","line":53,"column":47,"nodeType":"401","messageId":"402","endLine":53,"endColumn":49},{"ruleId":"395","severity":1,"message":"396","line":58,"column":53,"nodeType":"397","messageId":"398","endLine":58,"endColumn":55},{"ruleId":"403","severity":1,"message":"404","line":73,"column":9,"nodeType":"405","endLine":73,"endColumn":18,"suggestions":"406"},{"ruleId":"399","severity":1,"message":"400","line":75,"column":50,"nodeType":"401","messageId":"402","endLine":75,"endColumn":52},{"ruleId":"383","severity":1,"message":"407","line":16,"column":10,"nodeType":"385","messageId":"386","endLine":16,"endColumn":14},{"ruleId":"395","severity":1,"message":"396","line":42,"column":33,"nodeType":"397","messageId":"398","endLine":42,"endColumn":35},{"ruleId":"408","severity":1,"message":"409","line":66,"column":21,"nodeType":"410","endLine":76,"endColumn":23},{"ruleId":"411","severity":1,"message":"412","line":78,"column":21,"nodeType":"410","endLine":87,"endColumn":23},{"ruleId":"383","severity":1,"message":"413","line":8,"column":8,"nodeType":"385","messageId":"386","endLine":8,"endColumn":11},{"ruleId":"408","severity":1,"message":"409","line":52,"column":25,"nodeType":"410","endLine":62,"endColumn":27},{"ruleId":"408","severity":1,"message":"409","line":74,"column":34,"nodeType":"410","endLine":74,"endColumn":79},{"ruleId":"383","severity":1,"message":"413","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":11},{"ruleId":"379","replacedBy":"414"},{"ruleId":"381","replacedBy":"415"},{"ruleId":"383","severity":1,"message":"416","line":18,"column":17,"nodeType":"385","messageId":"386","endLine":18,"endColumn":22},{"ruleId":"383","severity":1,"message":"417","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":17,"column":17,"nodeType":"410","endLine":27,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":33,"column":17,"nodeType":"410","endLine":42,"endColumn":19},{"ruleId":"383","severity":1,"message":"418","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"417","line":1,"column":28,"nodeType":"385","messageId":"386","endLine":1,"endColumn":36},{"ruleId":"383","severity":1,"message":"419","line":2,"column":22,"nodeType":"385","messageId":"386","endLine":2,"endColumn":32},{"ruleId":"383","severity":1,"message":"420","line":2,"column":34,"nodeType":"385","messageId":"386","endLine":2,"endColumn":40},{"ruleId":"383","severity":1,"message":"421","line":2,"column":42,"nodeType":"385","messageId":"386","endLine":2,"endColumn":49},{"ruleId":"408","severity":1,"message":"409","line":12,"column":21,"nodeType":"410","endLine":17,"endColumn":23},{"ruleId":"399","severity":1,"message":"400","line":33,"column":38,"nodeType":"401","messageId":"402","endLine":33,"endColumn":40},{"ruleId":"383","severity":1,"message":"422","line":13,"column":12,"nodeType":"385","messageId":"386","endLine":13,"endColumn":32},{"ruleId":"395","severity":1,"message":"396","line":28,"column":49,"nodeType":"397","messageId":"398","endLine":28,"endColumn":51},{"ruleId":"395","severity":1,"message":"396","line":30,"column":53,"nodeType":"397","messageId":"398","endLine":30,"endColumn":55},{"ruleId":"403","severity":1,"message":"423","line":58,"column":8,"nodeType":"405","endLine":58,"endColumn":10,"suggestions":"424"},{"ruleId":"383","severity":1,"message":"425","line":60,"column":12,"nodeType":"385","messageId":"386","endLine":60,"endColumn":31},{"ruleId":"395","severity":1,"message":"396","line":76,"column":45,"nodeType":"397","messageId":"398","endLine":76,"endColumn":47},{"ruleId":"395","severity":1,"message":"396","line":86,"column":88,"nodeType":"397","messageId":"398","endLine":86,"endColumn":90},{"ruleId":"395","severity":1,"message":"396","line":87,"column":65,"nodeType":"397","messageId":"398","endLine":87,"endColumn":67},{"ruleId":"403","severity":1,"message":"423","line":111,"column":8,"nodeType":"405","endLine":111,"endColumn":10,"suggestions":"426"},{"ruleId":"399","severity":1,"message":"400","line":233,"column":23,"nodeType":"401","messageId":"402","endLine":233,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":268,"column":23,"nodeType":"401","messageId":"402","endLine":268,"endColumn":25},{"ruleId":"383","severity":1,"message":"427","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":14},{"ruleId":"408","severity":1,"message":"409","line":43,"column":17,"nodeType":"410","endLine":52,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":54,"column":17,"nodeType":"410","endLine":54,"endColumn":135},{"ruleId":"383","severity":1,"message":"418","line":5,"column":20,"nodeType":"385","messageId":"386","endLine":5,"endColumn":29},{"ruleId":"383","severity":1,"message":"428","line":29,"column":21,"nodeType":"385","messageId":"386","endLine":29,"endColumn":33},{"ruleId":"399","severity":1,"message":"429","line":31,"column":27,"nodeType":"401","messageId":"402","endLine":31,"endColumn":29},{"ruleId":"408","severity":1,"message":"409","line":55,"column":21,"nodeType":"410","endLine":77,"endColumn":23},{"ruleId":"408","severity":1,"message":"409","line":81,"column":21,"nodeType":"410","endLine":85,"endColumn":23},{"ruleId":"395","severity":1,"message":"396","line":167,"column":68,"nodeType":"397","messageId":"398","endLine":167,"endColumn":70},{"ruleId":"399","severity":1,"message":"400","line":179,"column":18,"nodeType":"401","messageId":"402","endLine":179,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":181,"column":13,"nodeType":"410","endLine":185,"endColumn":15},{"ruleId":"408","severity":1,"message":"409","line":189,"column":13,"nodeType":"410","endLine":193,"endColumn":15},{"ruleId":"383","severity":1,"message":"418","line":1,"column":27,"nodeType":"385","messageId":"386","endLine":1,"endColumn":36},{"ruleId":"383","severity":1,"message":"430","line":12,"column":12,"nodeType":"385","messageId":"386","endLine":12,"endColumn":25},{"ruleId":"408","severity":1,"message":"409","line":27,"column":17,"nodeType":"410","endLine":37,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":17,"column":17,"nodeType":"410","endLine":26,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":35,"column":17,"nodeType":"410","endLine":44,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":9,"column":21,"nodeType":"410","endLine":21,"endColumn":23},{"ruleId":"383","severity":1,"message":"418","line":2,"column":17,"nodeType":"385","messageId":"386","endLine":2,"endColumn":26},{"ruleId":"383","severity":1,"message":"431","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":23},{"ruleId":"383","severity":1,"message":"432","line":7,"column":10,"nodeType":"385","messageId":"386","endLine":7,"endColumn":26},{"ruleId":"383","severity":1,"message":"433","line":7,"column":28,"nodeType":"385","messageId":"386","endLine":7,"endColumn":47},{"ruleId":"379","replacedBy":"434"},{"ruleId":"381","replacedBy":"435"},{"ruleId":"383","severity":1,"message":"418","line":2,"column":17,"nodeType":"385","messageId":"386","endLine":2,"endColumn":26},{"ruleId":"383","severity":1,"message":"436","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":24},{"ruleId":"383","severity":1,"message":"432","line":7,"column":10,"nodeType":"385","messageId":"386","endLine":7,"endColumn":26},{"ruleId":"383","severity":1,"message":"433","line":7,"column":28,"nodeType":"385","messageId":"386","endLine":7,"endColumn":47},{"ruleId":"383","severity":1,"message":"418","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":26},{"ruleId":"383","severity":1,"message":"437","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":24},{"ruleId":"383","severity":1,"message":"432","line":6,"column":10,"nodeType":"385","messageId":"386","endLine":6,"endColumn":26},{"ruleId":"383","severity":1,"message":"433","line":6,"column":28,"nodeType":"385","messageId":"386","endLine":6,"endColumn":47},{"ruleId":"383","severity":1,"message":"438","line":9,"column":9,"nodeType":"385","messageId":"386","endLine":9,"endColumn":16},{"ruleId":"408","severity":1,"message":"409","line":24,"column":17,"nodeType":"410","endLine":33,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":35,"column":17,"nodeType":"410","endLine":35,"endColumn":135},{"ruleId":"383","severity":1,"message":"439","line":3,"column":10,"nodeType":"385","messageId":"386","endLine":3,"endColumn":14},{"ruleId":"383","severity":1,"message":"440","line":3,"column":28,"nodeType":"385","messageId":"386","endLine":3,"endColumn":35},{"ruleId":"403","severity":1,"message":"441","line":52,"column":8,"nodeType":"405","endLine":52,"endColumn":10,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":9,"column":12,"nodeType":"445","messageId":"446","endLine":9,"endColumn":13,"fix":"447"},{"ruleId":"399","severity":1,"message":"400","line":25,"column":31,"nodeType":"401","messageId":"402","endLine":25,"endColumn":33},{"ruleId":"383","severity":1,"message":"427","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":14},{"ruleId":"383","severity":1,"message":"390","line":4,"column":22,"nodeType":"385","messageId":"386","endLine":4,"endColumn":30},{"ruleId":"383","severity":1,"message":"418","line":2,"column":17,"nodeType":"385","messageId":"386","endLine":2,"endColumn":26},{"ruleId":"383","severity":1,"message":"417","line":2,"column":28,"nodeType":"385","messageId":"386","endLine":2,"endColumn":36},{"ruleId":"383","severity":1,"message":"427","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":14},{"ruleId":"383","severity":1,"message":"413","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":11},{"ruleId":"408","severity":1,"message":"409","line":16,"column":17,"nodeType":"410","endLine":25,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":35,"column":17,"nodeType":"410","endLine":44,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":9,"column":17,"nodeType":"410","endLine":13,"endColumn":18},{"ruleId":"395","severity":1,"message":"396","line":44,"column":45,"nodeType":"397","messageId":"398","endLine":44,"endColumn":47},{"ruleId":"383","severity":1,"message":"448","line":197,"column":15,"nodeType":"385","messageId":"386","endLine":197,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":230,"column":17,"nodeType":"410","endLine":239,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":10,"column":17,"nodeType":"410","endLine":20,"endColumn":19},{"ruleId":"411","severity":1,"message":"412","line":22,"column":17,"nodeType":"410","endLine":31,"endColumn":19},{"ruleId":"399","severity":1,"message":"400","line":5,"column":44,"nodeType":"401","messageId":"402","endLine":5,"endColumn":46},{"ruleId":"383","severity":1,"message":"417","line":1,"column":10,"nodeType":"385","messageId":"386","endLine":1,"endColumn":18},{"ruleId":"383","severity":1,"message":"418","line":1,"column":20,"nodeType":"385","messageId":"386","endLine":1,"endColumn":29},{"ruleId":"383","severity":1,"message":"413","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":11},{"ruleId":"399","severity":1,"message":"400","line":8,"column":44,"nodeType":"401","messageId":"402","endLine":8,"endColumn":46},{"ruleId":"383","severity":1,"message":"449","line":45,"column":12,"nodeType":"385","messageId":"386","endLine":45,"endColumn":17},{"ruleId":"408","severity":1,"message":"409","line":80,"column":17,"nodeType":"410","endLine":89,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":99,"column":17,"nodeType":"410","endLine":108,"endColumn":19},{"ruleId":"383","severity":1,"message":"450","line":39,"column":9,"nodeType":"385","messageId":"386","endLine":39,"endColumn":13},{"ruleId":"399","severity":1,"message":"429","line":740,"column":21,"nodeType":"401","messageId":"402","endLine":740,"endColumn":23},{"ruleId":"383","severity":1,"message":"428","line":27,"column":21,"nodeType":"385","messageId":"386","endLine":27,"endColumn":33},{"ruleId":"399","severity":1,"message":"429","line":30,"column":27,"nodeType":"401","messageId":"402","endLine":30,"endColumn":29},{"ruleId":"399","severity":1,"message":"400","line":71,"column":18,"nodeType":"401","messageId":"402","endLine":71,"endColumn":20},{"ruleId":"408","severity":1,"message":"409","line":73,"column":13,"nodeType":"410","endLine":77,"endColumn":15},{"ruleId":"408","severity":1,"message":"409","line":81,"column":13,"nodeType":"410","endLine":85,"endColumn":15},{"ruleId":"383","severity":1,"message":"417","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":25},{"ruleId":"383","severity":1,"message":"418","line":1,"column":27,"nodeType":"385","messageId":"386","endLine":1,"endColumn":36},{"ruleId":"399","severity":1,"message":"400","line":6,"column":44,"nodeType":"401","messageId":"402","endLine":6,"endColumn":46},{"ruleId":"383","severity":1,"message":"451","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":11},{"ruleId":"383","severity":1,"message":"427","line":8,"column":8,"nodeType":"385","messageId":"386","endLine":8,"endColumn":14},{"ruleId":"399","severity":1,"message":"400","line":26,"column":33,"nodeType":"401","messageId":"402","endLine":26,"endColumn":35},{"ruleId":"408","severity":1,"message":"409","line":46,"column":29,"nodeType":"410","endLine":55,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":64,"column":29,"nodeType":"410","endLine":68,"endColumn":31},{"ruleId":"383","severity":1,"message":"451","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":11},{"ruleId":"399","severity":1,"message":"400","line":91,"column":33,"nodeType":"401","messageId":"402","endLine":91,"endColumn":35},{"ruleId":"399","severity":1,"message":"400","line":126,"column":26,"nodeType":"401","messageId":"402","endLine":126,"endColumn":28},{"ruleId":"408","severity":1,"message":"409","line":146,"column":29,"nodeType":"410","endLine":155,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":164,"column":29,"nodeType":"410","endLine":168,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":288,"column":61,"nodeType":"410","endLine":297,"endColumn":63},{"ruleId":"399","severity":1,"message":"429","line":395,"column":24,"nodeType":"401","messageId":"402","endLine":395,"endColumn":26},{"ruleId":"383","severity":1,"message":"417","line":2,"column":17,"nodeType":"385","messageId":"386","endLine":2,"endColumn":25},{"ruleId":"383","severity":1,"message":"452","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":18},{"ruleId":"408","severity":1,"message":"409","line":17,"column":13,"nodeType":"410","endLine":28,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":29,"column":13,"nodeType":"410","endLine":37,"endColumn":19},"no-native-reassign",["453"],"no-negated-in-lhs",["454"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useContext' is defined but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Logo' is defined but never used.","'SignOut' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'currentUser.email' and 'currentUser.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["455"],"'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'app' is defined but never used.",["453"],["454"],"'phone' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ButtonItem' is defined but never used.","'Amount' is defined but never used.","'Patient' is defined but never used.","'protocolsToTerapists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTest'. Either include it or remove the dependency array.",["456"],"'stimulusToTerapists' is assigned a value but never used.",["457"],"'Delete' is defined but never used.","'setColorItem' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'fileGenerated' is assigned a value but never used.","'InstructionItem' is defined but never used.","'instructionInput' is assigned a value but never used.","'setInstructionInput' is assigned a value but never used.",["453"],["454"],"'InstructionItem2' is defined but never used.","'InstructionItem3' is defined but never used.","'history' is assigned a value but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'patientResultRef'. Either include it or remove the dependency array.",["458"],"rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"459","text":"460"},"'res' is assigned a value but never used.","'child' is assigned a value but never used.","'test' is assigned a value but never used.","'Kid' is defined but never used.","'DataPicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"463","fix":"465"},{"desc":"466","fix":"467"},[262,263],"","Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, history]",{"range":"468","text":"469"},"Update the dependencies array to be: [listTest]",{"range":"470","text":"471"},{"range":"472","text":"471"},"Update the dependencies array to be: [patientResultRef]",{"range":"473","text":"474"},[2837,2846],"[currentUser.email, currentUser.emailVerified, history]",[2234,2236],"[listTest]",[4476,4478],[1650,1652],"[patientResultRef]"]