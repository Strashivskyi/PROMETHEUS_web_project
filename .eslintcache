[{"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\index.js":"1","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\App.js":"2","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js":"3","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js":"4","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js":"5","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js":"6","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js":"7","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js":"8","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx":"9","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx":"10","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx":"11","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx":"12","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx":"13","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx":"14","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\HomeTemplate.jsx":"15","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx":"16","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx":"17","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx":"18","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx":"19","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx":"20","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx":"21","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js":"22","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js":"23","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js":"24","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js":"25","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js":"26","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js":"27","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js":"28","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js":"29","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js":"30","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js":"31","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js":"32","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js":"33","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx":"34","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx":"35","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx":"36","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx":"37","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx":"38","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx":"39","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx":"40","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx":"41","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx":"42","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx":"43","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx":"44","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx":"45","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx":"46","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx":"47","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx":"48","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx":"49","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx":"50","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx":"51","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx":"52","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx":"53","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx":"54","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx":"55","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx":"56","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplatePublic.jsx":"57","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplate.jsx":"58","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js":"59","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js":"60","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js":"61","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx":"62","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx":"63","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx":"64","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx":"65","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx":"66","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx":"67","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx":"68","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx":"69","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmap.jsx":"70","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx":"71","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx":"72","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx":"73","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx":"74","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\Item.jsx":"75","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\ButtonsTemplate.jsx":"76","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ItemPublic.jsx":"77","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmapFile.jsx":"78"},{"size":452,"mtime":1616950243223,"results":"79","hashOfConfig":"80"},{"size":5190,"mtime":1616950243089,"results":"81","hashOfConfig":"80"},{"size":2031,"mtime":1616950243131,"results":"82","hashOfConfig":"80"},{"size":7128,"mtime":1616950243169,"results":"83","hashOfConfig":"80"},{"size":3059,"mtime":1616950243168,"results":"84","hashOfConfig":"80"},{"size":2434,"mtime":1616950243173,"results":"85","hashOfConfig":"80"},{"size":20524,"mtime":1616962413348,"results":"86","hashOfConfig":"80"},{"size":751,"mtime":1616950243177,"results":"87","hashOfConfig":"80"},{"size":4501,"mtime":1616950990968,"results":"88","hashOfConfig":"80"},{"size":422,"mtime":1616950243164,"results":"89","hashOfConfig":"80"},{"size":932,"mtime":1616950243142,"results":"90","hashOfConfig":"80"},{"size":2753,"mtime":1616950243160,"results":"91","hashOfConfig":"80"},{"size":2646,"mtime":1616950243160,"results":"92","hashOfConfig":"80"},{"size":302,"mtime":1616950243148,"results":"93","hashOfConfig":"80"},{"size":1992,"mtime":1616950243102,"results":"94","hashOfConfig":"80"},{"size":9718,"mtime":1616950243124,"results":"95","hashOfConfig":"80"},{"size":38215,"mtime":1616950243098,"results":"96","hashOfConfig":"80"},{"size":901,"mtime":1616950243109,"results":"97","hashOfConfig":"80"},{"size":970,"mtime":1616950243114,"results":"98","hashOfConfig":"80"},{"size":591,"mtime":1616950243179,"results":"99","hashOfConfig":"80"},{"size":595,"mtime":1616950243178,"results":"100","hashOfConfig":"80"},{"size":415,"mtime":1616950243179,"results":"101","hashOfConfig":"80"},{"size":4727,"mtime":1616954972625,"results":"102","hashOfConfig":"80"},{"size":4317,"mtime":1616955013446,"results":"103","hashOfConfig":"80"},{"size":2738,"mtime":1616955752406,"results":"104","hashOfConfig":"80"},{"size":5201,"mtime":1616954689860,"results":"105","hashOfConfig":"80"},{"size":11166,"mtime":1616950243128,"results":"106","hashOfConfig":"80"},{"size":3221,"mtime":1616950243172,"results":"107","hashOfConfig":"80"},{"size":1061,"mtime":1616950243094,"results":"108","hashOfConfig":"80"},{"size":2383,"mtime":1616968756925,"results":"109","hashOfConfig":"80"},{"size":1071,"mtime":1616950243096,"results":"110","hashOfConfig":"80"},{"size":2875,"mtime":1616950243095,"results":"111","hashOfConfig":"80"},{"size":1846,"mtime":1616950243146,"results":"112","hashOfConfig":"80"},{"size":2394,"mtime":1616968772602,"results":"113","hashOfConfig":"80"},{"size":24196,"mtime":1616950243164,"results":"114","hashOfConfig":"80"},{"size":6038,"mtime":1616950243165,"results":"115","hashOfConfig":"80"},{"size":12602,"mtime":1616950243144,"results":"116","hashOfConfig":"80"},{"size":22655,"mtime":1616962583670,"results":"117","hashOfConfig":"80"},{"size":1648,"mtime":1616950243156,"results":"118","hashOfConfig":"80"},{"size":39991,"mtime":1616950243109,"results":"119","hashOfConfig":"80"},{"size":21006,"mtime":1616950243116,"results":"120","hashOfConfig":"80"},{"size":21114,"mtime":1616950243115,"results":"121","hashOfConfig":"80"},{"size":1286,"mtime":1616950243106,"results":"122","hashOfConfig":"80"},{"size":3638,"mtime":1616950243108,"results":"123","hashOfConfig":"80"},{"size":3756,"mtime":1616950243107,"results":"124","hashOfConfig":"80"},{"size":2136,"mtime":1616950243116,"results":"125","hashOfConfig":"80"},{"size":4513,"mtime":1616950243122,"results":"126","hashOfConfig":"80"},{"size":2313,"mtime":1616950243121,"results":"127","hashOfConfig":"80"},{"size":1563,"mtime":1616950243157,"results":"128","hashOfConfig":"80"},{"size":3232,"mtime":1616950243158,"results":"129","hashOfConfig":"80"},{"size":8159,"mtime":1616950243123,"results":"130","hashOfConfig":"80"},{"size":1216,"mtime":1616950243104,"results":"131","hashOfConfig":"80"},{"size":1351,"mtime":1616950243101,"results":"132","hashOfConfig":"80"},{"size":22434,"mtime":1616950243154,"results":"133","hashOfConfig":"80"},{"size":40624,"mtime":1616950243149,"results":"134","hashOfConfig":"80"},{"size":2685,"mtime":1616950243158,"results":"135","hashOfConfig":"80"},{"size":2393,"mtime":1616950243119,"results":"136","hashOfConfig":"80"},{"size":2903,"mtime":1616950243119,"results":"137","hashOfConfig":"80"},{"size":1033,"mtime":1616950243171,"results":"138","hashOfConfig":"80"},{"size":733,"mtime":1616950243126,"results":"139","hashOfConfig":"80"},{"size":948,"mtime":1616950243147,"results":"140","hashOfConfig":"80"},{"size":1974,"mtime":1616950243130,"results":"141","hashOfConfig":"80"},{"size":2819,"mtime":1616950243094,"results":"142","hashOfConfig":"80"},{"size":1219,"mtime":1616950243103,"results":"143","hashOfConfig":"80"},{"size":2581,"mtime":1616950243117,"results":"144","hashOfConfig":"80"},{"size":3075,"mtime":1616950243163,"results":"145","hashOfConfig":"80"},{"size":9831,"mtime":1616950243162,"results":"146","hashOfConfig":"80"},{"size":3665,"mtime":1616950243161,"results":"147","hashOfConfig":"80"},{"size":4318,"mtime":1616950243139,"results":"148","hashOfConfig":"80"},{"size":5264,"mtime":1616950243175,"results":"149","hashOfConfig":"80"},{"size":1954,"mtime":1616950243140,"results":"150","hashOfConfig":"80"},{"size":1369,"mtime":1616950243112,"results":"151","hashOfConfig":"80"},{"size":1689,"mtime":1616950243150,"results":"152","hashOfConfig":"80"},{"size":1345,"mtime":1616950243153,"results":"153","hashOfConfig":"80"},{"size":2090,"mtime":1616950243105,"results":"154","hashOfConfig":"80"},{"size":1611,"mtime":1616950243117,"results":"155","hashOfConfig":"80"},{"size":2809,"mtime":1616950243106,"results":"156","hashOfConfig":"80"},{"size":4271,"mtime":1616950243175,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1e48pjd",{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"160"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"160"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"160"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"160"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"160"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"160"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"160"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"160"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"160"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"160"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"160"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"160"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"160"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"160"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"160"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"160"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"160"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"160"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"160"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"160"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"160"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"160"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"160"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"160"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"160"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"160"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"160"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"160"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"160"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"160"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"160"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"160"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"160"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"160"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"160"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"160"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"160"},"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\index.js",[],["384","385"],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\App.js",["386"],"import './App.css'\r\nimport SignUp from './Components/Login/SignUp'\r\nimport SignIn from './Components/SignIn/SignIn'\r\nimport Patient from './Components/Patient/Patient'\r\nimport ForgetPassword from './Components/SignIn/ForgetPassword'\r\nimport PrivateRouteToReg from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport RenderProgram from './Components/Program/ProgramBranching'\r\nimport {AuthProvider} from './Firebase/AuthSetup/Auth'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport PrivateRouteToLogin from './Firebase/AuthSetup/PrivateRoute/PrivateRouteToLogin'\r\nimport PatientInfoRender from './Components/PatientInfo/PatientInfoBranching'\r\nimport RenderProgramList from './Components/ProtocolList/ProtocolListBranching'\r\nimport TherapyResult from './Components/TherapyResult/TherapyResult'\r\nimport RegistrationPatient from './Components/RegistrationPatient/RegPatientPage'\r\nimport ProgramTemplate from './Components/ProgramTemplate/ProgramTemplate'\r\nimport HomeTemplate from './Components/HomeTemplate/HomeTemplate'\r\nimport ProgramTemplatePublic from './Components/ProgramTemplate/ProgramTemplatePublic'\r\nimport ProtocolListTemplate from './Components/HomeTemplate/TemplateProtocolList/ProtocolListTemplate'\r\nimport ProgramEditableTemplate from './Components/HomeTemplate/EditProgramTemplate/ProgramEditableTemplate'\r\nimport ListMoreInfoTemplate from './Components/HomeTemplate/TemplateMoreInfo/ListMoreInfoTemplate'\r\nimport ProgramTemplateView from './Components/HomeTemplate/TemplateMoreInfo/ProgramTemplateView'\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <HashRouter>\r\n                <AuthProvider>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={SignIn} />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home\"\r\n                            component={Patient}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/forgetPassword\"\r\n                            component={ForgetPassword}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program\"\r\n                            component={RenderProgram}\r\n                        />\r\n                        <PrivateRouteToReg\r\n                            path=\"/registration\"\r\n                            component={SignUp}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/protocol-list\"\r\n                            component={RenderProgramList}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient\"\r\n                            component={PatientInfoRender}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient/result_of_therapy\"\r\n                            component={TherapyResult}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/patient_registration\"\r\n                            component={RegistrationPatient}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template\"\r\n                            component={ProgramTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/home-template\"\r\n                            component={HomeTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/public-template\"\r\n                            component={ProgramTemplatePublic}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/create-template\"\r\n                            component={ProtocolListTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/program-template-edit\"\r\n                            component={ProgramEditableTemplate}\r\n                        />\r\n\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info\"\r\n                            component={ListMoreInfoTemplate}\r\n                        />\r\n                        <PrivateRouteToLogin\r\n                            exact\r\n                            path=\"/template-more-info-protocol\"\r\n                            component={ProgramTemplateView}\r\n                        />\r\n                    </Switch>\r\n                </AuthProvider>\r\n            </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUp.js",["387","388","389"],"import SignUpForm1 from './SignUpForm1'\r\nimport SignUpForm2 from './SignUpForm2'\r\nimport UserRoleChoosing from './UserRoleChoosing'\r\nimport SignUpForm4 from './SignUpForm4'\r\nimport PrivateRouteToReg from '../../Firebase/AuthSetup/PrivateRoute/PrivateRouteToReg'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport MobileRegistration from './MobileRegistration'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport './Login1.css'\r\n\r\nfunction SignUp() {\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            {/* <MobileRegistration/> */}\r\n            <div className=\"image-form-division-sign-up\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-up-text\">Реєстрація</div>\r\n                    <HashRouter>\r\n                        <Switch>\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration\"\r\n                                component={UserRoleChoosing}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup2\"\r\n                                component={SignUpForm1}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup3\"\r\n                                component={SignUpForm2}\r\n                            />\r\n                            <PrivateRouteToReg\r\n                                exact\r\n                                path=\"/registration/signup4\"\r\n                                component={SignUpForm4}\r\n                            />\r\n                        </Switch>\r\n                    </HashRouter>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\SignIn\\SignIn.js",["390","391","392","393","394"],"import React, {useCallback, useContext} from 'react'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './SignIn.css'\r\nimport {AuthContext} from '../../Firebase/AuthSetup/Auth'\r\nimport {Link} from 'react-router-dom'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\n\r\nfunction SignIn({history}) {\r\n    const {currentUser} = useContext(AuthContext)\r\n    const handleLogin = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const {email, password} = event.target.elements\r\n\r\n            const db = app.firestore()\r\n            await db\r\n                .collection('Users')\r\n                .where('Email', '==', email.value)\r\n                .onSnapshot((snapshot) => {\r\n                    if (snapshot.size) {\r\n                        snapshot.docs.map((doc) => {\r\n                            localStorage.setItem(\r\n                                'proffesion',\r\n                                doc.data().Profession\r\n                            )\r\n                        })\r\n                    } else {\r\n                        console.log('Немає професії')\r\n                    }\r\n                })\r\n            // .collection('Patient')\r\n            // .doc(localStorage.getItem('child'))\r\n            // .collection('Protocols')\r\n            // .doc(localStorage.getItem('program'))\r\n            // .collection('Stimulus')\r\n            // .onSnapshot((snapshot) => {\r\n            //     if (snapshot.size) {\r\n            //         setStimulus(\r\n            //             snapshot.docs.map((doc) => ({\r\n            //                 ...doc.data(),\r\n            //                 id: doc.id,\r\n            //             }))\r\n            //         )\r\n            //         console.log('Сука ')\r\n            //     } else {\r\n            //         console.log('Сука1')\r\n            //     }\r\n            // })\r\n\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value)\r\n                if (currentUser.emailVerified == true) {\r\n                    await db\r\n                        .collection('Users')\r\n                        .where('Email', '==', email.value)\r\n                        .onSnapshot((snapshot) => {\r\n                            if (snapshot.size) {\r\n                                snapshot.docs.map((doc) => {\r\n                                    localStorage.setItem(\r\n                                        'proffesion',\r\n                                        doc.data().Profession\r\n                                    )\r\n                                })\r\n                            } else {\r\n                                console.log('Немає професії')\r\n                            }\r\n                        })\r\n\r\n                    localStorage.setItem('user', currentUser.email)\r\n                    history.push('/home')\r\n                } else {\r\n                    toast.loading(\r\n                        'Будь ласка, підтвердьте свою електронну пошту...'\r\n                    )\r\n                }\r\n            } catch (error) {\r\n                if (!error.toString().includes('TypeError')) {\r\n                    toast.error(error.toString())\r\n                }\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n    if (currentUser && currentUser.emailVerified == true) {\r\n        localStorage.setItem('user', currentUser.email)\r\n        return <Redirect to=\"/home\" />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <div className=\"light_blue_back\">\r\n                <div className=\"image-form-division\">\r\n                    <div className=\"image\" />\r\n                    <div className=\"form\">\r\n                        <div className=\"sign-in-text\"> Увійти на сайт</div>\r\n                        <form className=\"login_form\" onSubmit={handleLogin}>\r\n                            <div className=\"mobile_signin_label\">Email</div>\r\n                            <div className=\"login_text_input\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"fname\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"mobile_signin_label\">Пароль</div>\r\n                            <div className=\"login_text_input_second\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"lname\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Пароль\"\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                class=\"slide-hover-left-3\"\r\n                                type=\"submit\"\r\n                                value=\"Увійти\"\r\n                            />\r\n                        </form>\r\n                        <div className=\"still_no_acc\">\r\n                            <span className=\"still_no_acc_text\">\r\n                                Досі немає акаунту? &nbsp;&nbsp;&nbsp;\r\n                            </span>{' '}\r\n                            <Link className=\"login_link_reg\" to=\"/registration\">\r\n                                Зареєструватись\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"forgot_password\">\r\n                            <span className=\"forgot_password_text\">\r\n                                Забули пароль? &nbsp;&nbsp;&nbsp;\r\n                            </span>{' '}\r\n                            <Link\r\n                                className=\"login_link_reg\"\r\n                                to=\"/forgetPassword\"\r\n                            >\r\n                                Відновити пароль\r\n                            </Link>\r\n                        </div>\r\n                        <Toaster\r\n                            position=\"bottom-top\"\r\n                            reverseOrder={false}\r\n                            toastOptions={{\r\n                                style: {\r\n                                    minWidth: '430px',\r\n                                    minHeight: '60px',\r\n                                    paddingLeft: '20px',\r\n                                },\r\n                                loading: {\r\n                                    duration: 5000,\r\n                                    icon: '✉️',\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(SignIn)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\SignIn\\ForgetPassword.js",["395","396","397","398","399"],"import React, {useCallback, useContext} from 'react'\r\nimport {useState} from 'react'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport {Link} from 'react-router-dom'\r\nimport {useHistory} from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport '../Login/Login1.css'\r\nimport './ForgetPassword.css'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\n\r\nfunction recover(Email, history) {\r\n    app.auth()\r\n        .sendPasswordResetEmail(Email)\r\n        .then(function (user) {\r\n            toast.loading('Будь ласка, перевірте свою електронну пошту...')\r\n            history.push('/')\r\n        })\r\n        .catch(function (e) {\r\n            toast.error('Помилка')\r\n        })\r\n}\r\n\r\nfunction ForgetPassword() {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    console.log(email)\r\n    return (\r\n        <>\r\n            <div className=\"image-form-division\">\r\n                <div className=\"image\" />\r\n                <div className=\"form\">\r\n                    <div className=\"sign-up-text\"> Відновлення паролю</div>\r\n                    <form className=\"forget_form\">\r\n                        <div>\r\n                            **Якщо Ви забули свій пароль, будь ласка, введіть\r\n                            поточну електронну адресу і перевірте свою пошту.\r\n                            Вам має прийти лист з посиланням,за яким Ви повинні\r\n                            перейти і ввести новий пароль.\r\n                        </div>\r\n                        <input\r\n                            className=\"forget_text_input\"\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        <p\r\n                            className=\"forget_submit\"\r\n                            onClick={() => recover(email, history)}\r\n                        >\r\n                            Відправити\r\n                        </p>\r\n                    </form>\r\n                    <Toaster\r\n                        position=\"bottom-top\"\r\n                        reverseOrder={false}\r\n                        toastOptions={{\r\n                            style: {\r\n                                minWidth: '430px',\r\n                                minHeight: '60px',\r\n                                paddingLeft: '20px',\r\n                            },\r\n                            loading: {\r\n                                duration: 5000,\r\n                                icon: '✉️',\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ForgetPassword\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\TherapyResult.js",["400","401","402"],"import React from 'react'\r\nimport Header from '../Header/Header'\r\nimport './TherapyResult.css'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport PaginationRounded from './Pagination'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nfunction TherapyResult({history}) {\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{marginTop: '10px'}}\r\n            >\r\n                <h2 style={{marginLeft: '100px'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link to=\"/patient\" className=\"patients_link\">\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        style={{color: '#666666', cursor: 'default'}}\r\n                        className=\"patients_link\"\r\n                        to=\"/protocol-list\"\r\n                    >\r\n                        Результати терапії\r\n                    </Link>\r\n                </h2>\r\n            </div>\r\n            <div className=\"container\">\r\n                <p class=\"choose-file-title\">\r\n                    Натисніть на файл, щоб завантажити його\r\n                </p>\r\n                <br />\r\n                <br />\r\n                <PaginationRounded history={history} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(TherapyResult)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\RegistrationPatient\\RegPatientPage.js",["403","404","405","406","407","408","409","410","411","412","413","414"],"import React, {useState, createRef} from 'react'\r\nimport SimpleHeader from '../Header/SimpleHeader'\r\nimport {Link} from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport {Avatar, Button as MuiButton} from '@material-ui/core'\r\nimport {spacing} from '@material-ui/system'\r\nimport styled from 'styled-components'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport app from '../../Firebase/firebase'\r\nimport './RegPatientPage.css'\r\nimport default_avatar from '../../assets/default_avatar.png'\r\nimport Redirect, {withRouter} from 'react-router'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\n\r\n/* -\r\n----------------------------\r\n|  Style components block  |\r\n----------------------------\r\n */\r\nconst Button = styled(MuiButton)(spacing)\r\n\r\nconst CenteredContent = styled.div`\r\n    text-align: center;\r\n`\r\n\r\n/* -\r\n------------------------\r\n|    Main component    |\r\n------------------------\r\n */\r\n\r\nconst currenciesGenders = [\r\n    {\r\n        value: 'чоловік',\r\n        label: 'чоловік',\r\n    },\r\n    {\r\n        value: 'жінка',\r\n        label: 'жінка',\r\n    },\r\n    {\r\n        value: 'інше',\r\n        label: 'інше',\r\n    },\r\n]\r\n\r\n// const currenciesBlood = [\r\n//     {\r\n//         value: '4+',\r\n//         label: '4+',\r\n//     },\r\n//     {\r\n//         value: '4-',\r\n//         label: '4-',\r\n//     },\r\n//     {\r\n//         value: '3+',\r\n//         label: '3+',\r\n//     },\r\n//     {\r\n//         value: '3-',\r\n//         label: '3-',\r\n//     },\r\n//     {\r\n//         value: '2+',\r\n//         label: '2+',\r\n//     },\r\n//     {\r\n//         value: '2-',\r\n//         label: '2-',\r\n//     },\r\n//     {\r\n//         value: '1+',\r\n//         label: '1+',\r\n//     },\r\n//     {\r\n//         value: '1-',\r\n//         label: '1-',\r\n//     },\r\n//     {\r\n//         value: 'None',\r\n//         label: 'None',\r\n//     },\r\n// ]\r\n\r\nfunction RegistrationPatient({history}) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        rootForTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '28ch',\r\n            },\r\n        },\r\n        rootForSubTitle: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        rootForDate: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '15ch',\r\n            },\r\n        },\r\n        root: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '25ch',\r\n            },\r\n        },\r\n    }))\r\n    const classes = useStyles()\r\n    const [name, setName] = useState('')\r\n    const [diagnose, setDiagnose] = useState('')\r\n    const [parents, setParents] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [age, setAge] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [country, setCountry] = useState('')\r\n    // const [weight, setWeight] = useState('')\r\n    // const [height, setHeight] = useState('')\r\n    // const [blood, setBlood] = useState('')\r\n    const [image, _setImage] = useState(null)\r\n    const [imageBase64String, setImageBase64String] = useState(default_avatar)\r\n    const inputFileRef = createRef(null)\r\n\r\n    // FOR IMAGE\r\n    const cleanup = () => {\r\n        URL.revokeObjectURL(image)\r\n        inputFileRef.current.value = null\r\n    }\r\n\r\n    const setImage = (newImage) => {\r\n        if (image) {\r\n            cleanup()\r\n        }\r\n        _setImage(newImage)\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        const newImage = event.target?.files?.[0]\r\n        if (newImage) {\r\n            setImage(URL.createObjectURL(newImage))\r\n        }\r\n        const reader = new FileReader()\r\n        reader.onloadend = () => {\r\n            setImageBase64String(reader.result)\r\n        }\r\n        reader.readAsDataURL(newImage)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {React.MouseEvent<HTMLButtonElement, MouseEvent>} event\r\n     */\r\n    const handleClick = (event) => {\r\n        if (image) {\r\n            event.preventDefault()\r\n            setImage(null)\r\n        }\r\n    }\r\n\r\n    //FOR INPUTS\r\n    const db = app.firestore()\r\n\r\n    const nameChange = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n    const diagnoseChange = (event) => {\r\n        setDiagnose(event.target.value)\r\n    }\r\n    const parentsChange = (event) => {\r\n        setParents(event.target.value)\r\n    }\r\n    const genderChange = (event) => {\r\n        setGender(event.target.value)\r\n    }\r\n    const ageChange = (event) => {\r\n        setAge(event.target.value)\r\n    }\r\n    const dateChange = (event) => {\r\n        setDate(event.target.value)\r\n        console.log(date)\r\n    }\r\n    const cityChange = (event) => {\r\n        setCity(event.target.value)\r\n    }\r\n    const countryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    // const weightChange = (event) => {\r\n    //     setWeight(event.target.value)\r\n    // }\r\n    // const heightChange = (event) => {\r\n    //     setHeight(event.target.value)\r\n    //     console.log(height)\r\n    // }\r\n    // const bloodChange = (event) => {\r\n    //     setBlood(event.target.value)\r\n    //     console.log(blood)\r\n    // }\r\n\r\n    async function handleSubmit(history) {\r\n        if (\r\n            name == '' ||\r\n            diagnose == '' ||\r\n            parents == '' ||\r\n            gender == '' ||\r\n            age == '' ||\r\n            date == '' ||\r\n            city == '' ||\r\n            country == ''\r\n        ) {\r\n            toast.error('Заповніть всі поля!')\r\n        } else {\r\n            const res = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .add({\r\n                    Name: name,\r\n                    Diagnos: diagnose,\r\n                    Parents: parents,\r\n                    Gender: gender,\r\n                    Age: age,\r\n                    BirthDate: date,\r\n                    City: city,\r\n                    Country: country,\r\n                    // KidWeight: weight,\r\n                    // KidHeight: height,\r\n                    // BloodType: blood,\r\n                    Image: imageBase64String,\r\n                    Supervisor: localStorage.getItem('user'),\r\n                })\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"general_container\">\r\n            <MobileHeader />\r\n            <SimpleHeader />\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{marginTop: '10px'}}\r\n            >\r\n                <h2 style={{marginLeft: '100px'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2\r\n                    style={{\r\n                        color: 'GrayText',\r\n                    }}\r\n                >\r\n                    Реєстрація пацієнта\r\n                </h2>\r\n            </div>\r\n            {/* --------------------------------- */}\r\n            {/* --------  Main  content  -------- */}\r\n            {/* --------------------------------- */}\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"avatar-reg-wrapper\">\r\n                    <CenteredContent>\r\n                        <Avatar\r\n                            alt=\"Avatar\"\r\n                            src={image}\r\n                            variant=\"square\"\r\n                            style={{\r\n                                marginLeft: 'auto',\r\n                                width: '256px',\r\n                                height: '256px',\r\n                                marginLeft: 'auto',\r\n                            }}\r\n                        />\r\n                        <input\r\n                            ref={inputFileRef}\r\n                            accept=\"image/*\"\r\n                            hidden\r\n                            id=\"avatar-image-upload\"\r\n                            type=\"file\"\r\n                            onChange={handleOnChange}\r\n                        />\r\n                        <label htmlFor=\"avatar-image-upload\">\r\n                            <Button\r\n                                className=\"upload-image-btn\"\r\n                                variant=\"contained\"\r\n                                color=\"grey\"\r\n                                component=\"span\"\r\n                                mb={2}\r\n                                onClick={handleClick}\r\n                            >\r\n                                {image ? 'Очистити' : 'Завантажити'}\r\n                            </Button>\r\n                        </label>\r\n                    </CenteredContent>\r\n                </div>\r\n                <div className=\"column-direction-list\">\r\n                    {/* Start of inputs */}\r\n                    <div\r\n                        className={classes.rootForTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-title\">\r\n                            <div className=\"label-area\">Ім'я та Прізвище:</div>\r\n\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => nameChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={classes.rootForSubTitle}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <div className=\"patient-subtitle\">\r\n                            <div className=\"patient-subtitle-label\">\r\n                                Діагноз:\r\n                            </div>\r\n                            <TextField\r\n                                require\r\n                                className=\"patient-subtitle-input\"\r\n                                color=\"secondary\"\r\n                                onChange={(event) => diagnoseChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"zebra-table\">\r\n                            <div className=\"zebra-table-left-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Батьки:</div>\r\n\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        onChange={(event) =>\r\n                                            parentsChange(event)\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Стать:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={gender}\r\n                                        onChange={(event) =>\r\n                                            genderChange(event)\r\n                                        }\r\n                                    >\r\n                                        {currenciesGenders.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вік:</div>\r\n                                    <TextField\r\n                                        className=\"big_input\"\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) => ageChange(event)}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    років\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Дата народження:\r\n                                    </div>\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        className={classes.textField}\r\n                                        color=\"secondary\"\r\n                                        size=\"medium\"\r\n                                        onChange={(event) => dateChange(event)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Місто:</div>\r\n                                    <TextField\r\n                                        onChange={(event) => cityChange(event)}\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Країна:</div>\r\n                                    <TextField\r\n                                        onChange={(event) =>\r\n                                            countryChange(event)\r\n                                        }\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"zebra-table-right-part\">\r\n                                <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">Вага:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            weightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    кг\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"white-stipe-zebra\">\r\n                                    <div className=\"label-area\">Зріст:</div>\r\n                                    <TextField\r\n                                        color=\"secondary\"\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        onChange={(event) =>\r\n                                            heightChange(event)\r\n                                        }\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    см\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                </div> */}\r\n                            {/* <div className=\"grey-stripe-zebra\">\r\n                                    <div className=\"label-area\">\r\n                                        Група крові:\r\n                                    </div> */}\r\n                            {/* <TextField\r\n                                        color=\"secondary\"\r\n                                        select\r\n                                        value={blood}\r\n                                        onChange={(event) => bloodChange(event)}\r\n                                    >\r\n                                        {currenciesBlood.map((option) => (\r\n                                            <MenuItem\r\n                                                key={option.value}\r\n                                                value={option.value}\r\n                                            >\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField> */}\r\n                            {/* </div> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"save_button save_button_add_patient btn-background-slide\"\r\n                        onClick={() => handleSubmit(history)}\r\n                        value=\"Зберегти\"\r\n                    >\r\n                        {' '}\r\n                        Зберегти{' '}\r\n                    </button>\r\n\r\n                    <Toaster\r\n                        position=\"bottom-top\"\r\n                        reverseOrder={false}\r\n                        toastOptions={{\r\n                            style: {\r\n                                minWidth: '350px',\r\n                                minHeight: '60px',\r\n                                paddingLeft: '20px',\r\n                            },\r\n                            error: {\r\n                                duration: 5000,\r\n                                icon: '⚠️',\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(RegistrationPatient)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\Auth.js",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Patient\\Patient.jsx",["415","416","417","418","419","420","421","422"],"import app from '../../Firebase/firebase'\r\nimport PatientItem from '../PatientItem/PatientItem'\r\nimport React from 'react'\r\nimport HeaderHomeTemplate from '../Header/HeaderHomeTemplate'\r\nimport './Patients.css'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport {Link} from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport {useEffect, useState} from 'react'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport {GoPrimitiveDot} from 'react-icons/go'\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction Patient() {\r\n    let [patients, setPatients] = useState([])\r\n    let [user, setUser] = useState([])\r\n    const [inputSearch, setInputSearch] = useState('')\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setUser(\r\n                        snapshot.docs\r\n                            .filter((u) =>\r\n                                u.id.includes(localStorage.getItem('user'))\r\n                            )\r\n                            .map((doc) => {\r\n                                localStorage.setItem(\r\n                                    'telegramUserName',\r\n                                    doc.data().TelegramUserID\r\n                                )\r\n                            })\r\n                    )\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    localStorage.setItem('templateType', 'private')\r\n    localStorage.setItem('homeType', 'home')\r\n\r\n    patients = patients.filter((protocol) =>\r\n        protocol.Name.includes(inputSearch)\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <MobileHeader />\r\n                <Link\r\n                    to=\"/home-template\"\r\n                    className=\"mobile_home_link_templates\"\r\n                >\r\n                    Шаблони\r\n                </Link>\r\n                <HeaderHomeTemplate />\r\n            </>\r\n            <div className=\"info_title\">\r\n                <div className=\"inter_fing\">\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '45px',\r\n                            fontSize: '25px',\r\n                            color: '#6F6F6F',\r\n                            fontWeight: '700',\r\n                        }}\r\n                    >\r\n                        Пацієнти\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            marginLeft: '105px',\r\n                            marginTop: '40px',\r\n                            marginBottom: '20px',\r\n\r\n                            fontSize: '20px',\r\n                            color: '#48535f',\r\n                        }}\r\n                    >\r\n                        Кількість: {patients.length}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Link\r\n                to=\"/patient_registration\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '11.5rem',\r\n                    right: '10rem',\r\n                    color: 'grey',\r\n                }}\r\n                className=\"add_patient_button\"\r\n            >\r\n                <BranchingItem />\r\n            </Link>\r\n            <PatientItem patients={patients} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Patient\r\nfunction BranchingItem() {\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return (\r\n            <>\r\n                <BsPlusCircle size={50} />\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('proffesion') !== 'Supervisors') {\r\n        return <></>\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListBranching.jsx",["423","424","425","426"],"import {useState, useEffect} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolListSuperVisor from './ProtocolList'\r\nimport ProtocolListTherapist from './ProtocolListTherapist'\r\n\r\nexport default function RenderProgramList() {\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <ProtocolListSuperVisor />\r\n    } else {\r\n        return <ProtocolListTherapist />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoBranching.jsx",["427","428","429"],"import React, {useState, useEffect} from 'react'\r\nimport PatientInfoTherapist from './PatientInfoTherapist'\r\nimport PatientInfoUser from './PatientInfoUser'\r\nimport app from '../../Firebase/firebase'\r\nexport default function PatientInfoRender() {\r\n    const db = app.firestore()\r\n    console.log(\r\n        db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .get()\r\n            .then((doc) => {\r\n                if (!doc.exists) {\r\n                    console.log('No such document!')\r\n                } else {\r\n                    localStorage.setItem('Name', doc.data().Name)\r\n                    localStorage.setItem('Surname', doc.data().Surname)\r\n                }\r\n            })\r\n    )\r\n    if (localStorage.getItem('proffesion') == 'Supervisors') {\r\n        return <PatientInfoUser />\r\n    } else {\r\n        return <PatientInfoTherapist />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplate.jsx",["430","431"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/Item'\r\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\r\nimport './ButtonsTemplate.css'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nfunction ProgramTemplate({history}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"choose_create_way\">\r\n                <span className=\"template_way\">Обрати шаблон &nbsp;</span>{' '}\r\n                <span className=\"template_way\">або &nbsp;</span>{' '}\r\n                <Link className=\"new_program_way\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ProgramTemplatePublic.jsx",["432","433"],"import './ProgramTemplate.css'\r\nimport Delete from '../../assets/delete.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport Header from '../Header/Header'\r\nimport AHeader from './PageComponentTemplate/AHeader'\r\nimport TemplateItem from './PageComponentTemplate/ItemPublic'\r\nimport './ButtonsTemplate'\r\nimport ButtonsTemplate from '../ProgramTemplate/ButtonsTemplate'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nfunction ProgramTemplate({history}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <AHeader />\r\n            <div className=\"choose_create_way\">\r\n                <span className=\"template_way\">Обрати шаблон &nbsp;</span>{' '}\r\n                <span className=\"template_way\">або &nbsp;</span>{' '}\r\n                <Link className=\"new_program_way\" to=\"/protocol-list\">\r\n                    Створити пусту програму\r\n                </Link>\r\n            </div>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(ProgramTemplate)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramBranching.jsx",["434"],"import ProgramEditable from './ProgramEditable'\r\nimport ProgramOnlyView from './ProgramOnlyView'\r\n\r\nexport default function RenderProgram() {\r\n    if (localStorage.getItem('proffesion') == 'Therapists') {\r\n        return <ProgramOnlyView />\r\n    } else {\r\n        return <ProgramEditable />\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\HomeTemplate.jsx",["435","436"],"import HeaderHomeTemplate from '../Header/HeaderHomeTemplate'\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport HomeProgramTemplate from './TemplatePages/HomeProgramTemplate'\r\nimport HomeProgramTemplatePublic from './TemplatePages/HomeProgramTemplatePublic'\r\nfunction HomeTemplate(params) {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    console.log('БЛЯЯЯЯЯ' + protocols.length)\r\n    // localStorage.setItem(\"newTemplateCount\",protocols.length)\r\n    return (\r\n        <>\r\n            <HeaderHomeTemplate />\r\n            {/* <ArrowHeader /> */}\r\n            <RenderTemplateType\r\n                protocols={protocols}\r\n                type={localStorage.getItem('templateType')}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeTemplate\r\nfunction RenderTemplateType({protocols, type}) {\r\n    if (type == 'private') {\r\n        return (\r\n            <>\r\n                <HomeProgramTemplate countProto={protocols.length} />\r\n            </>\r\n        )\r\n    }\r\n    if (type == 'public') {\r\n        return (\r\n            <>\r\n                <HomeProgramTemplatePublic countProto={protocols.length} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolListTemplate.jsx",["437"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItem from './ProtocolItem'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeader from './ArrowHeader'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\nimport Popup from './Popup'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nimport {withRouter} from 'react-router'\r\nimport './ProtocolListTemplate.css'\r\nfunction ProtocolListTemplate({history}) {\r\n    let test = []\r\n    localStorage.setItem('homeType', 'createTemplate')\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\r\n    function dragStartHandler(event, protocol) {\r\n        console.log('DRAG' + protocol.ProtocolId)\r\n        setcurrrentProtocoll(protocol)\r\n    }\r\n    function dragEndHandler(event, protocol) {\r\n        event.target.style.border = 'none'\r\n    }\r\n    function dragOverHandler(event) {\r\n        event.preventDefault()\r\n        event.target.style.border = 'solid 3px #c9c9c9'\r\n    }\r\n\r\n    function dropHandler(event, protocol) {\r\n        const db = app.firestore()\r\n        event.preventDefault()\r\n        event.target.style.border = 'none'\r\n        console.log('DROP' + protocol.ProtocolId)\r\n        setProtocols(\r\n            protocols.map((proto) => {\r\n                if (proto.ProtocolId == protocol.ProtocolId) {\r\n                    db.collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('CreateTemplate')\r\n                        .doc(currrentProtocoll.id)\r\n                        .update({ProtocolId: protocol.ProtocolId})\r\n                    db.collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('CreateTemplate')\r\n                        .doc(protocol.id)\r\n                        .update({ProtocolId: currrentProtocoll.ProtocolId})\r\n                }\r\n\r\n                return proto\r\n            })\r\n        )\r\n    }\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <HeaderHomeTemplate />\r\n            <ArrowHeader />\r\n            <button\r\n                class=\"create_template_button btn-background-slide\"\r\n                onClick={togglePopup}\r\n            >\r\n                Зберегти шаблон\r\n            </button>\r\n            <div\r\n                onClick={() => addProto(protocols.length)}\r\n                className=\"add-proto-mobile\"\r\n            >\r\n                <BsPlusCircle />\r\n            </div>\r\n\r\n            {isOpen && (\r\n                <Popup\r\n                    protocols={protocols}\r\n                    content={\r\n                        <>\r\n                            <b className=\"text_modul\">\r\n                                Будь ласка, оберіть тип даного шаблону:\r\n                            </b>\r\n                            <div className=\"button_modul\"></div>\r\n                        </>\r\n                    }\r\n                    handleClose={togglePopup}\r\n                />\r\n            )}\r\n            <div className=\"create_element\">\r\n                {protocolsNumber.map((protocol) => (\r\n                    <>\r\n                        <div\r\n                            draggable=\"true\"\r\n                            onDragStart={(event) => {\r\n                                dragStartHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragLeave={(event) => {\r\n                                dragEndHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragEnd={(event) => {\r\n                                dragEndHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragOver={(event) => {\r\n                                dragOverHandler(event)\r\n                            }}\r\n                            onDrop={(event) => {\r\n                                dropHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                        >\r\n                            <ProtocolItem\r\n                                protocols={protocols}\r\n                                number={protocol}\r\n                                protocolId={protocols[protocol - 1].id}\r\n                                protocolName={\r\n                                    protocols[protocol - 1].ProtocolId\r\n                                }\r\n                                sphereOfDevelopment={\r\n                                    protocols[protocol - 1].SphereOfDevelopment\r\n                                }\r\n                                length={protocols.length}\r\n                                skill={protocols[protocol - 1].Skill}\r\n                                statusCopied={\r\n                                    protocols[protocol - 1].StatusCopied\r\n                                }\r\n                                isActive={protocols[protocol - 1].IsActive}\r\n                                interval={protocols[protocol - 1].Interval}\r\n                                correctionProcedureStep1={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep1\r\n                                }\r\n                                correctionProcedureStep2={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep2\r\n                                }\r\n                                correctionProcedureStep3={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep3\r\n                                }\r\n                                criterionIncrease={\r\n                                    protocols[protocol - 1].CriterionIncrease\r\n                                }\r\n                                desirableReaction={\r\n                                    protocols[protocol - 1].DesirableReaction\r\n                                }\r\n                                method={protocols[protocol - 1].Method}\r\n                                methodTakingHint={\r\n                                    protocols[protocol - 1].MethodTakingHint\r\n                                }\r\n                                reductionСriterion={\r\n                                    protocols[protocol - 1].ReductionСriterion\r\n                                }\r\n                                stepDescription={\r\n                                    protocols[protocol - 1].StepDescription\r\n                                }\r\n                                CriteriongenGenerSkill={\r\n                                    protocols[protocol - 1]\r\n                                        .CriteriongenGenerSkill\r\n                                }\r\n                                instruction1={\r\n                                    protocols[protocol - 1].Instructions1\r\n                                }\r\n                                instruction2={\r\n                                    protocols[protocol - 1].Instructions2\r\n                                }\r\n                                instruction3={\r\n                                    protocols[protocol - 1].Instructions3\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ))}\r\n                {/* </ReactSortable> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .add({\r\n            ProtocolId: +length + 1,\r\n            SphereOfDevelopment: '',\r\n            Skill: '',\r\n            IsActive: '',\r\n            Interval: '',\r\n            CorrectionProcedureStep1: '',\r\n            CorrectionProcedureStep2: '',\r\n            CorrectionProcedureStep3: '',\r\n            CriterionIncrease: '',\r\n            DesirableReaction: '',\r\n            Method: '',\r\n            MethodTakingHint: '',\r\n            ReductionСriterion: '',\r\n            StepDescription: '',\r\n            CriteriongenGenerSkill: '',\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\n\r\nexport default withRouter(ProtocolListTemplate)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramEditableTemplate.jsx",["438","439","440","441","442","443","444"],"import {TextInput} from 'react-native-paper'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeader from '../PageComponent/ArrowHeaderSimple'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\nimport ProgramHeader from '../../Header/ProgramHeader'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({protocol}) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({StatusCopied: ''})\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditableTemplate() {\r\n    localStorage.setItem('templateType', 'editProgram')\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати сферу розвитку...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати навик...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати метод...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати бажану реакцію...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            <TextInput\r\n                                                placeholder=\"Вказати критерій...\"\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={\r\n                                                    protocol.CriteriongenGenerSkill\r\n                                                }\r\n                                                style={{fontSize: '20px'}}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: {\r\n                                                        background: '#fcfcfc',\r\n                                                    },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {backgroundColor: 'white'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                        minWidth: 'auto',\r\n                                        maxWidth: 'auto',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        className=\"select_way\"\r\n                                    >\r\n                                        <option value=\"false\"></option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div className=\"add_stymul_container\">\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_stymul_button\"\r\n                                            >\r\n                                                +\r\n                                            </button>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setStimulInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати стимул....\"\r\n                                                className=\"add_stymul_input\"\r\n                                            />\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати опис етапів...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background=\"white\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'white'},\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions1}\r\n                                    onChange={(event) =>\r\n                                        addInstruction1(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        fontSize: '20px',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions2}\r\n                                    onChange={(event) =>\r\n                                        addInstruction2(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        background: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions3}\r\n                                    onChange={(event) =>\r\n                                        addInstruction3(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        fontSize: '20px',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n\r\n                <div style={{height: '100px'}}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions1: instructionInput})\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions2: instructionInput})\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions3: instructionInput})\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({Name: stimulInput})\r\n    } else {\r\n        alert('Неможливо надіслати пустий стимул')\r\n    }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Skill: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Method: params})\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({DesirableReaction: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ReductionСriterion: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriterionIncrease: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({StepDescription: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep3: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep2: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep1: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({SphereOfDevelopment: sphereOfDevelopment})\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Interval: interval})\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({MethodTakingHint: method})\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriteriongenGenerSkill: generSkill})\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoTemplate.jsx",["445","446","447","448","449","450","451","452","453","454","455"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\n\r\nimport ListMoreInfoPrivate from './ListMoreInfoPrivate'\r\nimport ListMoreInfoPublic from './ListMoreInfoPublic'\r\nexport default function ListMoreInfoTemplate() {\r\n    let test = []\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    if (localStorage.getItem('templateType') == 'private') {\r\n        return (\r\n            <>\r\n                <ListMoreInfoPrivate />\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('templateType') == 'public') {\r\n        return (\r\n            <>\r\n                <ListMoreInfoPublic />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateView.jsx",["456","457","458","459","460","461","462","463","464","465"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport ProgramTemplateViewPrivate from './ProgramTemplateViewPrivate'\r\nimport ProgramTemplateViewPublic from './ProgramTemplateViewPublic'\r\nimport ProgramEditableTemplate from './ProgramEditableTemplate'\r\n\r\n// MAIN COMPONENT\r\nexport default function ProgramTemplateView() {\r\n    if (localStorage.getItem('templateType') == 'private') {\r\n        return (\r\n            <>\r\n                <ProgramEditableTemplate />\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('templateType') == 'public') {\r\n        return (\r\n            <>\r\n                <ProgramTemplateViewPublic />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToReg.jsx",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\AuthSetup\\PrivateRoute\\PrivateRouteToLogin.jsx",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Firebase\\firebase.js",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm1.js",["466","467","468","469"],"import React, {useState} from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport {withRouter} from 'react-router'\r\nimport DataPicker from './DataPicker'\r\nimport './UserRoleChoosing.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SignUpForm1() {\r\n    localStorage.setItem('step', 2)\r\n    const [firstName, setFirstName] = useState('')\r\n    localStorage.setItem('Name', firstName)\r\n    console.log(firstName)\r\n    const [lastName, setLastName] = useState('')\r\n    localStorage.setItem('Surname', lastName)\r\n    console.log(lastName)\r\n    const [sex, setSex] = useState('')\r\n    localStorage.setItem('Gender', sex)\r\n    console.log(sex)\r\n\r\n    const [formData, setFormData] = useState({\r\n        isAgree: false,\r\n        gender: '',\r\n    })\r\n\r\n    const handleChanage = (event) => {\r\n        const target = event.target\r\n        const name = target.name\r\n        const value = target.value\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        })\r\n        console.log(target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"first_sign\">\r\n            <LoginNavigation />\r\n            <form className=\"form-itself\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n                <div className=\"input_text_name\">\r\n                    <input\r\n                        onChange={(event) => setFirstName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Ім'я\"\r\n                    />\r\n                </div>\r\n                <div className=\"input_text_name\">\r\n                    <input\r\n                        onChange={(event) => setLastName(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Прізвище\"\r\n                    />\r\n                </div>\r\n                <div className=\"birthday_date\">\r\n                    Вкажіть вашу дату народження:\r\n                </div>\r\n                <div className=\"birthday_date_picker\">\r\n                    <DataPicker />\r\n                </div>\r\n                <p className=\"gender\">Стать</p>\r\n                <div className=\"gender_container\">\r\n                    <div className=\"group\">\r\n                        <input\r\n                            onClick={handleChanage}\r\n                            checked={formData.gender == 'male'}\r\n                            className=\"gender_checks\"\r\n                            name=\"gender\"\r\n                            type=\"checkbox\"\r\n                            id=\"xd\"\r\n                            value=\"male\"\r\n                        />\r\n                        <label for=\"xd\">Чоловіча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <input\r\n                            onClick={handleChanage}\r\n                            checked={formData.gender == 'female'}\r\n                            type=\"checkbox\"\r\n                            name=\"gender\"\r\n                            id=\"figma\"\r\n                            className=\"gender_checks\"\r\n                            value=\"female\"\r\n                        />\r\n                        <label for=\"figma\">Жіноча</label>\r\n                    </div>\r\n\r\n                    <div className=\"group\">\r\n                        <input\r\n                            onClick={handleChanage}\r\n                            checked={formData.gender == 'other'}\r\n                            type=\"checkbox\"\r\n                            name=\"gender\"\r\n                            id=\"sketch\"\r\n                            className=\"gender_checks\"\r\n                            value=\"other\"\r\n                        />\r\n                        <label for=\"sketch\">Інше</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"nav_button_box\">\r\n                <Link to=\"/registration\">\r\n                    <div className=\"icon_back\"></div>\r\n                </Link>\r\n                <Link to=\"/registration/signup3\">\r\n                    <div className=\"icon_next\"></div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm1)\r\n\r\n// function addFirstInputRegistr(firstName,lastName,sex) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Name: firstName, Surname: lastName, Gender: sex})\r\n// }\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm2.js",["470","471","472"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\nimport {useState, useEffect} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './SignUpForm2.css'\r\nimport './UserRoleChoosing.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SignUpForm2() {\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const [country, setCountry] = useState('')\r\n    console.log(country)\r\n    localStorage.setItem('Country', country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    localStorage.setItem('step', 3)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n\r\n            <form className=\"form-second-personal-data\">\r\n                <p className=\"personal_text\">Особиста інформація</p>\r\n\r\n                <div className=\"custom_image_input\">\r\n                    <label for=\"image_input\">\r\n                        <img\r\n                            src={Upload}\r\n                            height=\"25\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                marginLeft: '25px',\r\n                                marginRight: '15px',\r\n                                marginTop: '9px',\r\n                                color: '#EEEEEE',\r\n                            }}\r\n                        />\r\n                        <span className=\"download_image\" id=\"file-chosen\">\r\n                            Завантажити фото профілю\r\n                        </span>\r\n                        <hr />\r\n                    </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image_input\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                </div>\r\n                {selectedFile && <img src={preview} className=\"input_image\" />}\r\n                <div id=\"div1\" className=\"image_container_simulator\">\r\n                    Фото\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCountry(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Країна\"\r\n                    />\r\n                </div>\r\n                <div className=\"input-city\">\r\n                    <input\r\n                        onChange={(event) => setCity(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Місто\"\r\n                    />\r\n                </div>\r\n            </form>\r\n            <div className=\"nav_button_box\">\r\n                <Link to=\"/registration/signup2\">\r\n                    <div>\r\n                        <div className=\"icon_back\"></div>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/registration/signup4\">\r\n                    <div>\r\n                        <div className=\"icon_next\"></div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm2\r\n// function addSecondInputRegistr(photo, country, city) {\r\n//     const db = app.firestore();\r\n//     db.collection(\"User\").doc(localStorage.getItem(\"user\")).set({Photo: photo, Country: country, City: city})\r\n// }\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\UserRoleChoosing.js",["473"],"import React from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport app from '../../Firebase/firebase'\r\nimport SwitchSelector from 'react-switch-selector'\r\nimport './UserRoleChoosing.css'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SignUpForm3() {\r\n    const options = [\r\n        {\r\n            label: 'Супервізор',\r\n            value: {\r\n                role: 'Supervisors',\r\n            },\r\n        },\r\n        {\r\n            label: 'Терапіст',\r\n            value: {\r\n                role: 'Therapists',\r\n            },\r\n        },\r\n    ]\r\n\r\n    const onChange = (newValue) => {\r\n        localStorage.setItem('proffesion', newValue.role)\r\n        console.log(newValue.role)\r\n    }\r\n    localStorage.setItem('step', 1)\r\n    localStorage.setItem('proffesion', 'Supervisors')\r\n    return (\r\n        <div>\r\n            <LoginNavigation colorBackground={'white'} colorText={'#48535F'} />\r\n            <div className=\"before_register\">\r\n                Передусім оберіть вашу роль як користувача:\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: 350,\r\n                    height: 55,\r\n                    paddingTop: '70px',\r\n                    fontSize: '28px',\r\n                    textAlign: 'center',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                }}\r\n            >\r\n                <SwitchSelector\r\n                    onChange={onChange}\r\n                    options={options}\r\n                    backgroundColor={'#48535F'}\r\n                    fontColor={'#FFFFFF'}\r\n                    selectedFontColor={'#48535F'}\r\n                    selectionIndicatorMargin=\"4\"\r\n                    wrapperBorderRadius=\"8\"\r\n                    optionBorderRadius=\"7\"\r\n                    fontSize=\"15px\"\r\n                    selectedBackgroundColor=\"#FFFFFF\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"have_acc\">\r\n                <span className=\"still_no_acc_text\">\r\n                    Вже маєте акаунт? &nbsp;&nbsp;&nbsp;\r\n                </span>\r\n                <div className=\"login_link_reg\">\r\n                    <a href=\"/\" className=\"login_please\">\r\n                        Залогуватись\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"nav_button_box\"></div>\r\n            <Link to=\"/registration/signup2\">\r\n                <div>\r\n                    <div className=\"icon_next\"></div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpForm3\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\SignUpForm4.js",["474"],"import React, {useCallback, useState} from 'react'\r\nimport './SignUpForm1.css'\r\nimport LoginNavigation from './Navigation/LoginNavigation'\r\nimport 'fontsource-dm-sans'\r\nimport './SignUpForm4.css'\r\nimport {withRouter} from 'react-router'\r\nimport app from '../../Firebase/firebase'\r\nimport './UserRoleChoosing.css'\r\nimport {Link} from 'react-router-dom'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\n\r\nfunction SignUpForm4({history}) {\r\n    localStorage.setItem('step', 4)\r\n    const handleSignUp = useCallback(\r\n        async (event) => {\r\n            event.preventDefault()\r\n            const {\r\n                email,\r\n                password,\r\n                passwordCheck,\r\n                phone,\r\n            } = event.target.elements\r\n            try {\r\n                if (password.value === passwordCheck.value) {\r\n                    await app\r\n                        .auth()\r\n                        .createUserWithEmailAndPassword(\r\n                            email.value,\r\n                            password.value\r\n                        )\r\n\r\n                    await app.auth().currentUser.sendEmailVerification()\r\n\r\n                    addInputRegistr()\r\n                    history.push('/')\r\n                } else {\r\n                    toast.error('Будь ласка, перевірте ваш пароль')\r\n                }\r\n            } catch (error) {\r\n                toast.error('Помилка')\r\n            }\r\n        },\r\n        [history]\r\n    )\r\n\r\n    const [phone, setPhoneNumber] = useState('')\r\n    console.log(phone)\r\n    localStorage.setItem('PhoneNumber', phone)\r\n\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div>\r\n            <LoginNavigation />\r\n            <form className=\"forth_form\" onSubmit={handleSignUp}>\r\n                <div className=\"contact_text\">Контакти</div>\r\n                <div className=\"inputE\">\r\n                    <input\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputP\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"password\"\r\n                        placeholder=\"Пароль\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputCp\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"passwordCheck\"\r\n                        placeholder=\"Підтвердження паролю\"\r\n                    />\r\n                </div>\r\n                <div className=\"inputPh\">\r\n                    <input\r\n                        onChange={(event) => setPhoneNumber(event.target.value)}\r\n                        type=\"text\"\r\n                        id=\"lname\"\r\n                        name=\"phone\"\r\n                        placeholder=\"Номер телефону\"\r\n                    />\r\n                </div>\r\n                <input\r\n                    class=\"slide-hover-left-4\"\r\n                    type=\"submit\"\r\n                    value=\"Зареєструватись\"\r\n                />\r\n                <Toaster\r\n                    position=\"bottom-top\"\r\n                    reverseOrder={false}\r\n                    toastOptions={{\r\n                        style: {\r\n                            minWidth: '350px',\r\n                            minHeight: '60px',\r\n                            paddingLeft: '20px',\r\n                        },\r\n                        error: {\r\n                            duration: 5000,\r\n                            icon: '⚠️',\r\n                        },\r\n                    }}\r\n                />\r\n            </form>\r\n            <div className=\"nav_button_box\">\r\n                <Link to=\"/registration/signup3\">\r\n                    <div>\r\n                        <div className=\"icon_back\"></div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SignUpForm4)\r\nfunction addInputRegistr() {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('userEmail'))\r\n        .set({\r\n            Name: localStorage.getItem('Name'),\r\n            Surname: localStorage.getItem('Surname'),\r\n            Birthday: localStorage.getItem('Birthday'),\r\n            Gender: localStorage.getItem('Gender'),\r\n            Country: localStorage.getItem('Country'),\r\n            City: localStorage.getItem('City'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n            PhoneNumber: localStorage.getItem('PhoneNumber'),\r\n            TelegramUserID: '',\r\n        })\r\n    db.collection('Users')\r\n        .doc()\r\n        .set({\r\n            Email: localStorage.getItem('userEmail'),\r\n            Profession: localStorage.getItem('proffesion'),\r\n        })\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\MobileRegistration.js",["475","476"],"import './MobileRegistration.css'\r\nimport DataPicker from './DataPicker'\r\nimport {Link} from 'react-router-dom'\r\nimport SwitchSelector from 'react-switch-selector'\r\nimport React, {useState, useEffect} from 'react'\r\nimport Upload from '../../assets/Vector.svg'\r\nimport $ from 'jquery'\r\n\r\nfunction MobileRegistration() {\r\n    const [selectedFile, setSelectedFile] = useState()\r\n    const [preview, setPreview] = useState()\r\n    useEffect(() => {\r\n        if (!selectedFile) {\r\n            setPreview(undefined)\r\n            return\r\n        }\r\n        if (selectedFile) {\r\n            setPreview(undefined)\r\n            $('#div1').remove()\r\n        }\r\n        const objectUrl = URL.createObjectURL(selectedFile)\r\n        setPreview(objectUrl)\r\n        return () => URL.revokeObjectURL(objectUrl)\r\n    }, [selectedFile])\r\n    const onSelectFile = (e) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n            setSelectedFile(undefined)\r\n            return\r\n        }\r\n        setSelectedFile(e.target.files[0])\r\n    }\r\n\r\n    const options = [\r\n        {\r\n            label: 'Супервізор',\r\n            value: {\r\n                role: 'Supervisors',\r\n            },\r\n        },\r\n        {\r\n            label: 'Терапіст',\r\n            value: {\r\n                role: 'Therapists',\r\n            },\r\n        },\r\n    ]\r\n\r\n    const onChange = (newValue) => {\r\n        localStorage.setItem('proffesion', newValue.role)\r\n        console.log(newValue.role)\r\n    }\r\n    localStorage.setItem('proffesion', 'Supervisors')\r\n    const [firstName, setFirstName] = useState('')\r\n    localStorage.setItem('Name', firstName)\r\n    console.log(firstName)\r\n    const [lastName, setLastName] = useState('')\r\n    localStorage.setItem('Surname', lastName)\r\n    console.log(lastName)\r\n    const [sex, setSex] = useState('')\r\n    localStorage.setItem('Gender', sex)\r\n    console.log(sex)\r\n    const [country, setCountry] = useState('')\r\n    localStorage.setItem('Country', country)\r\n    console.log(country)\r\n    const [city, setCity] = useState('')\r\n    localStorage.setItem('City', city)\r\n    console.log(city)\r\n    const [phone, setPhoneNumber] = useState('')\r\n    localStorage.setItem('PhoneNumber', phone)\r\n    console.log(phone)\r\n    const [email, setEmail] = useState('')\r\n    localStorage.setItem('userEmail', email)\r\n    console.log(email)\r\n    return (\r\n        <div className=\"mobile_lightblue_background\">\r\n            <div className=\"mobile_registration\">\r\n                <div className=\"sign-up-text-mobile\">Реєстрація</div>\r\n\r\n                <div className=\"input_form\">\r\n                    <div className=\"mobile_registration_label_centre\">\r\n                        Оберіть вашу роль\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            width: '50vw',\r\n                            height: '10vw',\r\n                            paddingTop: '5vw',\r\n                            paddingBottom: '5vw',\r\n\r\n                            fontSize: '4vw',\r\n                            textAlign: 'center',\r\n                            marginRight: 'auto',\r\n                            marginLeft: 'auto',\r\n                        }}\r\n                    >\r\n                        <SwitchSelector\r\n                            onChange={onChange}\r\n                            options={options}\r\n                            backgroundColor={'#48535F'}\r\n                            fontColor={'#FFFFFF'}\r\n                            selectedFontColor={'#48535F'}\r\n                            selectionIndicatorMargin=\"4\"\r\n                            wrapperBorderRadius=\"8\"\r\n                            optionBorderRadius=\"7\"\r\n                            fontSize=\"15px\"\r\n                            selectedBackgroundColor=\"#FFFFFF\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Ім'я</div>\r\n                    <div className=\"input_text_mobile input_name\">\r\n                        <input\r\n                            onChange={(event) =>\r\n                                setFirstName(event.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"firstname\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Прізвище</div>\r\n                    <div className=\"input_text_mobile input_name\">\r\n                        <input\r\n                            onChange={(event) =>\r\n                                setLastName(event.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            id=\"lname\"\r\n                            name=\"lastname\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label_centre birthday_mobile\">\r\n                        Ваша дата народження\r\n                    </div>\r\n                    <div className=\"birthday_date_picker_mobile\">\r\n                        <DataPicker />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label_centre gender_up\">\r\n                        Оберіть вашу стать\r\n                    </div>\r\n                    <div className=\"gender_container_mobile gender_down\">\r\n                        <div className=\"group_mobile\">\r\n                            <input\r\n                                onClick={() => setSex('Чоловіча')}\r\n                                className=\"gender_checks_mobile\"\r\n                                type=\"checkbox\"\r\n                                id=\"xd\"\r\n                            />\r\n                            <label for=\"xd\">Чоловіча</label>\r\n                        </div>\r\n\r\n                        <div className=\"group_mobile\">\r\n                            <input\r\n                                onClick={() => setSex('Жіноча')}\r\n                                type=\"checkbox\"\r\n                                id=\"figma\"\r\n                                className=\"gender_checks_mobile\"\r\n                            />\r\n                            <label for=\"figma\">Жіноча</label>\r\n                        </div>\r\n\r\n                        <div className=\"group_mobile\">\r\n                            <input\r\n                                onClick={() => setSex('Інше')}\r\n                                type=\"checkbox\"\r\n                                id=\"sketch\"\r\n                                className=\"gender_checks_mobile\"\r\n                            />\r\n                            <label for=\"sketch\">Інше</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"custom_image_input\">\r\n                        <label for=\"image_input\">\r\n                            <img\r\n                                src={Upload}\r\n                                height=\"25\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    marginLeft: '25px',\r\n                                    marginRight: '15px',\r\n                                    marginTop: '9px',\r\n                                    color: '#EEEEEE',\r\n                                }}\r\n                            />\r\n                            <span className=\"download_image\" id=\"file-chosen\">\r\n                                Завантажити\r\n                            </span>\r\n                            <hr />\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"image_input\"\r\n                            onChange={onSelectFile}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Країна</div>\r\n                    <div className=\"input_text_mobile input_country\">\r\n                        <input\r\n                            onChange={(event) => setCountry(event.target.value)}\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"firstname\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Місто</div>\r\n                    <div className=\"input_text_mobile input_city\">\r\n                        <input\r\n                            onChange={(event) => setCity(event.target.value)}\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"firstname\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Email</div>\r\n                    <div className=\"input_text_mobile input_email\">\r\n                        <input\r\n                            onChange={(event) => setEmail(event.target.value)}\r\n                            type=\"text\"\r\n                            id=\"fname\"\r\n                            name=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">Пароль</div>\r\n                    <div className=\"input_text_mobile input_password\">\r\n                        <input type=\"text\" id=\"lname\" name=\"password\" />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">\r\n                        Підтвердження паролю\r\n                    </div>\r\n                    <div className=\"input_text_mobile input_password\">\r\n                        <input type=\"text\" id=\"lname\" name=\"passwordCheck\" />\r\n                    </div>\r\n                    <div className=\"mobile_registration_label\">\r\n                        Номер телефону\r\n                    </div>\r\n                    <div className=\"input_text_mobile input_phone\">\r\n                        <input\r\n                            onChange={(event) =>\r\n                                setPhoneNumber(event.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            id=\"lname\"\r\n                            name=\"phone\"\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        class=\"slide-hover-left-3_mobile\"\r\n                        type=\"submit\"\r\n                        value=\"Зареєструватись\"\r\n                    />\r\n                </div>\r\n                <div className=\"already_acc\">\r\n                    <span className=\"already_acc_text\">\r\n                        Вже маєте акаунт? &nbsp;&nbsp;&nbsp;\r\n                    </span>{' '}\r\n                    <Link className=\"signin_link\" to=\"/\">\r\n                        Залогуватись\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileRegistration\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\Pagination.js",["477","478","479"],"import React, {useState, useEffect} from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport {List, makeStyles, Divider, Box} from '@material-ui/core'\r\nimport app from '../../Firebase/firebase'\r\nimport File from './File'\r\nimport './Pagination.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n    },\r\n    items: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nfunction PaginationRounded({history}) {\r\n    const classes = useStyles()\r\n    const [files, setFiles] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [page, setPage] = useState(1)\r\n    const [filesPerPage] = useState(2)\r\n\r\n    console.log('')\r\n    var storageRef = app.storage().ref()\r\n    var patientResultRef = storageRef.child(\r\n        'patients/' + localStorage.getItem('child') + '/results'\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            patientResultRef.listAll().then(function (result) {\r\n                setFiles(\r\n                    result.items.map((url) => {\r\n                        return url\r\n                            .toString()\r\n                            .replace(\r\n                                'gs://ionkid-abd2f.appspot.com/patients/' +\r\n                                    localStorage.getItem('child') +\r\n                                    '/results/',\r\n                                ''\r\n                            )\r\n                    })\r\n                )\r\n            })\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, []) // [files, setFiles]\r\n\r\n    console.log(files)\r\n    const handleChange = (event, value) => {\r\n        setPage(value)\r\n    }\r\n\r\n    console.log('sho?   \\n' + files.length)\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"table-wrapper\"\r\n                style={{position: 'relative', bottom: '5rem'}}\r\n            >\r\n                {files\r\n                    .slice((page - 1) * filesPerPage, page * filesPerPage)\r\n                    .map((file) => {\r\n                        return (\r\n                            <File\r\n                                history={history}\r\n                                file={file}\r\n                                loading={loading}\r\n                            />\r\n                        )\r\n                    })}\r\n                {/* 'Divider' protrudes to the left || Need to fix or delete */}\r\n                {/* <Divider /> */}\r\n            </div>\r\n            <Box component=\"span\" className=\"pagination-box\">\r\n                <Pagination\r\n                    count={Math.ceil(files.length / filesPerPage)}\r\n                    page={page}\r\n                    onChange={handleChange}\r\n                    defaultPage={1}\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    shape=\"rounded\"\r\n                    showFirstButton\r\n                    showLastButton\r\n                    classes={{ul: classes.paginator}}\r\n                />\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginationRounded\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\MobileHeader.js",["480","481"],"import React from 'react'\r\nimport './ProgramHeader.css'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport SignOut from '../../assets/SignOut.svg'\r\n\r\nimport app from '../../Firebase/firebase'\r\nfunction signOut() {\r\n    localStorage.setItem('user', '@gmail')\r\n    app.auth().signOut()\r\n}\r\n\r\nfunction MobileHeader() {\r\n    return (\r\n        <div className=\"logo_container\">\r\n            <img\r\n                src={SignOut}\r\n                onClick={() => signOut()}\r\n                height=\"100%\"\r\n                width=\"10%\"\r\n                className=\"sign_out_button\"\r\n                style={{\r\n                    cursor: 'pointer',\r\n                    position: 'relative',\r\n                    marginLeft: '10%',\r\n                }}\r\n            />\r\n            <img\r\n                src={Logo}\r\n                height=\"100%\"\r\n                width=\"50%\"\r\n                style={{\r\n                    marginLeft: '7%',\r\n                    position: 'relative',\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\Header.js",["482","483","484","485","486"],"import React, {useState} from 'react'\r\nimport './ProgramHeader.css'\r\nimport './Header.css'\r\nimport SignOut from '../../assets/SignOut.svg'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport app from '../../Firebase/firebase'\r\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\r\nfunction signOut() {\r\n    localStorage.setItem('user', '@gmail')\r\n    app.auth().signOut()\r\n}\r\nfunction Header() {\r\n    let someText = `&#8203`\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div style={{width: '93.2%', alignSelf: 'center'}}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={Logo}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                            className=\"logo_hover\"\r\n                        />\r\n                        <PatientTemplateSwitch />\r\n\r\n                        <input\r\n                            className=\"search\"\r\n                            type=\"text\"\r\n                            name=\"search\"\r\n                            placeholder=\" ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎ Пошук..\"\r\n                        />\r\n\r\n                        <img\r\n                            src={SignOut}\r\n                            onClick={() => signOut()}\r\n                            className=\"sign_out_button_header\"\r\n                            width=\"4%\"\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                position: 'relative',\r\n                                marginLeft: '10%',\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: 'center',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\SimpleHeader.js",["487","488"],"import React from 'react'\r\nimport './ProgramHeader.css'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport app from '../../Firebase/firebase'\r\n\r\nfunction SimpleHeader() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <img\r\n                    src={Logo}\r\n                    onClick={() => app.auth().signOut()}\r\n                    width=\"14.7%\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        left: '4%',\r\n                        marginTop: '1.1%',\r\n                        marginBottom: '-20px',\r\n                    }}\r\n                />\r\n\r\n                <h1\r\n                    style={{\r\n                        border: 'none',\r\n                        borderBottom: ' 1px solid #6F6F6F',\r\n                        position: 'relative',\r\n                        top: '8.2%',\r\n                        left: '3.33%',\r\n                        width: '93.2%',\r\n                    }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SimpleHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\ProgramHeader.js",["489","490","491","492"],"import React, {useState, useEffect} from 'react'\r\nimport Logo from '../../assets/Logo.svg'\r\nimport './ProgramHeader.css'\r\nimport {Link} from 'react-router-dom'\r\nimport app from '../../Firebase/firebase'\r\nimport PatientTemplateSwitch from './PatientTemplateSwitch'\r\n\r\nfunction signOut() {\r\n    localStorage.setItem('user', 'none')\r\n    app.auth().signOut()\r\n}\r\nfunction ProgramHeader() {\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        console.log(\r\n            fetch(\r\n                `https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`\r\n            )\r\n        )\r\n        fetch(\r\n            `https://john-steck-api.herokuapp.com/files/${userEmail}/${kidName}`\r\n        ).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n        alert('Протокол збережено успішно!')\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <div style={{width: '93.2%', alignSelf: 'center'}}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src={Logo}\r\n                            onClick={() => signOut()}\r\n                            width=\"14.7%\"\r\n                            style={{\r\n                                position: 'relative',\r\n                            }}\r\n                            className=\"ionkid_logo\"\r\n                        />\r\n                        <PatientTemplateSwitch />\r\n                        <Link to=\"/protocol-list\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"save_button_header btn-background-slide\"\r\n                                style={{top: '1rem', cursor: 'pointer'}}\r\n                                onClick={() =>\r\n                                    exportUsersToExcel(userEmail, childName)\r\n                                }\r\n                            >\r\n                                Зберегти файл\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <h1\r\n                        style={{\r\n                            border: 'none',\r\n                            borderBottom: ' 1px solid #6F6F6F',\r\n                            alignSelf: 'center',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProgramHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.js",["493","494","495","496","497","498","499"],"import React, {useEffect, useState} from 'react'\r\nimport {Item, Name, ButtonItem, Amount, Patient} from './PatientItem.styled'\r\nimport {Link} from 'react-router-dom'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport '../PatientInfo/PatientInfoPage.css'\r\nimport './PatientItem.css'\r\nfunction PatientItem({patients}) {\r\n    console.log(patients)\r\n    return (\r\n        <div className=\"all_inter\">\r\n            {patients.map((patient) => (\r\n                <Item className=\"hover_patient\" style={{height: '26rem'}}>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('child', patient.id)\r\n                        }\r\n                    >\r\n                        <img\r\n                            src={patient.Image}\r\n                            width=\"250\"\r\n                            height=\"240\"\r\n                            style={{marginLeft: '0.8rem', marginTop: '0.9rem'}}\r\n                        />\r\n                    </Link>\r\n                    <Name\r\n                        style={{\r\n                            marginLeft: '-3.8rem',\r\n                            textAlign: 'center',\r\n                            height: '4rem',\r\n                        }}\r\n                    >\r\n                        {patient.Name}\r\n                    </Name>\r\n\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"viewmore_patient button_item\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('child', patient.id)\r\n                        }\r\n                    >\r\n                        Переглянути\r\n                    </Link>\r\n                </Item>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default PatientItem\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\HeaderHomeTemplate.jsx",["500","501","502","503"],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolList.jsx",["504","505","506","507","508","509","510","511","512","513"],"import './ProtocolList.css'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItem from './PageComponent/ProtocolItem'\r\nimport Header from '../Header/Header'\r\nimport ArrowHeader from './PageComponent/ArrowHeader'\r\nimport Popup from '../ModalWindow/Popup'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n    const [protocolsToTerapists, setProtocolsToTerapists] = useState([])\r\n    let listTest = JSON.parse(localStorage.getItem('therapistID'))\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocolsToTerapists(\r\n                        snapshot.docs.map((doc) => {\r\n                            console.log('UPD', doc.data())\r\n                            listTest.map((terapist) => {\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .collection('Protocols')\r\n                                    .doc(doc.id)\r\n                                    .set(doc.data())\r\n\r\n                                db.collection('Therapists')\r\n                                    .doc(terapist)\r\n                                    .collection('Patient')\r\n                                    .doc(localStorage.getItem('child'))\r\n                                    .set(\r\n                                        JSON.parse(\r\n                                            localStorage.getItem('childData')\r\n                                        )\r\n                                    )\r\n                            })\r\n                        })\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [stimulusToTerapists, setStimulusToTerapists] = useState([])\r\n\r\n    console.log(listTest[0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem('proffesion'))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .doc(doc.id)\r\n                            .collection('Stimulus')\r\n                            .onSnapshot((snapshot) => {\r\n                                if (snapshot.size) {\r\n                                    setStimulusToTerapists(\r\n                                        snapshot.docs.map((docStim) => {\r\n                                            listTest.map((terapist) => {\r\n                                                db.collection('Therapists')\r\n                                                    .doc(terapist)\r\n                                                    .collection('Patient')\r\n                                                    .doc(\r\n                                                        localStorage.getItem(\r\n                                                            'child'\r\n                                                        )\r\n                                                    )\r\n                                                    .collection('Protocols')\r\n                                                    .doc(doc.id)\r\n                                                    .collection('Stimulus')\r\n                                                    .doc(docStim.id)\r\n                                                    .set(docStim.data())\r\n                                            })\r\n                                        })\r\n                                    )\r\n                                } else {\r\n                                    console.log('Сука1')\r\n                                }\r\n                            })\r\n                    })\r\n\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const db = app.firestore()\r\n    //     var test=1\r\n    //     const unsubscribe = db\r\n    //         .collection(localStorage.getItem(\"proffesion\"))\r\n    //         .doc(localStorage.getItem('user'))\r\n    //         .collection('Patient')\r\n    //         .doc(localStorage.getItem('child'))\r\n    //         .collection('Protocols')\r\n    //         .onSnapshot((snapshot) => {\r\n    //             if (snapshot.size) {\r\n    //                 setProtocols(\r\n    //                     snapshot.docs.sort((a, b) => +a.data().ProtocolId - +b.data().ProtocolId).map((doc) => {\r\n    //                         db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                         .doc(localStorage.getItem('user'))\r\n    //                         .collection('Patient')\r\n    //                         .doc(localStorage.getItem('child'))\r\n    //                         .collection('Protocols').doc(doc.data().id)\r\n    //                         .update({ ProtocolId: test })\r\n    //                         test+=1\r\n    //                         console.log(\"СУКАААААААААААА_1\"+ test)\r\n    //                     })\r\n\r\n    //                 )\r\n    //                 console.log('Сука')\r\n    //                 // for (let i = 0; i < protocols.length; i++) {\r\n    //                 //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n    //                 //     db.collection(localStorage.getItem(\"proffesion\"))\r\n    //                 //         .doc(localStorage.getItem('user'))\r\n    //                 //         .collection('Patient')\r\n    //                 //         .doc(localStorage.getItem('child'))\r\n    //                 //         .collection('Protocols').doc(protocols[i].id)\r\n    //                 //         .update({ ProtocolId: i + 1 })\r\n\r\n    //                 // }\r\n\r\n    //             } else {\r\n    //                 console.log('Сука1')\r\n    //             }\r\n    //         })\r\n    //     return () => {\r\n    //         unsubscribe()\r\n    //     }\r\n    // }, [])\r\n\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const togglePopup = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const [currrentProtocoll, setcurrrentProtocoll] = useState(null)\r\n    function dragStartHandler(event, protocol) {\r\n        console.log('DRAG' + protocol.ProtocolId)\r\n        setcurrrentProtocoll(protocol)\r\n    }\r\n    function dragEndHandler(event, protocol) {\r\n        event.target.style.border = 'none'\r\n    }\r\n    function dragOverHandler(event) {\r\n        event.preventDefault()\r\n        event.target.style.border = 'solid 3px #c9c9c9'\r\n    }\r\n\r\n    function dropHandler(event, protocol) {\r\n        const db = app.firestore()\r\n        event.preventDefault()\r\n        event.target.style.border = 'none'\r\n        console.log('DROP' + protocol.ProtocolId)\r\n        setProtocols(\r\n            protocols.map((proto) => {\r\n                // if (proto.ProtocolId == protocol.ProtocolId) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //     .doc(localStorage.getItem('user'))\r\n                //     .collection('Patient')\r\n                //     .doc(localStorage.getItem('child'))\r\n                //     .collection('Protocols').doc(protocol.id)\r\n                //     .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n                //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n                //     })\r\n                // }\r\n\r\n                // if (proto.ProtocolId == currrentProtocoll.ProtocolId) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(currrentProtocoll.id)\r\n                //         .update({ ProtocolId: protocol.ProtocolId })\r\n                //         fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n                //                 })\r\n                //     }\r\n\r\n                if (proto.ProtocolId == protocol.ProtocolId) {\r\n                    db.collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Protocols')\r\n                        .doc(currrentProtocoll.id)\r\n                        .update({ProtocolId: protocol.ProtocolId})\r\n                    db.collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Protocols')\r\n                        .doc(protocol.id)\r\n                        .update({ProtocolId: currrentProtocoll.ProtocolId})\r\n                }\r\n                // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId>protocol.ProtocolId ) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(currrentProtocoll.id)\r\n                //         .update({ ProtocolId: protocol.ProtocolId})\r\n                //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n                //     })\r\n                // }\r\n                // if (proto.ProtocolId == currrentProtocoll.ProtocolId &&Math.abs(currrentProtocoll.ProtocolId-protocol.ProtocolId)!=1 &&currrentProtocoll.ProtocolId<protocol.ProtocolId ) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(currrentProtocoll.id)\r\n                //         .update({ ProtocolId: protocol.ProtocolId+1})\r\n                //     fetch(`https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n                //     })\r\n                // }\r\n                // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId>protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==1) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(currrentProtocoll.id)\r\n                //         .update({ ProtocolId: protocol.ProtocolId })\r\n                //         db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(protocol.id)\r\n                //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n\r\n                // })\r\n\r\n                // }\r\n                // if (proto.ProtocolId == currrentProtocoll.ProtocolId && currrentProtocoll.ProtocolId<protocol.ProtocolId&&currrentProtocoll.ProtocolId-protocol.ProtocolId==-1) {\r\n                //     db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(currrentProtocoll.id)\r\n                //         .update({ ProtocolId: protocol.ProtocolId })\r\n                //         db.collection(localStorage.getItem(\"proffesion\"))\r\n                //         .doc(localStorage.getItem('user'))\r\n                //         .collection('Patient')\r\n                //         .doc(localStorage.getItem('child'))\r\n                //         .collection('Protocols').doc(protocol.id)\r\n                //         .update({ ProtocolId: currrentProtocoll.ProtocolId })\r\n\r\n                // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n\r\n                // })\r\n\r\n                // if (visited == true) {\r\n                //     protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n                //     for (let i = startVar; i < protocols.length+1 ; i++) {\r\n                //         db.collection(localStorage.getItem(\"proffesion\"))\r\n                //             .doc(localStorage.getItem('user'))\r\n                //             .collection('Patient')\r\n                //             .doc(localStorage.getItem('child'))\r\n                //             .collection('Protocols').doc(protocols[i-1])\r\n                //             .update({ ProtocolId: i })\r\n                //     }\r\n                // }\r\n\r\n                return proto\r\n            })\r\n        )\r\n\r\n        // fetch(`https://john-steck-api.herokuapp.com/priority_correction/priority_correction/${localStorage.getItem('user')}/${localStorage.getItem('child')}`).then((data) => {\r\n\r\n        // })\r\n    }\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <ArrowHeader />\r\n            <button\r\n                class=\"create_template_button btn-background-slide\"\r\n                onClick={togglePopup}\r\n            >\r\n                Зберегти як шаблон\r\n            </button>\r\n            <div\r\n                onClick={() => addProto(protocols.length)}\r\n                className=\"add-proto-mobile\"\r\n            >\r\n                <BsPlusCircle />\r\n            </div>\r\n            {isOpen && (\r\n                <Popup\r\n                    protocols={protocols}\r\n                    child={child[0]}\r\n                    content={\r\n                        <>\r\n                            <b className=\"text_modul\">\r\n                                Будь ласка, оберіть тип даного шаблону:\r\n                            </b>\r\n                            <div className=\"button_modul\"></div>\r\n                        </>\r\n                    }\r\n                    handleClose={togglePopup}\r\n                />\r\n            )}\r\n            <div className=\"create_element\">\r\n                {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                {protocolsNumber.map((protocol) => (\r\n                    <>\r\n                        <div\r\n                            draggable=\"true\"\r\n                            onDragStart={(event) => {\r\n                                dragStartHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragLeave={(event) => {\r\n                                dragEndHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragEnd={(event) => {\r\n                                dragEndHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                            onDragOver={(event) => {\r\n                                dragOverHandler(event)\r\n                            }}\r\n                            onDrop={(event) => {\r\n                                dropHandler(event, protocols[protocol - 1])\r\n                            }}\r\n                        >\r\n                            <ProtocolItem\r\n                                protocols={protocols}\r\n                                number={protocol}\r\n                                protocolId={protocols[protocol - 1].id}\r\n                                protocolName={\r\n                                    protocols[protocol - 1].ProtocolId\r\n                                }\r\n                                sphereOfDevelopment={\r\n                                    protocols[protocol - 1].SphereOfDevelopment\r\n                                }\r\n                                length={protocols.length}\r\n                                skill={protocols[protocol - 1].Skill}\r\n                                statusCopied={\r\n                                    protocols[protocol - 1].StatusCopied\r\n                                }\r\n                                isActive={protocols[protocol - 1].IsActive}\r\n                                interval={protocols[protocol - 1].Interval}\r\n                                correctionProcedureStep1={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep1\r\n                                }\r\n                                correctionProcedureStep2={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep2\r\n                                }\r\n                                correctionProcedureStep3={\r\n                                    protocols[protocol - 1]\r\n                                        .CorrectionProcedureStep3\r\n                                }\r\n                                criterionIncrease={\r\n                                    protocols[protocol - 1].CriterionIncrease\r\n                                }\r\n                                desirableReaction={\r\n                                    protocols[protocol - 1].DesirableReaction\r\n                                }\r\n                                method={protocols[protocol - 1].Method}\r\n                                methodTakingHint={\r\n                                    protocols[protocol - 1].MethodTakingHint\r\n                                }\r\n                                reductionСriterion={\r\n                                    protocols[protocol - 1].ReductionСriterion\r\n                                }\r\n                                stepDescription={\r\n                                    protocols[protocol - 1].StepDescription\r\n                                }\r\n                                CriteriongenGenerSkill={\r\n                                    protocols[protocol - 1]\r\n                                        .CriteriongenGenerSkill\r\n                                }\r\n                                instruction1={\r\n                                    protocols[protocol - 1].Instructions1\r\n                                }\r\n                                instruction2={\r\n                                    protocols[protocol - 1].Instructions2\r\n                                }\r\n                                instruction3={\r\n                                    protocols[protocol - 1].Instructions3\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </>\r\n                ))}\r\n                {/* </ReactSortable> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1,\r\n            SphereOfDevelopment: '',\r\n            Skill: '',\r\n            IsActive: '',\r\n            Interval: '',\r\n            CorrectionProcedureStep1: '',\r\n            CorrectionProcedureStep2: '',\r\n            CorrectionProcedureStep3: '',\r\n            CriterionIncrease: '',\r\n            DesirableReaction: '',\r\n            Method: '',\r\n            MethodTakingHint: '',\r\n            ReductionСriterion: '',\r\n            StepDescription: '',\r\n            CriteriongenGenerSkill: '',\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\ProtocolListTherapist.jsx",["514","515","516"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProtocolItemTherapist from './PageComponent/ProtocolItemTherapist'\r\nimport Header from '../Header/Header'\r\nimport {Link} from 'react-router-dom'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport './ProtocolList.css'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nexport default function ProtocolList() {\r\n    let test = []\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    protocols.map((protocol) => test.push(protocol.id))\r\n    console.log(test)\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    localStorage.setItem('protoID', JSON.stringify(test))\r\n\r\n    const [child, setChild] = useState([0])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .where('Name', '==', localStorage.getItem('childName'))\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setChild(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link\r\n                        to=\"/patient\"\r\n                        className=\"patients_link\"\r\n                        style={{color: '#6F6F6F'}}\r\n                    >\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>Програма</h2>\r\n            </div>\r\n\r\n            {protocolsNumber.map((protocol) => (\r\n                <ProtocolItemTherapist\r\n                    number={protocol}\r\n                    protocolId={protocols[protocol - 1].id}\r\n                    protocolName={protocols[protocol - 1].ProtocolId}\r\n                    sphereOfDevelopment={\r\n                        protocols[protocol - 1].SphereOfDevelopment\r\n                    }\r\n                    length={protocols.length}\r\n                    skill={protocols[protocol - 1].Skill}\r\n                    statusCopied={protocols[protocol - 1].StatusCopied}\r\n                    isActive={protocols[protocol - 1].IsActive}\r\n                    interval={protocols[protocol - 1].Interval}\r\n                    correctionProcedureStep1={\r\n                        protocols[protocol - 1].CorrectionProcedureStep1\r\n                    }\r\n                    correctionProcedureStep2={\r\n                        protocols[protocol - 1].CorrectionProcedureStep2\r\n                    }\r\n                    correctionProcedureStep3={\r\n                        protocols[protocol - 1].CorrectionProcedureStep3\r\n                    }\r\n                    criterionIncrease={\r\n                        protocols[protocol - 1].CriterionIncrease\r\n                    }\r\n                    desirableReaction={\r\n                        protocols[protocol - 1].DesirableReaction\r\n                    }\r\n                    method={protocols[protocol - 1].Method}\r\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                    reductionСriterion={\r\n                        protocols[protocol - 1].ReductionСriterion\r\n                    }\r\n                    stepDescription={protocols[protocol - 1].StepDescription}\r\n                    CriteriongenGenerSkill={\r\n                        protocols[protocol - 1].CriteriongenGenerSkill\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoTherapist.jsx",["517","518","519","520","521"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function PatientInfoTherapist() {\r\n    let [patients, setPatients] = useState([])\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Therapists')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <Header />\r\n            <div>\r\n                {/* className=\"grey_back\" */}\r\n                <ul>\r\n                    {patients.map((patient) => (\r\n                        <>\r\n                            {localStorage.setItem('childName', patient.Name)}\r\n\r\n                            <div className=\"patient_upper_flex_container\">\r\n                                <h2 style={{marginLeft: '4rem'}}>\r\n                                    <Link to=\"/\" className=\"patients_link\">\r\n                                        Пацієнти\r\n                                    </Link>\r\n                                </h2>\r\n                                <img\r\n                                    src={Arrow}\r\n                                    height=\"20\"\r\n                                    style={{\r\n                                        marginLeft: '30px',\r\n                                        marginRight: '30px',\r\n                                        marginTop: '28px',\r\n                                        color: 'black',\r\n                                    }}\r\n                                />\r\n                                <h2\r\n                                    className=\"patients_link\"\r\n                                    style={{color: '#6F6F6F'}}\r\n                                >\r\n                                    {patient.Name}\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"patient_grid_container\">\r\n                                <img\r\n                                    src={patient.Image}\r\n                                    height=\"200\"\r\n                                    className=\"mobile_child_image\"\r\n                                />\r\n                                <img\r\n                                    src={patient.Image}\r\n                                    height=\"270\"\r\n                                    className=\"child_image\"\r\n                                />\r\n                                <div className=\"column_outer_flex_container\">\r\n                                    <div className=\"kid_name\">\r\n                                        {patient.Name}{' '}\r\n                                    </div>\r\n                                    <div className=\"diagnosis_flex_container\">\r\n                                        <h7 className=\"\">\r\n                                            Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        </h7>\r\n                                        <div style={{color: '#6F6F6F'}}>\r\n                                            {patient.Diagnos}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                    >\r\n                                        <div>Батьки:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Parents}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Стать:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Gender}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                    >\r\n                                        <div>Вік:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Age} років\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Дата народження:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.BirthDate}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                    >\r\n                                        <div>Місто:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.City}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container\">\r\n                                        <div>Країна:</div>\r\n                                        <div className=\"zebra_rows_flex_container_value\">\r\n                                            {patient.Country}\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Вага:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidWeight} кг\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div>\r\n                                </div> */}\r\n                                </div>\r\n\r\n                                <div className=\"second_column_outer_flex_container\">\r\n                                    <div\r\n                                        className=\"zebra_rows_flex_container\"\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            flexDirection: 'column',\r\n                                        }}\r\n                                    >\r\n                                        {/* <div>Терапевти:</div>\r\n                                    <div>\r\n                                        \r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div\r\n                                                        style={{\r\n                                                            fontSize: '20px',\r\n                                                            display: 'flex',\r\n                                                            flexDirection:\r\n                                                                'row',\r\n                                                            justifyContent:\r\n                                                                'space-between',\r\n                                                        }}\r\n                                                    >\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '-20px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                    </div> */}\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                flexDirection: 'row',\r\n                                                marginLeft: '2rem',\r\n                                            }}\r\n                                        ></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"patient_page_buttons\">\r\n                                <Link\r\n                                    to={{\r\n                                        pathname: '/patient/result_of_therapy',\r\n                                        myCustomProps: {patient},\r\n                                    }}\r\n                                    className=\"patient_page_buttons_therapy\"\r\n                                >\r\n                                    Результати терапії\r\n                                </Link>\r\n                                <Link\r\n                                    to={'/protocol-list'}\r\n                                    onClick={() =>\r\n                                        localStorage.setItem('program', 'ok')\r\n                                    }\r\n                                    className=\"patient_page_buttons_program\"\r\n                                >\r\n                                    Програма\r\n                                </Link>\r\n                            </div>\r\n                        </>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientInfo\\PatientInfoUser.jsx",["522","523","524","525","526","527","528","529"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport './PatientInfoPage.css'\r\nimport Header from '../Header/Header'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport Arrow from '../../assets/arrow.png'\r\nimport Kid from '../../assets/default_avatar.png'\r\nimport {Link} from 'react-router-dom'\r\nimport Delete from '../../assets/delete.svg'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\nimport About from '../VBmap/VBmap'\r\n\r\nexport default function PatientInfoUser() {\r\n    let [patients, setPatients] = useState([])\r\n\r\n    let [therapistInput, setTherapistInput] = useState('')\r\n\r\n    let test = []\r\n\r\n    const [terapists, setTerapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setTerapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    terapists.map((terapist) => test.push(terapist.id))\r\n    console.log(test)\r\n    localStorage.setItem('therapistID', JSON.stringify(test))\r\n\r\n    const [therapists, setTherapists] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Therapists')\r\n            .onSnapshot((snapshot) => {\r\n                db.collection('Supervisors')\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('Patient')\r\n                    .doc(localStorage.getItem('child'))\r\n                    .update({Supervisor: localStorage.getItem('user')})\r\n                if (snapshot.size) {\r\n                    setTherapists(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = app.firestore()\r\n            const data = await db\r\n                .collection('Supervisors')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .get()\r\n            setPatients(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    patients = patients.filter(\r\n        (patient) => patient.id == localStorage.getItem('child')\r\n    )\r\n    localStorage.setItem('childName', '')\r\n    console.log(patients)\r\n\r\n    let path = '/protocol-list'\r\n\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    if (protocols.length == 0) {\r\n        path = '/program-template'\r\n    } else {\r\n        path = '/protocol-list'\r\n    }\r\n    localStorage.setItem('childData', JSON.stringify(patients[0]))\r\n    return (\r\n        <div>\r\n            <MobileHeader />\r\n            <Header />\r\n            <ul className=\"no_left\">\r\n                {patients.map((patient) => (\r\n                    <>\r\n                        {localStorage.setItem('childName', patient.Name)}\r\n\r\n                        <div className=\"patient_upper_flex_container\">\r\n                            <h2 style={{marginLeft: '4rem'}}>\r\n                                <Link to=\"/\" className=\"patients_link\">\r\n                                    Пацієнти\r\n                                </Link>\r\n                            </h2>\r\n                            <img\r\n                                src={Arrow}\r\n                                height=\"20\"\r\n                                style={{\r\n                                    marginLeft: '30px',\r\n                                    marginRight: '30px',\r\n                                    marginTop: '28px',\r\n                                    color: 'black',\r\n                                }}\r\n                            />\r\n                            <h2\r\n                                className=\"patients_link\"\r\n                                style={{color: '#6F6F6F'}}\r\n                            >\r\n                                {patient.Name}\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"patient_grid_container\">\r\n                            <img\r\n                                src={patient.Image}\r\n                                height=\"200\"\r\n                                className=\"mobile_child_image\"\r\n                            />\r\n                            <img\r\n                                src={patient.Image}\r\n                                height=\"270\"\r\n                                className=\"child_image\"\r\n                            />\r\n                            <div className=\"column_outer_flex_container\">\r\n                                <div className=\"kid_name\">{patient.Name} </div>\r\n                                <div className=\"diagnosis_flex_container\">\r\n                                    <h7 className=\"\">\r\n                                        Діагноз: &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                    </h7>\r\n                                    <div style={{color: '#6F6F6F'}}>\r\n                                        {patient.Diagnos}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    <div>Батьки:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Parents}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Стать:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Gender}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    <div>Вік:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Age} років\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Дата народження:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BirthDate}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    <div>Місто:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.City}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Країна:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.Country}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    <div>\r\n                                        Рівень оцінки вербальних навичок\r\n                                        (VB-MAPP):\r\n                                    </div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        <About />\r\n                                    </div>\r\n                                </div>\r\n                                {/* \r\n                                <div className=\"zebra_rows_flex_container\">\r\n                                    <div>Зріст:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.KidHeight} см\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{ backgroundColor: '#EEEEEE' }}\r\n                                >\r\n                                    <div>Група крові:</div>\r\n                                    <div className=\"zebra_rows_flex_container_value\">\r\n                                        {patient.BloodType}\r\n                                    </div> */}\r\n                                {/* </div> */}\r\n                            </div>\r\n                            {/* second column */}\r\n                            <div className=\"second_column_outer_flex_container\">\r\n                                <div\r\n                                    className=\"zebra_rows_flex_container\"\r\n                                    style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    }}\r\n                                >\r\n                                    <div>Терапевти:</div>\r\n                                    <div className=\"therapist_info\">\r\n                                        {/* <ReactSortable list={protocols} setList={setProtocols}> */}\r\n                                        {therapists\r\n                                            .sort((a, b) => +a.id - +b.id)\r\n                                            .map((therapist) => (\r\n                                                <>\r\n                                                    <div className=\"therapist_container\">\r\n                                                        <div>\r\n                                                            {therapist.Name}\r\n                                                            <div\r\n                                                                className=\"zebra_rows_flex_container_value\"\r\n                                                                style={{\r\n                                                                    marginTop:\r\n                                                                        '0px',\r\n                                                                }}\r\n                                                            >\r\n                                                                ({therapist.id})\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"icon_place_therapist\">\r\n                                                            <img\r\n                                                                className=\"icon_patient\"\r\n                                                                onClick={() =>\r\n                                                                    DeleteTherapist(\r\n                                                                        therapist.id\r\n                                                                    )\r\n                                                                }\r\n                                                                src={Delete}\r\n                                                                width=\"8px\"\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            ))}\r\n                                    </div>\r\n\r\n                                    <div className=\"add_therapist_container\">\r\n                                        <button\r\n                                            onClick={() =>\r\n                                                addTherapist(therapistInput)\r\n                                            }\r\n                                            className=\"add_therapist_button\"\r\n                                        >\r\n                                            +\r\n                                        </button>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            onChange={(event) =>\r\n                                                setTherapistInput(\r\n                                                    event.target.value\r\n                                                )\r\n                                            }\r\n                                            name=\"name\"\r\n                                            placeholder=\"Додати за поштою....\"\r\n                                            className=\"add_therapist_input\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"patient_page_buttons\">\r\n                            <button\r\n                                onClick={() => uploadGraphsForSevenDaysToDB()}\r\n                                className=\"patient_page_button_create_info\"\r\n                            >\r\n                                Згенерувати звіт за останні 7 днів\r\n                            </button>\r\n                            <Link\r\n                                to={{\r\n                                    pathname: '/patient/result_of_therapy',\r\n                                    myCustomProps: {patient},\r\n                                }}\r\n                                className=\"patient_page_buttons_therapy\"\r\n                            >\r\n                                Результати терапії\r\n                            </Link>\r\n                            <Link\r\n                                to={path}\r\n                                onClick={() => setData()}\r\n                                className=\"patient_page_buttons_program\"\r\n                            >\r\n                                Програма\r\n                            </Link>\r\n                        </div>\r\n                        <Toaster\r\n                            position=\"bottom-top\"\r\n                            reverseOrder={false}\r\n                            toastOptions={{\r\n                                style: {\r\n                                    minWidth: '350px',\r\n                                    minHeight: '60px',\r\n                                    paddingLeft: '20px',\r\n                                },\r\n                                success: {\r\n                                    minWidth: '600px',\r\n                                    minHeight: '120px',\r\n                                    duration: 5000,\r\n                                },\r\n                                loading: {\r\n                                    minWidth: '600px',\r\n                                    minHeight: '120px',\r\n                                    duration: 5000,\r\n                                    icon: '✉️',\r\n                                },\r\n                                error: {\r\n                                    duration: 5000,\r\n                                    icon: '⚠️',\r\n                                },\r\n                            }}\r\n                        />\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction uploadGraphsForSevenDaysToDB() {\r\n    try {\r\n        fetch(\r\n            `https://john-steck-api.herokuapp.com/progress/${localStorage.getItem(\r\n                'user'\r\n            )}/${localStorage.getItem('child')}`\r\n        ).then(\r\n            window.open(\r\n                `https://john-steck-api.herokuapp.com/get_progress_file/${localStorage.getItem(\r\n                    'user'\r\n                )}/${localStorage.getItem('child')}`\r\n            )\r\n        )\r\n\r\n        toast.success('Файл успішно згенеровано')\r\n    } catch {\r\n        toast.error('Помилка при генерації файлу')\r\n    }\r\n}\r\n\r\nfunction setData() {\r\n    localStorage.setItem('templateType', 'private')\r\n    localStorage.setItem('program', 'ok')\r\n}\r\n\r\nfunction DeleteTherapist(therapistId) {\r\n    console.log('хуй')\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Therapists')\r\n        .doc(therapistId)\r\n        .delete()\r\n    db.collection('Therapists')\r\n        .doc(therapistId)\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .delete()\r\n    toast.success(`Видалено терапіста за електронною поштою: ${therapistId}`)\r\n}\r\n\r\nfunction addTherapist(therapistInput) {\r\n    const db = app.firestore()\r\n    if (therapistInput != '') {\r\n        db.collection('Therapists')\r\n            .doc(therapistInput)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists) {\r\n                    console.log('zaebis pashe')\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({Name: doc.data().Name})\r\n                    toast.success(\r\n                        `Терапіст ${\r\n                            doc.data().Name\r\n                        } доданий за електронною поштою: ${therapistInput}`\r\n                    )\r\n                    fetch(\r\n                        `https://john-steck-api.herokuapp.com/email/reg_child/${\r\n                            localStorage.getItem('Name') +\r\n                            ' ' +\r\n                            localStorage.getItem('Surname')\r\n                        }/${localStorage.getItem(\r\n                            'childName'\r\n                        )}/${therapistInput}`\r\n                    ).then((data) => {})\r\n                } else {\r\n                    toast.loading(\r\n                        `Відправлено лист на реєстрацію на: ${therapistInput}`\r\n                    )\r\n                    db.collection('Supervisors')\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('Patient')\r\n                        .doc(localStorage.getItem('child'))\r\n                        .collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({Name: 'Очікуємо реєстрації'})\r\n\r\n                    db.collection('Therapists')\r\n                        .doc(therapistInput)\r\n                        .set({Name: 'Очікуємо реєстрації'})\r\n                    fetch(\r\n                        `https://john-steck-api.herokuapp.com/email/reg/${\r\n                            localStorage.getItem('Name') +\r\n                            ' ' +\r\n                            localStorage.getItem('Surname')\r\n                        }/${localStorage.getItem(\r\n                            'childName'\r\n                        )}/${therapistInput}`\r\n                    ).then((data) => {})\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    } else {\r\n        toast.error('Спочатку вкажіть пошту терапевта')\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\ButtonsTemplate.jsx",["530","531","532"],"import React, {useState} from 'react'\r\nimport './ButtonsTemplate.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function ButtonsTemplate() {\r\n    let decorPublic = 'none'\r\n    let decorPrivate = 'none'\r\n\r\n    if (localStorage.getItem('templateType') == 'public') {\r\n        decorPublic = 'underline'\r\n        decorPrivate = 'none'\r\n    }\r\n    if (localStorage.getItem('templateType') == 'private') {\r\n        decorPrivate = 'underline'\r\n        decorPublic = 'none'\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"buttons-template\">\r\n                <Link to=\"/program-template\">\r\n                    <button\r\n                        id=\"temp-button-prv\"\r\n                        className=\"buttons-template-private\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                        style={{textDecoration: decorPrivate}}\r\n                    >\r\n                        Мої шаблони\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/public-template\">\r\n                    <button\r\n                        id=\"temp-button-pub\"\r\n                        className=\"buttons-template-public\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'public')\r\n                        }\r\n                        style={{textDecoration: decorPublic}}\r\n                    >\r\n                        Загальні шаблони\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramEditableTemplate.jsx",["533","534","535","536","537","538","539"],"import {TextInput} from 'react-native-paper'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport ArrowHeaderEdit from '../PageComponent/ArrowHeaderEdit'\r\nimport './ProgramTemplate.css'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({protocol}) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app\r\n            .firestore()\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({StatusCopied: ''})\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditableTemplate() {\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeaderEdit />\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати сферу розвитку...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати навик...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати метод...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати бажану реакцію...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            <TextInput\r\n                                                placeholder=\"Вказати критерій...\"\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={\r\n                                                    protocol.CriteriongenGenerSkill\r\n                                                }\r\n                                                style={{fontSize: '20px'}}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: {\r\n                                                        background: '#fcfcfc',\r\n                                                    },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {backgroundColor: 'white'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                        minWidth: 'auto',\r\n                                        maxWidth: 'auto',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        className=\"select_way\"\r\n                                    >\r\n                                        <option value=\"false\"></option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div className=\"add_stymul_container\">\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_stymul_button\"\r\n                                            >\r\n                                                +\r\n                                            </button>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setStimulInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати стимул....\"\r\n                                                className=\"add_stymul_input\"\r\n                                            />\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати опис етапів...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background=\"white\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'white'},\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions1}\r\n                                    onChange={(event) =>\r\n                                        addInstruction1(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        fontSize: '20px',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions2}\r\n                                    onChange={(event) =>\r\n                                        addInstruction2(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        background: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати інструкції до етапу...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Instructions3}\r\n                                    onChange={(event) =>\r\n                                        addInstruction3(event.target.value)\r\n                                    }\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        fontSize: '20px',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {\r\n                                            background: 'transparent',\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n\r\n                <div style={{height: '100px'}}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions1: instructionInput})\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions2: instructionInput})\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions3: instructionInput})\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({Name: stimulInput})\r\n    } else {\r\n        alert('Неможливо надіслати пустий стимул')\r\n    }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Skill: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Method: params})\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({DesirableReaction: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ReductionСriterion: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriterionIncrease: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({StepDescription: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep3: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep2: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep1: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({SphereOfDevelopment: sphereOfDevelopment})\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Interval: interval})\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({MethodTakingHint: method})\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriteriongenGenerSkill: generSkill})\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPublic.jsx",["540"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramTemplateViewPublic() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeaderTemplate />\r\n\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            {protocol.CriteriongenGenerSkill}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{fontSize: '20px'}}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            backgroundColor: '#EEEEEE',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{fontSize: '20px'}}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{\r\n                                            backgroundColor: '#EEEEEE',\r\n                                            fontSize: '20px',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{height: '100px'}}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramTemplateViewPrivate.jsx",["541"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramTemplateViewPrivate() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <HeaderHomeTemplate />\r\n                <ArrowHeaderTemplate />\r\n\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            {protocol.CriteriongenGenerSkill}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{fontSize: '20px'}}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            backgroundColor: '#EEEEEE',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{fontSize: '20px'}}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{\r\n                                            backgroundColor: '#EEEEEE',\r\n                                            fontSize: '20px',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{height: '100px'}}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ArrowHeaderTemplate.jsx",["542"],"import {Link} from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderTemplate() {\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link\r\n                        to=\"/home-template\"\r\n                        className=\"patients_link\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                    >\r\n                        Шаблони\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <Link to=\"/template-more-info\">\r\n                    <h2 style={{color: '#6F6F6F'}}>\r\n                        Список протоколів шаблону\r\n                    </h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderTemplate\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPublic.jsx",["543"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItemTemplate from './ProtocolItemTemplate'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\nexport default function ListMoreInfoPublic() {\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <HeaderHomeTemplate />\r\n            <ArrowHeaderTemplate />\r\n\r\n            {protocolsNumber.map((protocol) => (\r\n                <ProtocolItemTemplate\r\n                    number={protocol}\r\n                    protocolId={protocols[protocol - 1].id}\r\n                    protocolName={protocols[protocol - 1].ProtocolId}\r\n                    sphereOfDevelopment={\r\n                        protocols[protocol - 1].SphereOfDevelopment\r\n                    }\r\n                    length={protocols.length}\r\n                    skill={protocols[protocol - 1].Skill}\r\n                    statusCopied={protocols[protocol - 1].StatusCopied}\r\n                    isActive={protocols[protocol - 1].IsActive}\r\n                    interval={protocols[protocol - 1].Interval}\r\n                    correctionProcedureStep1={\r\n                        protocols[protocol - 1].CorrectionProcedureStep1\r\n                    }\r\n                    correctionProcedureStep2={\r\n                        protocols[protocol - 1].CorrectionProcedureStep2\r\n                    }\r\n                    correctionProcedureStep3={\r\n                        protocols[protocol - 1].CorrectionProcedureStep3\r\n                    }\r\n                    criterionIncrease={\r\n                        protocols[protocol - 1].CriterionIncrease\r\n                    }\r\n                    desirableReaction={\r\n                        protocols[protocol - 1].DesirableReaction\r\n                    }\r\n                    method={protocols[protocol - 1].Method}\r\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                    reductionСriterion={\r\n                        protocols[protocol - 1].ReductionСriterion\r\n                    }\r\n                    stepDescription={protocols[protocol - 1].StepDescription}\r\n                    CriteriongenGenerSkill={\r\n                        protocols[protocol - 1].CriteriongenGenerSkill\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ListMoreInfoPrivate.jsx",["544"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport ProtocolItemTemplateEdit from './ProtocolItemTemplateEdit'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport ArrowHeaderTemplate from './ArrowHeaderTemplate'\r\nimport HeaderHomeTemplate from '../../Header/HeaderHomeTemplate'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\nexport default function ListMoreInfoPrivate() {\r\n    const [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(localStorage.getItem('templateIdMore'))\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('yeah')\r\n                } else {\r\n                    console.log(\r\n                        'error in ProtocolList/ProtocolListTherapist.js'\r\n                    )\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    protocols.sort((a, b) => +a.ProtocolId - +b.ProtocolId)\r\n\r\n    let protocolsNumber = []\r\n    for (let i = 0; i < protocols.length; i++) {\r\n        protocolsNumber.push(i + 1)\r\n    }\r\n    console.log(protocolsNumber)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader />\r\n            <HeaderHomeTemplate />\r\n            <ArrowHeaderTemplate />\r\n\r\n            {protocolsNumber.map((protocol) => (\r\n                <ProtocolItemTemplateEdit\r\n                    number={protocol}\r\n                    protocolId={protocols[protocol - 1].id}\r\n                    protocolName={protocols[protocol - 1].ProtocolId}\r\n                    sphereOfDevelopment={\r\n                        protocols[protocol - 1].SphereOfDevelopment\r\n                    }\r\n                    length={protocols.length}\r\n                    skill={protocols[protocol - 1].Skill}\r\n                    statusCopied={protocols[protocol - 1].StatusCopied}\r\n                    isActive={protocols[protocol - 1].IsActive}\r\n                    interval={protocols[protocol - 1].Interval}\r\n                    correctionProcedureStep1={\r\n                        protocols[protocol - 1].CorrectionProcedureStep1\r\n                    }\r\n                    correctionProcedureStep2={\r\n                        protocols[protocol - 1].CorrectionProcedureStep2\r\n                    }\r\n                    correctionProcedureStep3={\r\n                        protocols[protocol - 1].CorrectionProcedureStep3\r\n                    }\r\n                    criterionIncrease={\r\n                        protocols[protocol - 1].CriterionIncrease\r\n                    }\r\n                    desirableReaction={\r\n                        protocols[protocol - 1].DesirableReaction\r\n                    }\r\n                    method={protocols[protocol - 1].Method}\r\n                    methodTakingHint={protocols[protocol - 1].MethodTakingHint}\r\n                    reductionСriterion={\r\n                        protocols[protocol - 1].ReductionСriterion\r\n                    }\r\n                    stepDescription={protocols[protocol - 1].StepDescription}\r\n                    CriteriongenGenerSkill={\r\n                        protocols[protocol - 1].CriteriongenGenerSkill\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplate.jsx",["545","546"],"import {useState} from 'react'\r\nimport {AiOutlineArrowRight} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function ProtocolItemTemplate({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link\r\n                title=\"Переглянути\"\r\n                onClick={() => {\r\n                    setData(protocolId, number)\r\n                }}\r\n                to=\"template-more-info-protocol\"\r\n            >\r\n                <div\r\n                    className=\"protocol_item\"\r\n                    style={{backgroundColor: colorItem, marginLeft: '7vw'}}\r\n                >\r\n                    <p className=\"protocol_item_text \">\r\n                        Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\r\n                        {skill}\r\n                    </p>\r\n                    <div className=\"icon_place\">\r\n                        <Link\r\n                            title=\"Переглянути\"\r\n                            onClick={() => {\r\n                                setData(protocolId, number)\r\n                            }}\r\n                            to=\"template-more-info-protocol\"\r\n                        >\r\n                            <AiOutlineArrowRight\r\n                                className=\"icon go_icon\"\r\n                                color=\"black\"\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem('programNumber', param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\Popup.jsx",["547","548","549","550"],"import React from 'react'\r\nimport {withRouter} from 'react-router'\r\nimport app from '../../../Firebase/firebase'\r\nconst Popup = (props, {history}) => {\r\n    console.log(props.protocols)\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <span className=\"close-icon\" onClick={props.handleClose}>\r\n                    x\r\n                </span>\r\n                {props.content}\r\n                <div className=\"button-popup\">\r\n                    <button\r\n                        onClick={() =>\r\n                            CreateProgramTemplates(\r\n                                props.protocols,\r\n                                props.child,\r\n                                'Приватний'\r\n                            )\r\n                        }\r\n                        className=\"button_private\"\r\n                    >\r\n                        Приватний\r\n                    </button>\r\n                    <button\r\n                        onClick={() =>\r\n                            CreateProgramTemplates(\r\n                                props.protocols,\r\n                                props.child,\r\n                                'Публічний'\r\n                            )\r\n                        }\r\n                        className=\"button_public\"\r\n                    >\r\n                        Публічний\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\r\n    var endCycle = 0\r\n    console.log(protocols)\r\n    const db = app.firestore()\r\n    if (typeTemplates == 'Приватний') {\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: '',\r\n                Diagnos: '',\r\n                KidWeight: '',\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db.collection(localStorage.getItem('proffesion'))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: '',\r\n                        Diagnos: '',\r\n                        KidWeight: '',\r\n                        CountOfProtocol: protocols.length,\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n    if (typeTemplates == 'Публічний') {\r\n        db.collection('ProgramTemplates')\r\n            .add({\r\n                Age: '',\r\n                Diagnos: '',\r\n                KidWeight: '',\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db.collection('ProgramTemplates').doc(docRef.id).set({\r\n                    Age: '',\r\n                    Diagnos: '',\r\n                    KidWeight: '',\r\n                    CountOfProtocol: protocols.length,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n\r\n    if (endCycle == 1) {\r\n        protocols.map((proto) =>\r\n            db\r\n                .collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('CreateTemplate')\r\n                .doc(proto.id)\r\n                .delete()\r\n        )\r\n        setTimeout(() => {\r\n            alert(`${typeTemplates} шаблон протоколів успішно створений!`)\r\n\r\n            window.location.reload()\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ArrowHeader.jsx",["551","552"],"import {Link} from 'react-router-dom'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport ArrowHeaderSimple from '../PageComponent/ArrowHeaderSimple'\r\nimport app from '../../../Firebase/firebase'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nimport './ProtocolListTemplate'\r\n\r\nfunction ArrowHeader() {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('CreateTemplate')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <ArrowHeaderSimple />\r\n\r\n            <div\r\n                onClick={() => addProto(protocols.length)}\r\n                className=\"add-proto\"\r\n            >\r\n                <BsPlusCircle size={50} style={{marginTop: '30px'}} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .add({\r\n            ProtocolId: +length + 1,\r\n            SphereOfDevelopment: '',\r\n            Skill: '',\r\n            IsActive: '',\r\n            Interval: '',\r\n            CorrectionProcedureStep1: '',\r\n            CorrectionProcedureStep2: '',\r\n            CorrectionProcedureStep3: '',\r\n            CriterionIncrease: '',\r\n            DesirableReaction: '',\r\n            Method: '',\r\n            MethodTakingHint: '',\r\n            ReductionСriterion: '',\r\n            StepDescription: '',\r\n            CriteriongenGenerSkill: '',\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\AHeader.jsx",["553","554","555","556","557","558"],"import {Link} from 'react-router-dom'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nfunction AHeader() {\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link to=\"/patient\" className=\"patients_link\">\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 style={{color: '#6F6F6F'}}>Програма</h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\Item.jsx",["559","560"],"import Delete from '../../../assets/trash.svg'\r\nimport './Items.css'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({diagnos, age, count, number, idTemplate, history}) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div className=\"template_program_name\">Програма: {number}</div>\r\n                <div className=\"grid_display_diagnosis\">\r\n                    <div className=\"template_diagnos\">Діагноз:</div>\r\n                    <div className=\"template_diagnos_value\">{diagnos}</div>\r\n                </div>\r\n                <div className=\"grid_display_numbers\">\r\n                    <div className=\"template_age white_back\">Вік:</div>\r\n                    <div className=\"template_age_value white_back\">{age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів:\r\n                    </div>\r\n                    <div className=\"template_protocols_value\">{count}</div>\r\n                </div>\r\n                <div className=\"template_buttons_container\">\r\n                    <img\r\n                        className=\"template_img\"\r\n                        onClick={() => DeleteTemplate(idTemplate)}\r\n                        src={Delete}\r\n                    ></img>\r\n                    <button\r\n                        className=\"choose_template_button\"\r\n                        onClick={() =>\r\n                            CreateDuplicateTemplate(idTemplate, history)\r\n                        }\r\n                    >\r\n                        Обрати\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem('proffesion'))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateProtocolList\\ProtocolItem.jsx",["561","562","563","564","565","566","567","568","569"],"import Duplicate from '../../../assets/duplicate_task.svg'\r\nimport Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport {useState, useEffect} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport EditIcon from '../../../assets/edit_new.svg'\r\nimport SecondModal from '../../ModalWindow/SecondModal'\r\nimport './ProtocolListTemplate'\r\nexport default function ProtocolItem({\r\n    protocols,\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n    CriteriongenGenerSkill,\r\n    instruction1,\r\n    instruction2,\r\n    instruction3,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"protocol_item\" style={{backgroundColor: colorItem}}>\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number}\r\n                    {statusCopied}.{sphereOfDevelopment}.{skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <Link\r\n                        onClick={() => {\r\n                            setData(protocolId, number)\r\n                        }}\r\n                        to=\"/program-template-edit\"\r\n                    >\r\n                        <img\r\n                            title=\"Редагувати\"\r\n                            className=\"icon edit_icon\"\r\n                            src={EditIcon}\r\n                        />\r\n                    </Link>\r\n\r\n                    <img\r\n                        title=\"Дублікат\"\r\n                        className=\"icon\"\r\n                        onClick={() =>\r\n                            CreateDuplicateProtocol(\r\n                                protocolId,\r\n                                +length + 1,\r\n                                sphereOfDevelopment,\r\n                                skill,\r\n                                protocolName,\r\n                                interval,\r\n                                correctionProcedureStep1,\r\n                                correctionProcedureStep2,\r\n                                correctionProcedureStep3,\r\n                                criterionIncrease,\r\n                                desirableReaction,\r\n                                method,\r\n                                methodTakingHint,\r\n                                reductionСriterion,\r\n                                stepDescription,\r\n                                CriteriongenGenerSkill,\r\n                                instruction1,\r\n                                instruction2,\r\n                                instruction3\r\n                            )\r\n                        }\r\n                        src={Duplicate}\r\n                    />\r\n                    <CheckIsActive\r\n                        className=\"icon\"\r\n                        isActive={isActive}\r\n                        protocolId={protocolId}\r\n                    />\r\n                    {isOpen && (\r\n                        <SecondModal\r\n                            protocolId={protocolId}\r\n                            content={\r\n                                <>\r\n                                    <b className=\"second-text_modul\">\r\n                                        Ви впевнені, що хочете видалити\r\n                                        протокол?\r\n                                    </b>\r\n                                    <div className=\"second-button_modul\" />\r\n                                </>\r\n                            }\r\n                            handleClose={toggleModal}\r\n                        />\r\n                    )}\r\n\r\n                    <img\r\n                        title=\"Видалити\"\r\n                        className=\"icon\"\r\n                        onClick={() => DeleteProtocol(protocolId, protocols)}\r\n                        src={Delete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction CheckIsActive({isActive, protocolId}) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CreateDuplicateProtocol(\r\n    protocolId,\r\n    id,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    copiId,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n    CriteriongenGenerSkill,\r\n    instruction1,\r\n    instruction2,\r\n    instruction3\r\n) {\r\n    localStorage.setItem('program', protocolId)\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .add({\r\n            SphereOfDevelopment: sphereOfDevelopment,\r\n            ProtocolId: id,\r\n            Skill: skill,\r\n            StatusCopied: '(Копія Протоколу )',\r\n            IsActive: '0',\r\n            Interval: interval,\r\n            CorrectionProcedureStep1: correctionProcedureStep1,\r\n            CorrectionProcedureStep2: correctionProcedureStep2,\r\n            CorrectionProcedureStep3: correctionProcedureStep3,\r\n            CriterionIncrease: criterionIncrease,\r\n            DesirableReaction: desirableReaction,\r\n            Method: method,\r\n            MethodTakingHint: methodTakingHint,\r\n            ReductionСriterion: reductionСriterion,\r\n            StepDescription: stepDescription,\r\n            CriteriongenGenerSkill: CriteriongenGenerSkill,\r\n            Instructions1: instruction1,\r\n            Instructions2: instruction2,\r\n            Instructions3: instruction3,\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nfunction DeleteProtocol(protocolId, protocols) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(protocolId)\r\n        .delete()\r\n        .then((doc) => {\r\n            // for (let i = 0; i < protocols.length; i++) {\r\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocols[i].id)\r\n            //         .update({ ProtocolId: i + 1 })\r\n            // }\r\n        })\r\n}\r\n\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('CreateTemplate')\r\n        .doc(protocolId)\r\n        .update({IsActive: valueStatus})\r\n}\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem('programNumber', param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderSimple.jsx",["570"],"import {Link} from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderSimple() {\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link\r\n                        to=\"/home-template\"\r\n                        className=\"patients_link\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                    >\r\n                        Шаблони\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <Link to=\"/create-template\">\r\n                    <h2 style={{color: '#6F6F6F'}}>Створення шаблона</h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderSimple\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\EditProgramTemplate\\ProgramElement\\StimulusItem.jsx",["571"],"import Delete from '../../../../assets/delete.png'\r\nimport app from '../../../../Firebase/firebase'\r\nfunction StimulusItem({name, stimulId}) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramOnlyView.jsx",["572"],"import React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ProgramHeader from '../Header/ProgramHeader'\r\nimport MobileHeader from '../Header/MobileHeader'\r\n\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\n\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport './Program.css'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({protocol}) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({StatusCopied: ''})\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramOnlyView() {\r\n    let [stimulus, setStimulus] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Ok')\r\n                } else {\r\n                    console.log('Error in Program/ProgramOnlyView')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"title_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.SphereOfDevelopment}\r\n                                </div>\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Skill}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.Method}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                >\r\n                                    {protocol.DesirableReaction}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            {protocol.CriteriongenGenerSkill}\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    {protocol.Interval}\r\n                                    <div\r\n                                        className=\"element_name\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{minHeight: '1rem'}}\r\n                                    ></div>\r\n                                </div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.ReductionСriterion}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{fontSize: '20px'}}\r\n                                >\r\n                                    {protocol.CriterionIncrease}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    {protocol.MethodTakingHint}\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <li>\r\n                                                <div className=\"stymul_grid_container\">\r\n                                                    <div>{stimul.Name}</div>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                >\r\n                                    {protocol.StepDescription}\r\n                                </div>\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                >\r\n                                    {protocol.CorrectionProcedureStep1}\r\n                                </div>\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        placeholder={protocol.Instructions1}\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            backgroundColor: '#EEEEEE',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions1}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{fontSize: '20px'}}\r\n                                    >\r\n                                        {protocol.Instructions2}\r\n                                    </div>\r\n                                </div>\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу3:\r\n                                </div>\r\n                                <div className=\"element_value\">\r\n                                    <div\r\n                                        className=\"element_value\"\r\n                                        style={{\r\n                                            backgroundColor: '#EEEEEE',\r\n                                            fontSize: '20px',\r\n                                        }}\r\n                                    >\r\n                                        {protocol.Instructions3}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <div style={{height: '100px'}}></div>\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramEditable.jsx",["573","574","575","576","577"],"import ProgramHeader from '../Header/ProgramHeader'\r\nimport './Program.css'\r\nimport './ProgramTest.css'\r\nimport {TextInput} from 'react-native-paper'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../Firebase/firebase'\r\nimport ArrowHeader from './ProgramElement/ArrowHeader'\r\nimport StimulusItem from './ProgramElement/StimulusItem'\r\nimport {DefaultTheme, Provider as PaperProvider} from 'react-native-paper'\r\nimport MobileHeader from '../Header/MobileHeader'\r\nimport toast, {Toaster} from 'react-hot-toast'\r\n\r\nconst theme = {\r\n    ...DefaultTheme,\r\n    roundness: 0,\r\n    colors: {\r\n        ...DefaultTheme.colors,\r\n        primary: 'transparent',\r\n        accent: 'transparent',\r\n        dark: 'true',\r\n    },\r\n}\r\n\r\nfunction RemoveCopiedStatus({protocol}) {\r\n    if (protocol.StatusCopied != null) {\r\n        const db = app.firestore()\r\n        db.collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .update({StatusCopied: ''})\r\n    }\r\n\r\n    return <></>\r\n}\r\n\r\n// MAIN COMPONENT\r\n\r\nexport default function ProgramEditable() {\r\n    let test = []\r\n\r\n    let [stimulus, setStimulus] = useState([])\r\n    let [stimulInput, setStimulInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setStimulus(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    let [protocols, setProtocols] = useState([])\r\n\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    protocols = protocols.filter((protocol) =>\r\n        protocol.id.includes(localStorage.getItem('program'))\r\n    )\r\n    const [fileGenerated, setFileGenerated] = useState(0)\r\n\r\n    let userEmail = localStorage.getItem('user')\r\n    let childName = localStorage.getItem('child')\r\n\r\n    const exportUsersToExcel = (userEmail, kidName) => {\r\n        fetch(`/files/${userEmail}/${kidName}`).then((data) => {\r\n            setFileGenerated(data.status) // 200\r\n        })\r\n    }\r\n    return (\r\n        <PaperProvider theme={theme}>\r\n            <>\r\n                <MobileHeader />\r\n                <ProgramHeader />\r\n                <ArrowHeader />\r\n                <ul style={{position: 'relative', right: '4%'}}>\r\n                    {protocols.map((protocol) => (\r\n                        <div className=\"program_big_flex_container\">\r\n                            <div\r\n                                style={{marginBottom: '1rem'}}\r\n                                className=\"element_name\"\r\n                            >\r\n                                {' '}\r\n                                Протокол {localStorage.getItem(\r\n                                    'programNumber'\r\n                                )}{' '}\r\n                                {protocol.StatusCopied}.{' '}\r\n                                {protocol.SphereOfDevelopment}. {protocol.Skill}\r\n                            </div>\r\n                            <RemoveCopiedStatus protocol={protocol} />\r\n                            <div className=\"each_element_grid_container\">\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Сфера розвитку:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати сферу розвитку...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.SphereOfDevelopment}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addSphereOfDevelopment(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{marginTop: '1rem'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Навик:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати навик...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Skill}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        marginTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) => addSkill(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Метод:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати метод...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Method}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) => addMethod(e.target.value)}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Бажана реакція:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати бажану реакцію...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.DesirableReaction}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addDesirableReaction(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_name\"\r\n                                    >\r\n                                        Критерій узагальнення навику:{' '}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{backgroundColor: '#EEEEEE'}}\r\n                                        className=\"element_value\"\r\n                                    >\r\n                                        <div\r\n                                            style={{backgroundColor: '#EEEEEE'}}\r\n                                        >\r\n                                            <TextInput\r\n                                                placeholder=\"Вказати критерій...\"\r\n                                                className=\"element_value\"\r\n                                                multiline=\"true\"\r\n                                                underlineColor=\"transparent\"\r\n                                                selectionColor=\"primary\"\r\n                                                defaultValue={\r\n                                                    protocol.CriteriongenGenerSkill\r\n                                                }\r\n                                                style={{fontSize: '20px'}}\r\n                                                raised\r\n                                                theme={{\r\n                                                    colors: {\r\n                                                        background: '#fcfcfc',\r\n                                                    },\r\n                                                }}\r\n                                                onChange={(e) =>\r\n                                                    addCriteriongenGenerSkill(\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{paddingTop: '1rem'}}\r\n                                >\r\n                                    Рівні інтенсивності підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати рівні інтенсивності підказки...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.Interval}\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {backgroundColor: 'white'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addInterval(e.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <div\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Критерій зниження рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.ReductionСriterion}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(e) =>\r\n                                        addReductionСriterion(e.target.value)\r\n                                    }\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div className=\"element_name\">\r\n                                    Критерій підвищення рівня інтенсивності\r\n                                    підказки:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати критерій...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.CriterionIncrease}\r\n                                    onChange={(e) =>\r\n                                        addCriterionIncrease(e.target.value)\r\n                                    }\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'transparent'},\r\n                                    }}\r\n                                />\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                    }}\r\n                                    className=\"element_name\"\r\n                                >\r\n                                    Спосіб забирання підказки:\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        backgroundColor: '#EEEEEE',\r\n                                        paddingTop: '1rem',\r\n                                        minWidth: \"auto\",\r\n                                        maxWidth: \"auto\"\r\n                                    }}\r\n                                    className=\"element_value\"\r\n                                >\r\n                                    <select\r\n                                        defaultValue={protocol.MethodTakingHint}\r\n                                        onChange={(event) =>\r\n                                            addMethodTakingHint(\r\n                                                event.target.value\r\n                                            )\r\n                                        }\r\n                                        className=\"select_way\"\r\n\r\n                                    >\r\n                                        <option value=\"false\"></option>\r\n                                        <option value=\"Тимчасова затримка\">\r\n                                            Тимчасова затримка\r\n                                        </option>\r\n                                        <option value=\"Від найменшої до найбільшої\">\r\n                                            Від найменшої до найбільшої\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{\r\n                                        minHeight: '1rem',\r\n                                        backgroundColor: '#EEEEEE',\r\n                                    }}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div className=\"element_name\">\r\n                                    Стимули до етапів\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{lineHeight: '18px'}}\r\n                                >\r\n                                    <ul>\r\n                                        {stimulus.map((stimul) => (\r\n                                            <StimulusItem\r\n                                                name={stimul.Name}\r\n                                                stimulId={stimul.id}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div className=\"add_stymul_container\">\r\n                                            <button\r\n                                                onClick={() =>\r\n                                                    addStimul(stimulInput)\r\n                                                }\r\n                                                className=\"add_stymul_button\"\r\n                                            >\r\n                                                +\r\n                                            </button>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                onChange={(event) =>\r\n                                                    setStimulInput(\r\n                                                        event.target.value\r\n                                                    )\r\n                                                }\r\n                                                name=\"name\"\r\n                                                placeholder=\"Додати стимул....\"\r\n                                                className=\"add_stymul_input\"\r\n                                            />\r\n                                        </div>\r\n                                    </ul>\r\n                                </div>\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Опис етапів:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Додати опис етапів...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    defaultValue={protocol.StepDescription}\r\n                                    style={{fontSize: '20px'}}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: '#fcfcfc'},\r\n                                    }}\r\n                                    onChange={(event) =>\r\n                                        setStepDescription(event.target.value)\r\n                                    }\r\n                                />\r\n                                {/*step 1*/}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n                                <div\r\n                                    className=\"element_value\"\r\n                                    style={{minHeight: '1rem'}}\r\n                                ></div>\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: 'white'}}\r\n                                >\r\n                                    Процедура корекції неправильної відповіді:\r\n                                </div>\r\n                                <TextInput\r\n                                    placeholder=\"Вказати процедуру корекції неправильної відповіді...\"\r\n                                    className=\"element_value\"\r\n                                    multiline=\"true\"\r\n                                    underlineColor=\"transparent\"\r\n                                    selectionColor=\"primary\"\r\n                                    background=\"white\"\r\n                                    defaultValue={\r\n                                        protocol.CorrectionProcedureStep1\r\n                                    }\r\n                                    onChange={(event) =>\r\n                                        setCorrectionProcedureStep1(\r\n                                            event.target.value\r\n                                        )\r\n                                    }\r\n                                    style={{\r\n                                        fontSize: '20px',\r\n                                        backgroundColor: 'white',\r\n                                    }}\r\n                                    raised\r\n                                    theme={{\r\n                                        colors: {background: 'white'},\r\n                                    }}\r\n                                />\r\n                                {/* <Step1 Instructions1={protocol.Instructions1}/> */}\r\n\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 1:\r\n                                </div>\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions1}\r\n                                        onChange={(event) =>\r\n                                            addInstruction1(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            backgroundColor: '#EEEEEE',\r\n                                            fontSize: '20px',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                {/*step 2*/}\r\n\r\n                                {/* <Step2 Instructions2={protocol.Instructions2} /> */}\r\n                                <div className=\"element_name\">\r\n                                    Інструкції до етапу 2 :\r\n                                </div>\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions2}\r\n                                        onChange={(event) =>\r\n                                            addInstruction2(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            fontSize: '20px',\r\n                                            background: 'white',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                {/*step 3*/}\r\n\r\n                                {/* <Step3  Instructions3={protocol.Instructions3}/> */}\r\n                                <div\r\n                                    className=\"element_name\"\r\n                                    style={{backgroundColor: '#EEEEEE'}}\r\n                                >\r\n                                    Інструкції до етапу 3:\r\n                                </div>\r\n                                    <TextInput\r\n                                        placeholder=\"Додати інструкції до етапу...\"\r\n                                        className=\"element_value\"\r\n                                        multiline=\"true\"\r\n                                        underlineColor=\"transparent\"\r\n                                        selectionColor=\"primary\"\r\n                                        defaultValue={protocol.Instructions3}\r\n                                        onChange={(event) =>\r\n                                            addInstruction3(event.target.value)\r\n                                        }\r\n                                        style={{\r\n                                            backgroundColor: '#EEEEEE',\r\n                                            fontSize: '20px',\r\n                                        }}\r\n                                        raised\r\n                                        theme={{\r\n                                            colors: {\r\n                                                background: 'transparent',\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n                <button\r\n                    className=\"save_button_supervisor_mobile btn-background-slide\"\r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={() => exportUsersToExcel(userEmail, childName)}\r\n                >\r\n                    Зберегти файл\r\n                </button>\r\n                <div style={{height: '100px'}}></div>\r\n                <Toaster\r\n                    position=\"bottom-top\"\r\n                    reverseOrder={false}\r\n                    toastOptions={{\r\n                        style: {\r\n                            minWidth: '350px',\r\n                            minHeight: '60px',\r\n                            paddingLeft: '20px',\r\n                        },\r\n                        error: {\r\n                            duration: 5000,\r\n                            icon: '⚠️',\r\n                        },\r\n                    }}\r\n                />\r\n            </>\r\n        </PaperProvider>\r\n    )\r\n}\r\n\r\n//  -------\r\n// |  END  |\r\n//  -------\r\n\r\nfunction addInstruction1(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions1: instructionInput})\r\n}\r\n\r\nfunction addInstruction2(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions2: instructionInput})\r\n}\r\n\r\nfunction addInstruction3(instructionInput) {\r\n    const db = app.firestore()\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Instructions3: instructionInput})\r\n}\r\n\r\nfunction addStimul(stimulInput) {\r\n    const db = app.firestore()\r\n    if (stimulInput != '') {\r\n        db.collection('Supervisors')\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(localStorage.getItem('program'))\r\n            .collection('Stimulus')\r\n            .add({Name: stimulInput})\r\n    } else {\r\n        toast.error('Неможливо надіслати пустий стимул')\r\n    }\r\n}\r\nfunction addSkill(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Skill: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addMethod(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Method: params})\r\n    console.log(params)\r\n}\r\nfunction addDesirableReaction(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({DesirableReaction: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addReductionСriterion(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({ReductionСriterion: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addCriterionIncrease(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriterionIncrease: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction setStepDescription(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({StepDescription: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep3(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep3: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep2(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep2: params})\r\n    console.log(params)\r\n}\r\nfunction setCorrectionProcedureStep1(params) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CorrectionProcedureStep1: params})\r\n    console.log(params)\r\n}\r\n\r\nfunction addSphereOfDevelopment(sphereOfDevelopment) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({SphereOfDevelopment: sphereOfDevelopment})\r\n    console.log(sphereOfDevelopment)\r\n}\r\n\r\nfunction addInterval(interval) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({Interval: interval})\r\n}\r\n\r\nfunction addMethodTakingHint(method) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({MethodTakingHint: method})\r\n}\r\nfunction addCriteriongenGenerSkill(generSkill) {\r\n    const db = app.firestore()\r\n\r\n    db.collection('Supervisors')\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .update({CriteriongenGenerSkill: generSkill})\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProgramTemplate\\PageComponentTemplate\\ItemPublic.jsx",["578","579"],"import Delete from '../../../assets/delete.svg'\r\nimport './Items.css'\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({diagnos, age, count, number, idTemplate, history}) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div className=\"template_program_name\">Програма: {number}</div>\r\n                <div className=\"grid_display_diagnosis\">\r\n                    <div className=\"template_diagnos\">Діагноз:</div>\r\n                    <div className=\"template_diagnos_value\">{diagnos}</div>\r\n                </div>\r\n                <div className=\"grid_display_numbers\">\r\n                    <div className=\"template_age white_back\">Вік:</div>\r\n                    <div className=\"template_age_value white_back\">{age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів:\r\n                    </div>\r\n                    <div className=\"template_protocols_value\">{count}</div>\r\n                </div>\r\n                <div className=\"template_buttons_container\">\r\n                    <div></div>\r\n                    <button\r\n                        className=\"choose_template_button\"\r\n                        onClick={() =>\r\n                            CreateDuplicateTemplate(idTemplate, history)\r\n                        }\r\n                    >\r\n                        Обрати\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\n\r\nfunction CreateDuplicateTemplate(idTemplate, history) {\r\n    const db = app.firestore()\r\n\r\n    console.log(\r\n        db\r\n            .collection('ProgramTemplates')\r\n            .doc(idTemplate)\r\n            .collection('protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    snapshot.docs.map((doc) => {\r\n                        db.collection(localStorage.getItem('proffesion'))\r\n                            .doc(localStorage.getItem('user'))\r\n                            .collection('Patient')\r\n                            .doc(localStorage.getItem('child'))\r\n                            .collection('Protocols')\r\n                            .add(doc.data())\r\n                        console.log(doc.data())\r\n                    })\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log(\r\n                        'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n                    )\r\n                }\r\n            })\r\n    )\r\n    history.push('/protocol-list')\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplatePublic.jsx",["580","581","582"],"import {Link} from 'react-router-dom'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport TemplateItem from '../PageComponent/ItemPublic'\r\nimport ButtonsTemplate from '../../HomeTemplate/TemplatePages/ButtonsTemplate'\r\nimport './HomeProgramTemplate.css'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\n\r\nfunction HomeProgramTemplatePublic({history, countProto}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n    let btnText = 'Створити шаблон з нуля'\r\n    localStorage.setItem('homeType', 'createTemplate')\r\n    if (countProto != 0) {\r\n        btnText = 'Продовжіть створення шаблону'\r\n    }\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader/>\r\n            <Link to=\"/#/home\" className=\"mobile_home_link\">Пацієнти</Link>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(HomeProgramTemplatePublic)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\HomeProgramTemplate.jsx",["583","584","585"],"import {Link} from 'react-router-dom'\r\nimport {withRouter, Redirect} from 'react-router'\r\nimport React, {useEffect, useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport TemplateItem from '../PageComponent/Item'\r\nimport ButtonsTemplate from '../TemplatePages/ButtonsTemplate'\r\nimport './HomeProgramTemplate.css'\r\nimport Plus from '../../../assets/Plus.svg'\r\nimport MobileHeader from '../../Header/MobileHeader'\r\n\r\n\r\nfunction HomeProgramTemplate({history, countProto}) {\r\n    const [programTemplates, setProgramTemplates] = useState([])\r\n    localStorage.setItem('homeType', 'createTemplate')\r\n    let btnText = 'Створити шаблон з нуля'\r\n    if (countProto != 0) {\r\n        btnText = 'Cтворити шаблон'\r\n    }\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProgramTemplates(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n\r\n                    console.log('Сука ')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    let someList = []\r\n    for (let i = 0; i < programTemplates.length; i++) {\r\n        someList.push(i + 1)\r\n    }\r\n    console.log(someList)\r\n\r\n    return (\r\n        <>\r\n            <MobileHeader/>\r\n            <Link to=\"/#/home\" className=\"mobile_home_link\">Пацієнти</Link>\r\n            <ButtonsTemplate />\r\n            <div className=\"template-grid\">\r\n                <div className=\"create_template_ingrid_button\">\r\n                    <div className=\"add_template\">\r\n                        <div className=\"create_template_text\">{btnText}</div>\r\n                        <Link to=\"/create-template\">\r\n                            <img className=\"plus_sign_button\" src={Plus}></img>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {someList.map((idEl) => (\r\n                    <TemplateItem\r\n                        history={history}\r\n                        idTemplate={programTemplates[idEl - 1].id}\r\n                        number={idEl}\r\n                        diagnos={programTemplates[idEl - 1].Diagnos}\r\n                        age={programTemplates[idEl - 1].Age}\r\n                        count={programTemplates[idEl - 1].CountOfProtocol}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(HomeProgramTemplate)\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\TherapyResult\\File.js",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\DataPicker.js",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\PatientItem\\PatientItem.styled.js",[],"C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Login\\Navigation\\LoginNavigation.jsx",["586"],"import React from 'react'\r\nimport '../SignUpForm1.css'\r\nimport 'fontsource-dm-sans'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction LoginNavigation() {\r\n    let colorBackground = 'white'\r\n    let colorText = '#48535f'\r\n\r\n    return (\r\n        <nav className=\"number-buttons\">\r\n            <Link to=\"/registration\">\r\n                <StepButton\r\n                    colorBackground={colorBackground}\r\n                    colorText={colorText}\r\n                    stepNumber={1}\r\n                />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup2\">\r\n                <StepButton\r\n                    colorBackground={colorBackground}\r\n                    colorText={colorText}\r\n                    stepNumber={2}\r\n                />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup3\">\r\n                <StepButton\r\n                    colorBackground={colorBackground}\r\n                    colorText={colorText}\r\n                    stepNumber={3}\r\n                />\r\n            </Link>\r\n            <div className=\"line-between-number-buttons\" />\r\n            <Link to=\"/registration/signup4\">\r\n                <StepButton\r\n                    colorBackground={colorBackground}\r\n                    colorText={colorText}\r\n                    stepNumber={4}\r\n                />\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\nexport default LoginNavigation\r\n\r\nfunction StepButton({colorBackground, colorText, stepNumber}) {\r\n    if (localStorage.getItem('step') == stepNumber) {\r\n        return (\r\n            <button\r\n                style={{backgroundColor: colorBackground, color: colorText}}\r\n                className=\"number-button\"\r\n            >\r\n                {stepNumber}\r\n            </button>\r\n        )\r\n    } else {\r\n        return <button className=\"number-button\">{stepNumber}</button>\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Header\\PatientTemplateSwitch.jsx",["587","588"],"import {Link} from 'react-router-dom'\r\nimport {GoPrimitiveDot} from 'react-icons/go'\r\nfunction PatientTemplateSwitch(params) {\r\n    if (localStorage.getItem('homeType') == 'home') {\r\n        return (\r\n            <>\r\n                <div\r\n                    style={{\r\n                        width: '35%',\r\n                        height: '5%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignSelf: 'center',\r\n                        justifyContent: 'center',\r\n                        fontSize: '80%',\r\n                    }}\r\n                >\r\n                    <Link to=\"/home\" style={{color: '#6F6F6F'}}>\r\n                        <h1>Пацієнти</h1>\r\n                    </Link>\r\n                    <div\r\n                        style={{\r\n                            alignSelf: 'center',\r\n                            margin: '1.5% 1% 0 1%',\r\n                        }}\r\n                    >\r\n                        <GoPrimitiveDot />\r\n                    </div>\r\n                    <Link\r\n                        to=\"/home-template\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                        style={{color: 'black'}}\r\n                    >\r\n                        <h1>Шаблони</h1>\r\n                    </Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    if (localStorage.getItem('homeType') != 'home') {\r\n        return (\r\n            <>\r\n                <div\r\n                    style={{\r\n                        width: '30%',\r\n                        height: '5%',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center',\r\n                        fontSize: '80%',\r\n                    }}\r\n                >\r\n                    <Link to=\"/home\" style={{color: 'black'}}>\r\n                        <h1>Пацієнти</h1>\r\n                    </Link>\r\n                    <div\r\n                        style={{\r\n                            alignSelf: 'center',\r\n                            margin: '1.5% 1% 0 1%',\r\n                        }}\r\n                    >\r\n                        <GoPrimitiveDot />\r\n                    </div>\r\n                    <Link\r\n                        to=\"/home-template\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                        style={{color: '#6F6F6F'}}\r\n                    >\r\n                        <h1>Шаблони</h1>\r\n                    </Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default PatientTemplateSwitch\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ArrowHeaderEdit.jsx",["589"],"import {Link} from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\n\r\nfunction ArrowHeaderEdit() {\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link\r\n                        to=\"/home-template\"\r\n                        className=\"patients_link\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                    >\r\n                        Шаблони\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <Link to=\"/template-more-info\">\r\n                    <h2 style={{color: '#6F6F6F'}}>Редагування шаблона</h2>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeaderEdit\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProtocolItemTemplateEdit.jsx",["590","591","592"],"import {useState} from 'react'\r\nimport {AiOutlineArrowRight} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\nimport app from '../../../Firebase/firebase'\r\nimport Delete from '../../../assets/delete.svg'\r\nexport default function ProtocolItemTemplate({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{backgroundColor: colorItem, marginLeft: '7vw'}}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\r\n                    {skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <>\r\n                        <img\r\n                            title=\"Видалити\"\r\n                            className=\"icon\"\r\n                            onClick={() => DeleteProtocol(protocolId)}\r\n                            src={Delete}\r\n                        />\r\n                    </>\r\n\r\n                    <Link\r\n                        title=\"Переглянути\"\r\n                        onClick={() => {\r\n                            setData(protocolId, number)\r\n                        }}\r\n                        to=\"template-more-info-protocol\"\r\n                    >\r\n                        <AiOutlineArrowRight\r\n                            className=\"icon go_icon\"\r\n                            color=\"black\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction DeleteProtocol(protocolId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(protocolId)\r\n        .delete()\r\n        .then((doc) => {})\r\n}\r\n\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem('programNumber', param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItemTherapist.jsx",["593","594","595","596","597"],"import Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport {useState} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport {AiOutlineArrowRight} from 'react-icons/ai'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function ProtocolItemTherapist({\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"protocol_item\"\r\n                style={{backgroundColor: colorItem, marginLeft: '7vw'}}\r\n            >\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number} {statusCopied}. {sphereOfDevelopment}.{' '}\r\n                    {skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <CheckIsActive\r\n                        isActive={isActive}\r\n                        protocolId={protocolId}\r\n                    />\r\n                    <Link\r\n                        title=\"Переглянути\"\r\n                        onClick={() => {\r\n                            setData(protocolId, number)\r\n                        }}\r\n                        to=\"/program\"\r\n                    >\r\n                        <AiOutlineArrowRight\r\n                            className=\"icon go_icon\"\r\n                            color=\"black\"\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CheckIsActive({isActive, protocolId}) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({IsActive: valueStatus})\r\n}\r\n\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem('programNumber', param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ProtocolItem.jsx",["598","599","600","601","602","603","604","605","606","607"],"import Duplicate from '../../../assets/duplicate_task.svg'\r\nimport Visible from '../../../assets/visible.svg'\r\nimport UnVisible from '../../../assets/unVisible.svg'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport {useState, useEffect} from 'react'\r\nimport app from '../../../Firebase/firebase'\r\nimport {Link} from 'react-router-dom'\r\nimport EditIcon from '../../../assets/edit_new.svg'\r\nimport SecondModal from '../../ModalWindow/SecondModal'\r\nexport default function ProtocolItem({\r\n    protocols,\r\n    number,\r\n    protocolId,\r\n    protocolName,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    length,\r\n    statusCopied,\r\n    isActive,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n    CriteriongenGenerSkill,\r\n    instruction1,\r\n    instruction2,\r\n    instruction3,\r\n}) {\r\n    let [colorItem, setColorItem] = useState('')\r\n\r\n    if (+number % 2 != true) {\r\n        colorItem = '#EEEEEE'\r\n    }\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggleModal = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"protocol_item\" style={{backgroundColor: colorItem}}>\r\n                <p className=\"protocol_item_text \">\r\n                    Протокол {number}\r\n                    {statusCopied}.{sphereOfDevelopment}.{skill}\r\n                </p>\r\n                <div className=\"icon_place\">\r\n                    <CheckIsActive\r\n                        className=\"icon\"\r\n                        isActive={isActive}\r\n                        protocolId={protocolId}\r\n                    />\r\n                    <Link\r\n                        onClick={() => {\r\n                            setData(protocolId, number)\r\n                        }}\r\n                        to=\"/program\"\r\n                    >\r\n                        <img\r\n                            title=\"Редагувати\"\r\n                            className=\"icon edit_icon\"\r\n                            src={EditIcon}\r\n                        />\r\n                    </Link>\r\n\r\n                    <img\r\n                        title=\"Дублікат\"\r\n                        className=\"icon\"\r\n                        onClick={() =>\r\n                            CreateDuplicateProtocol(\r\n                                protocolId,\r\n                                +length + 1,\r\n                                sphereOfDevelopment,\r\n                                skill,\r\n                                protocolName,\r\n                                interval,\r\n                                correctionProcedureStep1,\r\n                                correctionProcedureStep2,\r\n                                correctionProcedureStep3,\r\n                                criterionIncrease,\r\n                                desirableReaction,\r\n                                method,\r\n                                methodTakingHint,\r\n                                reductionСriterion,\r\n                                stepDescription,\r\n                                CriteriongenGenerSkill,\r\n                                instruction1,\r\n                                instruction2,\r\n                                instruction3\r\n                            )\r\n                        }\r\n                        src={Duplicate}\r\n                    />\r\n\r\n                    {isOpen && (\r\n                        <SecondModal\r\n                            protocolId={protocolId}\r\n                            content={\r\n                                <>\r\n                                    <b className=\"second-text_modul\">\r\n                                        Ви впевнені, що хочете видалити\r\n                                        протокол?\r\n                                    </b>\r\n                                    <div className=\"second-button_modul\" />\r\n                                </>\r\n                            }\r\n                            handleClose={toggleModal}\r\n                        />\r\n                    )}\r\n\r\n                    <img\r\n                        title=\"Видалити\"\r\n                        className=\"icon\"\r\n                        onClick={\r\n                            () => DeleteProtocol(protocolId) //, toggleModal\r\n                        }\r\n                        src={Delete}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction CheckIsActive({isActive, protocolId}) {\r\n    console.log(isActive)\r\n    if (isActive == true) {\r\n        return (\r\n            <img\r\n                title=\"Активований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '0')}\r\n                className=\"icon\"\r\n                src={Visible}\r\n            />\r\n        )\r\n    } else {\r\n        return (\r\n            <img\r\n                title=\"Деактивований\"\r\n                onClick={() => UpdateActiveStatus(protocolId, '1')}\r\n                className=\"icon\"\r\n                src={UnVisible}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nfunction CreateDuplicateProtocol(\r\n    protocolId,\r\n    id,\r\n    sphereOfDevelopment,\r\n    skill,\r\n    copiId,\r\n    interval,\r\n    correctionProcedureStep1,\r\n    correctionProcedureStep2,\r\n    correctionProcedureStep3,\r\n    criterionIncrease,\r\n    desirableReaction,\r\n    method,\r\n    methodTakingHint,\r\n    reductionСriterion,\r\n    stepDescription,\r\n    CriteriongenGenerSkill,\r\n    instruction1,\r\n    instruction2,\r\n    instruction3\r\n) {\r\n    localStorage.setItem('program', protocolId)\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            SphereOfDevelopment: sphereOfDevelopment,\r\n            ProtocolId: id,\r\n            Skill: skill,\r\n            StatusCopied: '(Копія Протоколу )',\r\n            IsActive: '0',\r\n            Interval: interval,\r\n            CorrectionProcedureStep1: correctionProcedureStep1,\r\n            CorrectionProcedureStep2: correctionProcedureStep2,\r\n            CorrectionProcedureStep3: correctionProcedureStep3,\r\n            CriterionIncrease: criterionIncrease,\r\n            DesirableReaction: desirableReaction,\r\n            Method: method,\r\n            MethodTakingHint: methodTakingHint,\r\n            ReductionСriterion: reductionСriterion,\r\n            StepDescription: stepDescription,\r\n            CriteriongenGenerSkill: CriteriongenGenerSkill,\r\n            Instructions1: instruction1,\r\n            Instructions2: instruction2,\r\n            Instructions3: instruction3,\r\n        })\r\n        .then(function (docRef) {\r\n            db.collection(localStorage.getItem('proffesion'))\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols')\r\n                .doc(docRef.id)\r\n                .collection('CriteriongenGenerSkill')\r\n                .add({Text: ''})\r\n            db.collection('User')\r\n                .doc(localStorage.getItem('user'))\r\n                .collection('Patient')\r\n                .doc(localStorage.getItem('child'))\r\n                .collection('Protocols')\r\n                .doc(docRef.id)\r\n                .collection('Stimulus')\r\n                .add({Name: ''})\r\n            console.log('Document written with ID: ', docRef.id)\r\n        })\r\n        .catch(function (error) {\r\n            console.error('Error adding document: ', error)\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nfunction DeleteProtocol(protocolId, protocols) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .delete()\r\n        .then((doc) => {\r\n            // for (let i = 0; i < protocols.length; i++) {\r\n            //     console.log(\"ПІЗДААААА  \" + i+1 + \"БЛЯДСЬКИЙ ПРІОР \" + protocols[i].ProtocolId)\r\n            //     db.collection(localStorage.getItem(\"proffesion\"))\r\n            //         .doc(localStorage.getItem('user'))\r\n            //         .collection('Patient')\r\n            //         .doc(localStorage.getItem('child'))\r\n            //         .collection('Protocols').doc(protocols[i].id)\r\n            //         .update({ ProtocolId: i + 1 })\r\n            // }\r\n        })\r\n    fetch(\r\n        `https://john-steck-api.herokuapp.com/priority_correction/${localStorage.getItem(\r\n            'user'\r\n        )}/${localStorage.getItem('child')}`\r\n    ).then((data) => {})\r\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\r\n        db.collection('Therapists')\r\n            .doc(terapist)\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(protocolId)\r\n            .delete()\r\n    })\r\n}\r\n\r\nfunction UpdateActiveStatus(protocolId, valueStatus) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .update({IsActive: valueStatus})\r\n}\r\nfunction setData(param1, param2) {\r\n    localStorage.setItem('program', param1)\r\n    localStorage.setItem('programNumber', param2)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ProtocolList\\PageComponent\\ArrowHeader.jsx",["608","609","610"],"import {Link} from 'react-router-dom'\r\nimport React, {useEffect, useState} from 'react'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport Delete from '../../../assets/delete.svg'\r\nimport app from '../../../Firebase/firebase'\r\nimport {BsPlusCircle} from 'react-icons/bs'\r\nimport '../ProtocolList.css'\r\nfunction ArrowHeader() {\r\n    const [protocols, setProtocols] = useState([])\r\n    useEffect(() => {\r\n        const db = app.firestore()\r\n        const unsubscribe = db\r\n            .collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .onSnapshot((snapshot) => {\r\n                if (snapshot.size) {\r\n                    setProtocols(\r\n                        snapshot.docs.map((doc) => ({\r\n                            ...doc.data(),\r\n                            id: doc.id,\r\n                        }))\r\n                    )\r\n                    console.log('Сука')\r\n                } else {\r\n                    console.log('Сука1')\r\n                }\r\n            })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"patient_upper_flex_container\">\r\n                <h2 style={{marginLeft: '6rem'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link to=\"/patient\" className=\"patients_link\">\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2 style={{color: '#6F6F6F'}}>Програма</h2>\r\n\r\n                <div\r\n                    onClick={() => addProto(protocols.length)}\r\n                    className=\"add-proto\"\r\n                >\r\n                    <BsPlusCircle size={50} style={{marginTop: '30px'}} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nfunction addProto(length) {\r\n    const db = app.firestore()\r\n\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .add({\r\n            ProtocolId: +length + 1,\r\n            SphereOfDevelopment: '',\r\n            Skill: '',\r\n            IsActive: '',\r\n            Interval: '',\r\n            CorrectionProcedureStep1: '',\r\n            CorrectionProcedureStep2: '',\r\n            CorrectionProcedureStep3: '',\r\n            CriterionIncrease: '',\r\n            DesirableReaction: '',\r\n            Method: '',\r\n            MethodTakingHint: '',\r\n            ReductionСriterion: '',\r\n            StepDescription: '',\r\n            CriteriongenGenerSkill: '',\r\n        })\r\n\r\n    // console.log(data.key)\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\Popup.jsx",["611","612","613"],"import React from 'react'\r\nimport './Modal.css'\r\nimport app from '../../Firebase/firebase'\r\nconst Popup = (props) => {\r\n    console.log(props.protocols)\r\n    return (\r\n        <div className=\"popup-box\">\r\n            <div className=\"box\">\r\n                <span className=\"close-icon\" onClick={props.handleClose}>\r\n                    x\r\n                </span>\r\n                {props.content}\r\n                <div className=\"button-popup\">\r\n                    <button\r\n                        onClick={() =>\r\n                            CreateProgramTemplates(\r\n                                props.protocols,\r\n                                props.child,\r\n                                'Приватний'\r\n                            )\r\n                        }\r\n                        className=\"button_private\"\r\n                    >\r\n                        Приватний\r\n                    </button>\r\n                    <button\r\n                        onClick={() =>\r\n                            CreateProgramTemplates(\r\n                                props.protocols,\r\n                                props.child,\r\n                                'Публічний'\r\n                            )\r\n                        }\r\n                        className=\"button_public\"\r\n                    >\r\n                        Публічний\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\nfunction CreateProgramTemplates(protocols, child, typeTemplates) {\r\n    var endCycle = 0\r\n    console.log(protocols)\r\n    const db = app.firestore()\r\n    if (typeTemplates == 'Приватний') {\r\n        db.collection(localStorage.getItem('proffesion'))\r\n            .doc(localStorage.getItem('user'))\r\n            .collection('ProgramTemplates')\r\n            .add({\r\n                Age: child.Age,\r\n                Diagnos: child.Diagnos,\r\n                KidWeight: child.KidWeight,\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection(localStorage.getItem('proffesion'))\r\n                        .doc(localStorage.getItem('user'))\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db.collection(localStorage.getItem('proffesion'))\r\n                    .doc(localStorage.getItem('user'))\r\n                    .collection('ProgramTemplates')\r\n                    .doc(docRef.id)\r\n                    .set({\r\n                        Age: child.Age,\r\n                        Diagnos: child.Diagnos,\r\n                        KidWeight: child.KidWeight,\r\n                        CountOfProtocol: protocols.length,\r\n                    })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n    if (typeTemplates == 'Публічний') {\r\n        db.collection('ProgramTemplates')\r\n            .add({\r\n                Age: child.Age,\r\n                Diagnos: child.Diagnos,\r\n                KidWeight: child.KidWeight,\r\n            })\r\n            .then(function (docRef) {\r\n                protocols.map((protocol) =>\r\n                    db\r\n                        .collection('ProgramTemplates')\r\n                        .doc(docRef.id)\r\n                        .collection('protocols')\r\n                        .add(protocol)\r\n                )\r\n                db.collection('ProgramTemplates').doc(docRef.id).set({\r\n                    Age: child.Age,\r\n                    Diagnos: child.Diagnos,\r\n                    KidWeight: child.KidWeight,\r\n                    CountOfProtocol: protocols.length,\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Error adding document: ', error)\r\n            })\r\n        endCycle = 1\r\n    }\r\n\r\n    if (endCycle == 1) {\r\n        setTimeout(() => {\r\n            alert(`${typeTemplates} шаблон протоколів успішно створений!`)\r\n            window.location.reload()\r\n        })\r\n    }\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmap.jsx",["614","615","616"],"import React, {useEffect, useState} from 'react'\r\nimport {storage} from '../../Firebase/firebase'\r\nimport {Button, Col, Container, Form, Row} from 'react-bootstrap'\r\nimport './VBmap.css'\r\nimport VBmapFile from './VBmapFile'\r\n\r\nfunction About() {\r\n    const [filesList, setFilesList] = useState([])\r\n    const [filename, setFile] = useState('')\r\n    // let filesData = []\r\n    // let storageRef = storage.ref(FOLDER_NAME);\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setFile(e.target.files[0])\r\n        }\r\n    }\r\n    const handleUpload = () => {\r\n        const uploadTask = storage\r\n            .ref(\r\n                `patients/${localStorage.getItem('child')}/vbmap/${\r\n                    filename.name\r\n                }`\r\n            )\r\n            .put(filename)\r\n        uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {},\r\n            (error) => {\r\n                console.log(error)\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref('patients/' + localStorage.getItem('child') + '/vbmap')\r\n                    .child(filename.name)\r\n                    .getDownloadURL()\r\n                    .then((url) => {\r\n                        // console.log(url)\r\n                        setFilesList((filesList) => [\r\n                            ...filesList,\r\n                            {name: filename.name},\r\n                        ])\r\n                    })\r\n            }\r\n        )\r\n    }\r\n\r\n    // console.log(\"image:\", filename)\r\n    useEffect(() => {\r\n        // let filesData = []\r\n        const FOLDER_NAME = `patients/${localStorage.getItem('child')}/vbmap`\r\n        let storageRef = storage.ref(FOLDER_NAME)\r\n\r\n        storageRef\r\n            .listAll()\r\n            .then(function (result) {\r\n                result.items.forEach(function (imageRef) {\r\n                    // And finally display them\r\n                    let fileData = {}\r\n                    fileData['name'] = imageRef.name\r\n                    // console.log(imageRef.name)\r\n                    let fullRef = storageRef.child(`${imageRef.name}`)\r\n                    // Get metadata properties\r\n                    fullRef\r\n                        .getMetadata()\r\n                        .then((metadata) => {\r\n                            // Metadata now contains the metadata for 'images/forest.jpg'\r\n                            fileData['timeCreated'] = metadata.timeCreated\r\n                            fileData['updated'] = metadata.updated\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error)\r\n                        })\r\n                    displayImage(imageRef, fileData)\r\n                    // console.log('222')\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n\r\n        function displayImage(imageRef, fileData) {\r\n            imageRef\r\n                .getDownloadURL()\r\n                .then(function (url) {\r\n                    fileData['url'] = url\r\n                    // filesData.push(fileData)\r\n                    // console.log('333')\r\n                    console.log(fileData + 'fileData')\r\n                    setFilesList((filesList) => [...filesList, fileData])\r\n                    // setCount(fileList.push()[filesData]);\r\n                    // setCount([filesData]);\r\n                    // count.forEach(element => console.log(element));\r\n                    console.log(filesList + 'filesList')\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {console.log(filesList, '111')}\r\n            <Row className=\"justify-content-start\">\r\n                <Col\r\n                    md={{offset: 1, span: 7}}\r\n                    xs={12}\r\n                    lg={{offset: 2, span: 5}}\r\n                    sm={{offset: 1, span: 7}}\r\n                    className=\"vertical-align-center\"\r\n                >\r\n                    <Form class=\"file-form\">\r\n                        <Form.Group>\r\n                            <Form.File\r\n                                id=\"exampleFormControlFile1\"\r\n                                label=\"\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n                {/* <Col xl={2} lg={2} md={2} xs={12} sm={4} className=\"\">\r\n                    <Button onClick={handleUpload} variant=\"primary submit-button\">Завантажити</Button>\r\n                </Col> */}\r\n            </Row>\r\n            <Row className=\"justify-content-evenly \">\r\n                {filesList.map(({name, timeCreated, updated, url}, idx) => (\r\n                    <VBmapFile\r\n                        filename={name}\r\n                        timeCreated={timeCreated}\r\n                        updated={updated}\r\n                        url={url}\r\n                        key={`${name}_${idx}`}\r\n                    />\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\ModalWindow\\SecondModal.jsx",["617"],"import React from 'react'\r\nimport './SecondModal.css'\r\nimport app from '../../Firebase/firebase'\r\n//import DeleteProtocol from '../ProtocolList/PageComponent/ProtocolItem'\r\n\r\nfunction SecondModal({protocolId, handleClose, content}) {\r\n    return (\r\n        <div className=\"second-popup-box\">\r\n            <div className=\"second-box\">\r\n                <span className=\"second-close-icon\" onClick={handleClose}>\r\n                    x\r\n                </span>\r\n                {content}\r\n                <div className=\"second-button-popup\">\r\n                    <button\r\n                        onClick={handleClose}\r\n                        className=\"second-button_private\"\r\n                    >\r\n                        Скасувати\r\n                    </button>\r\n                    <button\r\n                        onClick={() => DeleteProtocol(protocolId)}\r\n                        className=\"second-button_public\"\r\n                    >\r\n                        Підтвердити\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondModal\r\n\r\nfunction DeleteProtocol(protocolId) {\r\n    console.log(protocolId)\r\n\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(protocolId)\r\n        .delete()\r\n    JSON.parse(localStorage.getItem('therapistID')).map((terapist) => {\r\n        db.collection('Therapists')\r\n            .doc(terapist)\r\n            .collection('Patient')\r\n            .doc(localStorage.getItem('child'))\r\n            .collection('Protocols')\r\n            .doc(protocolId)\r\n            .delete()\r\n    })\r\n\r\n    alert(`Протокол успішно видалений!`)\r\n    setTimeout(() => {\r\n        window.location.reload()\r\n    }, 100)\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplateMoreInfo\\ProgramElement\\StimulusItem.jsx",["618"],"import Delete from '../../../../assets/delete.png'\r\nimport app from '../../../../Firebase/firebase'\r\nfunction StimulusItem({name, stimulId}) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(localStorage.getItem('templateIdMore'))\r\n        .collection('protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\ArrowHeader.jsx",["619","620"],"import {Link} from 'react-router-dom'\r\nimport Arrow from '../../../assets/arrow.png'\r\nimport '../Program.css'\r\nimport '../../PatientItem/PatientItem.css'\r\nfunction ArrowHeader() {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"patient_upper_flex_container\"\r\n                style={{marginTop: '10px'}}\r\n            >\r\n                <h2 style={{marginLeft: '100px'}}>\r\n                    <Link to=\"/\" className=\"patients_link\">\r\n                        Пацієнти\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link to=\"/patient\" className=\"patients_link\">\r\n                        {localStorage.getItem('childName')}\r\n                    </Link>\r\n                </h2>\r\n                <img\r\n                    src={Arrow}\r\n                    height=\"20\"\r\n                    style={{\r\n                        marginLeft: '30px',\r\n                        marginRight: '30px',\r\n                        marginTop: '28px',\r\n                        color: 'black',\r\n                    }}\r\n                />\r\n                <h2>\r\n                    <Link className=\"program_link\" to=\"/protocol-list\">\r\n                        Програма\r\n                    </Link>\r\n                </h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ArrowHeader\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\Program\\ProgramElement\\StimulusItem.jsx",["621"],"import Delete from '../../../assets/delete.png'\r\nimport app from '../../../Firebase/firebase'\r\nfunction StimulusItem({name, stimulId}) {\r\n    return (\r\n        <div className=\"stymuls\">\r\n            <li>\r\n                <div className=\"stymul_grid_container\">\r\n                    <div>{name}</div>\r\n                    <img\r\n                        onClick={() => DeleteStimul(stimulId)}\r\n                        src={Delete}\r\n                        height=\"15\"\r\n                        className=\"delete_stymul\"\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                            marginLeft: '60px',\r\n                            marginRight: '30px',\r\n                            marginTop: '5px',\r\n                            color: '#EEEEEE',\r\n                        }}\r\n                    />\r\n                </div>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\nexport default StimulusItem\r\nfunction DeleteStimul(stimulId) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('Patient')\r\n        .doc(localStorage.getItem('child'))\r\n        .collection('Protocols')\r\n        .doc(localStorage.getItem('program'))\r\n        .collection('Stimulus')\r\n        .doc(stimulId)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\Item.jsx",["622"],"import Delete from '../../../assets/trash.svg'\r\n\r\nimport app from '../../../Firebase/firebase'\r\n\r\nfunction TemplateItem({diagnos, age, count, number, idTemplate, history}) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div className=\"template_program_name\">Програма: {number}</div>\r\n                <div className=\"grid_display_diagnosis\">\r\n                    <div className=\"template_diagnos\">Діагноз:</div>\r\n                    <div className=\"template_diagnos_value\">{diagnos}</div>\r\n                </div>\r\n                <div className=\"grid_display_numbers\">\r\n                    <div className=\"template_age white_back\">Вік:</div>\r\n                    <div className=\"template_age_value white_back\">{age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів:\r\n                    </div>\r\n                    <div className=\"template_protocols_value\">{count}</div>\r\n                </div>\r\n                <div className=\"template_buttons_container\">\r\n                    <img\r\n                        className=\"template_img\"\r\n                        onClick={() => DeleteTemplate(idTemplate)}\r\n                        src={Delete}\r\n                    ></img>\r\n                    <button\r\n                        className=\"choose_template_button_home\"\r\n                        onClick={() => moreInfoTemplate(idTemplate, history)}\r\n                    >\r\n                        Переглянути\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\nfunction moreInfoTemplate(id, history) {\r\n    localStorage.setItem('templateIdMore', id)\r\n    history.push('/template-more-info')\r\n}\r\n\r\nfunction DeleteTemplate(idTemplate) {\r\n    const db = app.firestore()\r\n    db.collection(localStorage.getItem('proffesion'))\r\n        .doc(localStorage.getItem('user'))\r\n        .collection('ProgramTemplates')\r\n        .doc(idTemplate)\r\n        .delete()\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\TemplatePages\\ButtonsTemplate.jsx",["623","624","625"],"import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function ButtonsTemplate() {\r\n    let decorPublic = 'none'\r\n    let decorPrivate = 'none'\r\n\r\n    if (localStorage.getItem('templateType') == 'public') {\r\n        decorPublic = 'underline'\r\n        decorPrivate = 'none'\r\n    }\r\n    if (localStorage.getItem('templateType') == 'private') {\r\n        decorPrivate = 'underline'\r\n        decorPublic = 'none'\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"buttons-template\">\r\n                <Link to=\"/home-template\">\r\n                    <button\r\n                        id=\"temp-button-prv\"\r\n                        className=\"buttons-template-private\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'private')\r\n                        }\r\n                        style={{textDecoration: decorPrivate}}\r\n                    >\r\n                        Мої шаблони\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/home-template\">\r\n                    <button\r\n                        id=\"temp-button-pub\"\r\n                        className=\"buttons-template-public\"\r\n                        onClick={() =>\r\n                            localStorage.setItem('templateType', 'public')\r\n                        }\r\n                        style={{textDecoration: decorPublic}}\r\n                    >\r\n                        Загальні шаблони\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\HomeTemplate\\PageComponent\\ItemPublic.jsx",["626"],"import app from '../../../Firebase/firebase'\r\nimport './HomeItems.css'\r\nfunction TemplateItem({diagnos, age, count, number, idTemplate, history}) {\r\n    return (\r\n        <>\r\n            <div id=\"template\" className=\"template_place\">\r\n                <div className=\"template_program_name\">Програма: {number}</div>\r\n                <div className=\"grid_display_diagnosis\">\r\n                    <div className=\"template_diagnos\">Діагноз:</div>\r\n                    <div className=\"template_diagnos_value\">{diagnos}</div>\r\n                </div>\r\n                <div className=\"grid_display_numbers\">\r\n                    <div className=\"template_age white_back\">Вік:</div>\r\n                    <div className=\"template_age_value white_back\">{age}</div>\r\n                    <div className=\"template_protocols\">\r\n                        Кількість протоколів:\r\n                    </div>\r\n                    <div className=\"template_protocols_value\">{count}</div>\r\n                </div>\r\n                <div className=\"template_buttons_container\">\r\n                    <div></div>\r\n                    <button\r\n                        className=\"choose_template_button_home\"\r\n                        onClick={() => moreInfoTemplate(idTemplate, history)}\r\n                    >\r\n                        Переглянути\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default TemplateItem\r\nfunction moreInfoTemplate(id, history) {\r\n    localStorage.setItem('templateIdMore', id)\r\n    history.push('/template-more-info')\r\n}\r\n\r\n// function CreateDuplicateTemplate(idTemplate, history) {\r\n//     const db = app.firestore()\r\n\r\n//     console.log(\r\n//         db\r\n//             .collection('ProgramTemplates')\r\n//             .doc(idTemplate)\r\n//             .collection('protocols')\r\n//             .onSnapshot((snapshot) => {\r\n//                 if (snapshot.size) {\r\n//                     snapshot.docs.map((doc) => {\r\n//                         db.collection(localStorage.getItem(\"proffesion\"))\r\n//                             .doc(localStorage.getItem('user'))\r\n//                             .collection('Patient')\r\n//                             .doc(localStorage.getItem('child'))\r\n//                             .collection('Protocols')\r\n//                             .add(doc.data())\r\n//                         console.log(doc.data())\r\n//                     })\r\n\r\n//                     console.log('Сука ')\r\n//                 } else {\r\n//                     console.log(\r\n//                         'Error in Components/ProgramTemplate/PageComponentTemplate/Item.jsx'\r\n//                     )\r\n//                 }\r\n//             })\r\n//     )\r\n//     history.push('/protocol-list')\r\n// }\r\n","C:\\Users\\пк\\ionkid_2803\\PROMETHEUS_web_project\\src\\Components\\VBmap\\VBmapFile.jsx",["627","628"],"import React from 'react'\r\nimport {Col} from 'react-bootstrap'\r\nimport {storage} from '../../Firebase/firebase'\r\nimport Delete from '../../assets/trash.svg'\r\n\r\nimport close_img from '../../assets/cancel.svg'\r\nimport avi from '../../assets/avi.svg'\r\nimport csv from '../../assets/csv.svg'\r\nimport docx from '../../assets/docx.svg'\r\nimport exe from '../../assets/exe.svg'\r\nimport excel from '../../assets/exel.svg'\r\nimport html from '../../assets/html.svg'\r\nimport file from '../../assets/file1.svg'\r\nimport jpg from '../../assets/jpg.svg'\r\nimport mp3 from '../../assets/mp3.svg'\r\nimport mp4 from '../../assets/mp4.svg'\r\nimport pdf from '../../assets/pdf.svg'\r\nimport png from '../../assets/png.svg'\r\nimport txt from '../../assets/txt.svg'\r\nimport zip from '../../assets/zip.svg'\r\n\r\nconst getFileExtension = (filename) => {\r\n    return filename.slice(\r\n        (Math.max(0, filename.lastIndexOf('.')) || Infinity) + 1\r\n    )\r\n}\r\n\r\nconst FileExtensionsArray = {\r\n    avi: ['avi'],\r\n    csv: ['csv'],\r\n    docx: ['docx', 'docm', 'doc', 'dotx', 'dotm', 'dot', 'DOC', 'DOCX'],\r\n    exe: ['exe'],\r\n    excel: [\r\n        'excel',\r\n        'xlsx',\r\n        'xlsm',\r\n        'xlsb',\r\n        'xls',\r\n        'xml',\r\n        'xltx',\r\n        'xltm',\r\n        'xlt',\r\n        'xlx',\r\n        'XLSX',\r\n        'XLX',\r\n    ],\r\n    html: ['html'],\r\n    jpg: ['jpg', 'jpeg'],\r\n    mp3: ['mp3'],\r\n    mp4: ['mp4'],\r\n    pdf: ['pdf'],\r\n    png: ['png'],\r\n    txt: ['txt', 'log'],\r\n    zip: ['zip', 'rar'],\r\n}\r\n// var n = fruits.includes(\"Mango\");\r\n\r\nconst getFileIcon = (fileExtension) => {\r\n    if (FileExtensionsArray.avi.includes(fileExtension)) {\r\n        return avi\r\n    } else if (FileExtensionsArray.csv.includes(fileExtension)) {\r\n        return csv\r\n    } else if (FileExtensionsArray.docx.includes(fileExtension)) {\r\n        return docx\r\n    } else if (FileExtensionsArray.exe.includes(fileExtension)) {\r\n        return exe\r\n    } else if (FileExtensionsArray.excel.includes(fileExtension)) {\r\n        return excel\r\n    } else if (FileExtensionsArray.html.includes(fileExtension)) {\r\n        return html\r\n    } else if (FileExtensionsArray.jpg.includes(fileExtension)) {\r\n        return jpg\r\n    } else if (FileExtensionsArray.mp3.includes(fileExtension)) {\r\n        return mp3\r\n    } else if (FileExtensionsArray.mp4.includes(fileExtension)) {\r\n        return mp4\r\n    } else if (FileExtensionsArray.pdf.includes(fileExtension)) {\r\n        return pdf\r\n    } else if (FileExtensionsArray.png.includes(fileExtension)) {\r\n        return png\r\n    } else if (FileExtensionsArray.txt.includes(fileExtension)) {\r\n        return txt\r\n    } else if (FileExtensionsArray.zip.includes(fileExtension)) {\r\n        return zip\r\n    } else {\r\n        return file\r\n    }\r\n}\r\n\r\nfunction deleteFile(filename, url, folder = 'docs') {\r\n    let answer = window.confirm('Видалити файл?')\r\n    if (answer) {\r\n        let fileRef = storage.refFromURL(url)\r\n        // console.log(\"File in database before delete exists : \" + fileRef.exists())\r\n        fileRef\r\n            .delete()\r\n            .then(function () {\r\n                // File deleted successfully\r\n                console.log('File Deleted')\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            })\r\n    } else {\r\n        console.log('Помилка видалення файлу')\r\n    }\r\n}\r\n\r\nconst VBmapFile = ({filename, timeCreated, updated, url}) => (\r\n    <Col md=\"auto\" sm={5} xs={10} className=\"file-box \">\r\n        <img\r\n            src={getFileIcon(getFileExtension(filename))}\r\n            className=\"file-img \"\r\n            alt=\"file image\"\r\n        />\r\n        <img\r\n            src={Delete}\r\n            id=\"delete-file-img\"\r\n            onClick={() => deleteFile(filename, url)}\r\n            className=\"close-img\"\r\n            alt=\"close\"\r\n        />\r\n        <span className=\"file-name\">{filename}</span>\r\n    </Col>\r\n)\r\n\r\nexport default VBmapFile\r\n\r\n// Create a reference to the file to delete\r\n//     let desertRef = storage.child(`files/desert.jpg`);\r\n//     // Delete the file\r\n//     desertRef.delete().then(() => {\r\n//         // File deleted successfully\r\n//     }).catch((error) => {\r\n//         console.log(error)\r\n//     });\r\n//     alert(\"close\")\r\n",{"ruleId":"629","replacedBy":"630"},{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","severity":1,"message":"634","line":9,"column":26,"nodeType":"635","messageId":"636","endLine":9,"endColumn":32},{"ruleId":"633","severity":1,"message":"637","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":26},{"ruleId":"633","severity":1,"message":"634","line":8,"column":26,"nodeType":"635","messageId":"636","endLine":8,"endColumn":32},{"ruleId":"633","severity":1,"message":"638","line":8,"column":42,"nodeType":"635","messageId":"636","endLine":8,"endColumn":47},{"ruleId":"639","severity":1,"message":"640","line":24,"column":49,"nodeType":"641","messageId":"642","endLine":24,"endColumn":51},{"ruleId":"643","severity":1,"message":"644","line":57,"column":47,"nodeType":"645","messageId":"646","endLine":57,"endColumn":49},{"ruleId":"639","severity":1,"message":"640","line":63,"column":57,"nodeType":"641","messageId":"642","endLine":63,"endColumn":59},{"ruleId":"647","severity":1,"message":"648","line":87,"column":9,"nodeType":"649","endLine":87,"endColumn":18,"suggestions":"650"},{"ruleId":"643","severity":1,"message":"644","line":89,"column":50,"nodeType":"645","messageId":"646","endLine":89,"endColumn":52},{"ruleId":"633","severity":1,"message":"651","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":27},{"ruleId":"633","severity":1,"message":"652","line":1,"column":29,"nodeType":"635","messageId":"636","endLine":1,"endColumn":39},{"ruleId":"633","severity":1,"message":"653","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":19},{"ruleId":"633","severity":1,"message":"654","line":3,"column":21,"nodeType":"635","messageId":"636","endLine":3,"endColumn":29},{"ruleId":"633","severity":1,"message":"655","line":4,"column":9,"nodeType":"635","messageId":"636","endLine":4,"endColumn":13},{"ruleId":"633","severity":1,"message":"654","line":6,"column":21,"nodeType":"635","messageId":"636","endLine":6,"endColumn":29},{"ruleId":"656","severity":1,"message":"657","line":23,"column":17,"nodeType":"658","endLine":32,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":38,"column":17,"nodeType":"658","endLine":47,"endColumn":19},{"ruleId":"633","severity":1,"message":"654","line":15,"column":8,"nodeType":"635","messageId":"636","endLine":15,"endColumn":16},{"ruleId":"643","severity":1,"message":"644","line":211,"column":18,"nodeType":"645","messageId":"646","endLine":211,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":212,"column":22,"nodeType":"645","messageId":"646","endLine":212,"endColumn":24},{"ruleId":"643","severity":1,"message":"644","line":213,"column":21,"nodeType":"645","messageId":"646","endLine":213,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":214,"column":20,"nodeType":"645","messageId":"646","endLine":214,"endColumn":22},{"ruleId":"643","severity":1,"message":"644","line":215,"column":17,"nodeType":"645","messageId":"646","endLine":215,"endColumn":19},{"ruleId":"643","severity":1,"message":"644","line":216,"column":18,"nodeType":"645","messageId":"646","endLine":216,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":217,"column":18,"nodeType":"645","messageId":"646","endLine":217,"endColumn":20},{"ruleId":"643","severity":1,"message":"644","line":218,"column":21,"nodeType":"645","messageId":"646","endLine":218,"endColumn":23},{"ruleId":"633","severity":1,"message":"659","line":222,"column":19,"nodeType":"635","messageId":"636","endLine":222,"endColumn":22},{"ruleId":"656","severity":1,"message":"657","line":257,"column":17,"nodeType":"658","endLine":266,"endColumn":19},{"ruleId":"660","severity":1,"message":"661","line":289,"column":33,"nodeType":"662","messageId":"646","endLine":289,"endColumn":43},{"ruleId":"633","severity":1,"message":"663","line":8,"column":8,"nodeType":"635","messageId":"636","endLine":8,"endColumn":11},{"ruleId":"633","severity":1,"message":"664","line":11,"column":8,"nodeType":"635","messageId":"636","endLine":11,"endColumn":12},{"ruleId":"633","severity":1,"message":"665","line":12,"column":9,"nodeType":"635","messageId":"636","endLine":12,"endColumn":23},{"ruleId":"633","severity":1,"message":"666","line":13,"column":10,"nodeType":"635","messageId":"636","endLine":13,"endColumn":17},{"ruleId":"633","severity":1,"message":"667","line":19,"column":10,"nodeType":"635","messageId":"636","endLine":19,"endColumn":14},{"ruleId":"633","severity":1,"message":"668","line":20,"column":25,"nodeType":"635","messageId":"636","endLine":20,"endColumn":39},{"ruleId":"639","severity":1,"message":"640","line":46,"column":40,"nodeType":"641","messageId":"642","endLine":46,"endColumn":42},{"ruleId":"643","severity":1,"message":"644","line":127,"column":44,"nodeType":"645","messageId":"646","endLine":127,"endColumn":46},{"ruleId":"633","severity":1,"message":"669","line":1,"column":9,"nodeType":"635","messageId":"636","endLine":1,"endColumn":17},{"ruleId":"633","severity":1,"message":"670","line":1,"column":19,"nodeType":"635","messageId":"636","endLine":1,"endColumn":28},{"ruleId":"633","severity":1,"message":"671","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":7,"column":44,"nodeType":"645","messageId":"646","endLine":7,"endColumn":46},{"ruleId":"633","severity":1,"message":"669","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":24},{"ruleId":"633","severity":1,"message":"670","line":1,"column":26,"nodeType":"635","messageId":"636","endLine":1,"endColumn":35},{"ruleId":"643","severity":1,"message":"644","line":21,"column":44,"nodeType":"645","messageId":"646","endLine":21,"endColumn":46},{"ruleId":"633","severity":1,"message":"672","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":14},{"ruleId":"633","severity":1,"message":"654","line":4,"column":21,"nodeType":"635","messageId":"636","endLine":4,"endColumn":29},{"ruleId":"633","severity":1,"message":"672","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":14},{"ruleId":"633","severity":1,"message":"654","line":4,"column":21,"nodeType":"635","messageId":"636","endLine":4,"endColumn":29},{"ruleId":"643","severity":1,"message":"644","line":5,"column":44,"nodeType":"645","messageId":"646","endLine":5,"endColumn":46},{"ruleId":"643","severity":1,"message":"644","line":48,"column":14,"nodeType":"645","messageId":"646","endLine":48,"endColumn":16},{"ruleId":"643","severity":1,"message":"644","line":55,"column":14,"nodeType":"645","messageId":"646","endLine":55,"endColumn":16},{"ruleId":"643","severity":1,"message":"644","line":68,"column":38,"nodeType":"645","messageId":"646","endLine":68,"endColumn":40},{"ruleId":"633","severity":1,"message":"673","line":6,"column":8,"nodeType":"635","messageId":"636","endLine":6,"endColumn":26},{"ruleId":"633","severity":1,"message":"674","line":98,"column":12,"nodeType":"635","messageId":"636","endLine":98,"endColumn":25},{"ruleId":"633","severity":1,"message":"675","line":98,"column":27,"nodeType":"635","messageId":"636","endLine":98,"endColumn":43},{"ruleId":"633","severity":1,"message":"676","line":100,"column":9,"nodeType":"635","messageId":"636","endLine":100,"endColumn":18},{"ruleId":"643","severity":1,"message":"677","line":668,"column":21,"nodeType":"645","messageId":"646","endLine":668,"endColumn":23},{"ruleId":"633","severity":1,"message":"678","line":743,"column":10,"nodeType":"635","messageId":"636","endLine":743,"endColumn":37},{"ruleId":"633","severity":1,"message":"679","line":753,"column":10,"nodeType":"635","messageId":"636","endLine":753,"endColumn":37},{"ruleId":"633","severity":1,"message":"670","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":25},{"ruleId":"633","severity":1,"message":"671","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":11},{"ruleId":"633","severity":1,"message":"680","line":3,"column":8,"nodeType":"635","messageId":"636","endLine":3,"endColumn":28},{"ruleId":"633","severity":1,"message":"655","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":13},{"ruleId":"633","severity":1,"message":"681","line":6,"column":8,"nodeType":"635","messageId":"636","endLine":6,"endColumn":27},{"ruleId":"633","severity":1,"message":"673","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":26},{"ruleId":"633","severity":1,"message":"682","line":12,"column":9,"nodeType":"635","messageId":"636","endLine":12,"endColumn":13},{"ruleId":"633","severity":1,"message":"683","line":14,"column":12,"nodeType":"635","messageId":"636","endLine":14,"endColumn":21},{"ruleId":"633","severity":1,"message":"684","line":14,"column":23,"nodeType":"635","messageId":"636","endLine":14,"endColumn":35},{"ruleId":"643","severity":1,"message":"644","line":15,"column":46,"nodeType":"645","messageId":"646","endLine":15,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":22,"column":46,"nodeType":"645","messageId":"646","endLine":22,"endColumn":48},{"ruleId":"633","severity":1,"message":"670","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":25},{"ruleId":"633","severity":1,"message":"669","line":1,"column":27,"nodeType":"635","messageId":"636","endLine":1,"endColumn":35},{"ruleId":"633","severity":1,"message":"671","line":2,"column":8,"nodeType":"635","messageId":"636","endLine":2,"endColumn":11},{"ruleId":"633","severity":1,"message":"681","line":4,"column":8,"nodeType":"635","messageId":"636","endLine":4,"endColumn":27},{"ruleId":"633","severity":1,"message":"673","line":5,"column":8,"nodeType":"635","messageId":"636","endLine":5,"endColumn":26},{"ruleId":"633","severity":1,"message":"685","line":6,"column":9,"nodeType":"635","messageId":"636","endLine":6,"endColumn":21},{"ruleId":"633","severity":1,"message":"686","line":6,"column":35,"nodeType":"635","messageId":"636","endLine":6,"endColumn":48},{"ruleId":"633","severity":1,"message":"687","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":34},{"ruleId":"643","severity":1,"message":"644","line":13,"column":46,"nodeType":"645","messageId":"646","endLine":13,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":20,"column":46,"nodeType":"645","messageId":"646","endLine":20,"endColumn":48},{"ruleId":"633","severity":1,"message":"688","line":18,"column":17,"nodeType":"635","messageId":"636","endLine":18,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":72,"column":54,"nodeType":"645","messageId":"646","endLine":72,"endColumn":56},{"ruleId":"643","severity":1,"message":"644","line":85,"column":54,"nodeType":"645","messageId":"646","endLine":85,"endColumn":56},{"ruleId":"643","severity":1,"message":"644","line":98,"column":54,"nodeType":"645","messageId":"646","endLine":98,"endColumn":56},{"ruleId":"633","severity":1,"message":"671","line":8,"column":8,"nodeType":"635","messageId":"636","endLine":8,"endColumn":11},{"ruleId":"656","severity":1,"message":"657","line":53,"column":25,"nodeType":"658","endLine":63,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":75,"column":34,"nodeType":"658","endLine":75,"endColumn":79},{"ruleId":"633","severity":1,"message":"671","line":5,"column":8,"nodeType":"635","messageId":"636","endLine":5,"endColumn":11},{"ruleId":"633","severity":1,"message":"689","line":21,"column":17,"nodeType":"635","messageId":"636","endLine":21,"endColumn":22},{"ruleId":"633","severity":1,"message":"690","line":11,"column":12,"nodeType":"635","messageId":"636","endLine":11,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":173,"column":29,"nodeType":"658","endLine":183,"endColumn":31},{"ruleId":"633","severity":1,"message":"691","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":13},{"ruleId":"633","severity":1,"message":"692","line":3,"column":27,"nodeType":"635","messageId":"636","endLine":3,"endColumn":34},{"ruleId":"647","severity":1,"message":"693","line":52,"column":8,"nodeType":"649","endLine":52,"endColumn":10,"suggestions":"694"},{"ruleId":"656","severity":1,"message":"657","line":15,"column":13,"nodeType":"658","endLine":26,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":27,"column":13,"nodeType":"658","endLine":35,"endColumn":15},{"ruleId":"633","severity":1,"message":"669","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":24},{"ruleId":"633","severity":1,"message":"695","line":13,"column":9,"nodeType":"635","messageId":"636","endLine":13,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":26,"column":25,"nodeType":"658","endLine":33,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":43,"column":25,"nodeType":"658","endLine":53,"endColumn":27},{"ruleId":"696","severity":1,"message":"697","line":56,"column":21,"nodeType":"658","endLine":62,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":10,"column":17,"nodeType":"658","endLine":20,"endColumn":19},{"ruleId":"696","severity":1,"message":"697","line":22,"column":17,"nodeType":"658","endLine":31,"endColumn":19},{"ruleId":"633","severity":1,"message":"670","line":1,"column":26,"nodeType":"635","messageId":"636","endLine":1,"endColumn":35},{"ruleId":"633","severity":1,"message":"674","line":13,"column":12,"nodeType":"635","messageId":"636","endLine":13,"endColumn":25},{"ruleId":"656","severity":1,"message":"657","line":42,"column":25,"nodeType":"658","endLine":50,"endColumn":27},{"ruleId":"696","severity":1,"message":"697","line":66,"column":21,"nodeType":"658","endLine":72,"endColumn":23},{"ruleId":"633","severity":1,"message":"670","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":25},{"ruleId":"633","severity":1,"message":"669","line":1,"column":27,"nodeType":"635","messageId":"636","endLine":1,"endColumn":35},{"ruleId":"633","severity":1,"message":"698","line":2,"column":21,"nodeType":"635","messageId":"636","endLine":2,"endColumn":31},{"ruleId":"633","severity":1,"message":"699","line":2,"column":33,"nodeType":"635","messageId":"636","endLine":2,"endColumn":39},{"ruleId":"633","severity":1,"message":"700","line":2,"column":41,"nodeType":"635","messageId":"636","endLine":2,"endColumn":48},{"ruleId":"633","severity":1,"message":"663","line":4,"column":8,"nodeType":"635","messageId":"636","endLine":4,"endColumn":11},{"ruleId":"656","severity":1,"message":"657","line":19,"column":25,"nodeType":"658","endLine":24,"endColumn":27},{"ruleId":"633","severity":1,"message":"655","line":1,"column":9,"nodeType":"635","messageId":"636","endLine":1,"endColumn":13},{"ruleId":"656","severity":1,"message":"657","line":24,"column":25,"nodeType":"658","endLine":31,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":41,"column":25,"nodeType":"658","endLine":51,"endColumn":27},{"ruleId":"696","severity":1,"message":"697","line":54,"column":21,"nodeType":"658","endLine":60,"endColumn":23},{"ruleId":"633","severity":1,"message":"701","line":13,"column":12,"nodeType":"635","messageId":"636","endLine":13,"endColumn":32},{"ruleId":"639","severity":1,"message":"640","line":27,"column":49,"nodeType":"641","messageId":"642","endLine":27,"endColumn":51},{"ruleId":"639","severity":1,"message":"640","line":29,"column":53,"nodeType":"641","messageId":"642","endLine":29,"endColumn":55},{"ruleId":"647","severity":1,"message":"702","line":58,"column":8,"nodeType":"649","endLine":58,"endColumn":10,"suggestions":"703"},{"ruleId":"633","severity":1,"message":"704","line":60,"column":12,"nodeType":"635","messageId":"636","endLine":60,"endColumn":31},{"ruleId":"639","severity":1,"message":"640","line":73,"column":45,"nodeType":"641","messageId":"642","endLine":73,"endColumn":47},{"ruleId":"639","severity":1,"message":"640","line":84,"column":69,"nodeType":"641","messageId":"642","endLine":84,"endColumn":71},{"ruleId":"639","severity":1,"message":"640","line":85,"column":69,"nodeType":"641","messageId":"642","endLine":85,"endColumn":71},{"ruleId":"647","severity":1,"message":"702","line":116,"column":8,"nodeType":"649","endLine":116,"endColumn":10,"suggestions":"705"},{"ruleId":"643","severity":1,"message":"644","line":269,"column":38,"nodeType":"645","messageId":"646","endLine":269,"endColumn":40},{"ruleId":"633","severity":1,"message":"706","line":47,"column":12,"nodeType":"635","messageId":"636","endLine":47,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":88,"column":17,"nodeType":"658","endLine":97,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":107,"column":17,"nodeType":"658","endLine":116,"endColumn":19},{"ruleId":"633","severity":1,"message":"663","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":26,"column":33,"nodeType":"645","messageId":"646","endLine":26,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":48,"column":33,"nodeType":"658","endLine":57,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":66,"column":33,"nodeType":"658","endLine":70,"endColumn":35},{"ruleId":"656","severity":1,"message":"657","line":71,"column":33,"nodeType":"658","endLine":75,"endColumn":35},{"ruleId":"633","severity":1,"message":"663","line":7,"column":8,"nodeType":"635","messageId":"636","endLine":7,"endColumn":11},{"ruleId":"643","severity":1,"message":"644","line":99,"column":33,"nodeType":"645","messageId":"646","endLine":99,"endColumn":35},{"ruleId":"643","severity":1,"message":"644","line":134,"column":26,"nodeType":"645","messageId":"646","endLine":134,"endColumn":28},{"ruleId":"656","severity":1,"message":"657","line":155,"column":29,"nodeType":"658","endLine":164,"endColumn":31},{"ruleId":"656","severity":1,"message":"657","line":173,"column":29,"nodeType":"658","endLine":177,"endColumn":31},{"ruleId":"656","severity":1,"message":"657","line":178,"column":29,"nodeType":"658","endLine":182,"endColumn":31},{"ruleId":"656","severity":1,"message":"657","line":297,"column":61,"nodeType":"658","endLine":306,"endColumn":63},{"ruleId":"643","severity":1,"message":"677","line":439,"column":24,"nodeType":"645","messageId":"646","endLine":439,"endColumn":26},{"ruleId":"633","severity":1,"message":"669","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":24},{"ruleId":"643","severity":1,"message":"644","line":9,"column":46,"nodeType":"645","messageId":"646","endLine":9,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":13,"column":46,"nodeType":"645","messageId":"646","endLine":13,"endColumn":48},{"ruleId":"633","severity":1,"message":"707","line":23,"column":15,"nodeType":"635","messageId":"636","endLine":23,"endColumn":17},{"ruleId":"633","severity":1,"message":"674","line":103,"column":12,"nodeType":"635","messageId":"636","endLine":103,"endColumn":25},{"ruleId":"633","severity":1,"message":"675","line":103,"column":27,"nodeType":"635","messageId":"636","endLine":103,"endColumn":43},{"ruleId":"633","severity":1,"message":"676","line":105,"column":9,"nodeType":"635","messageId":"636","endLine":105,"endColumn":18},{"ruleId":"643","severity":1,"message":"677","line":679,"column":21,"nodeType":"645","messageId":"646","endLine":679,"endColumn":23},{"ruleId":"633","severity":1,"message":"678","line":768,"column":10,"nodeType":"635","messageId":"636","endLine":768,"endColumn":37},{"ruleId":"633","severity":1,"message":"679","line":780,"column":10,"nodeType":"635","messageId":"636","endLine":780,"endColumn":37},{"ruleId":"633","severity":1,"message":"708","line":23,"column":20,"nodeType":"635","messageId":"636","endLine":23,"endColumn":31},{"ruleId":"633","severity":1,"message":"708","line":23,"column":20,"nodeType":"635","messageId":"636","endLine":23,"endColumn":31},{"ruleId":"656","severity":1,"message":"657","line":19,"column":17,"nodeType":"658","endLine":28,"endColumn":19},{"ruleId":"633","severity":1,"message":"655","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":13},{"ruleId":"633","severity":1,"message":"655","line":5,"column":9,"nodeType":"635","messageId":"636","endLine":5,"endColumn":13},{"ruleId":"633","severity":1,"message":"709","line":25,"column":21,"nodeType":"635","messageId":"636","endLine":25,"endColumn":33},{"ruleId":"643","severity":1,"message":"677","line":27,"column":21,"nodeType":"645","messageId":"646","endLine":27,"endColumn":23},{"ruleId":"633","severity":1,"message":"653","line":2,"column":9,"nodeType":"635","messageId":"636","endLine":2,"endColumn":19},{"ruleId":"643","severity":1,"message":"644","line":50,"column":23,"nodeType":"645","messageId":"646","endLine":50,"endColumn":25},{"ruleId":"643","severity":1,"message":"644","line":85,"column":23,"nodeType":"645","messageId":"646","endLine":85,"endColumn":25},{"ruleId":"643","severity":1,"message":"644","line":113,"column":18,"nodeType":"645","messageId":"646","endLine":113,"endColumn":20},{"ruleId":"633","severity":1,"message":"655","line":1,"column":9,"nodeType":"635","messageId":"636","endLine":1,"endColumn":13},{"ruleId":"633","severity":1,"message":"710","line":3,"column":8,"nodeType":"635","messageId":"636","endLine":3,"endColumn":13},{"ruleId":"633","severity":1,"message":"670","line":2,"column":16,"nodeType":"635","messageId":"636","endLine":2,"endColumn":25},{"ruleId":"633","severity":1,"message":"669","line":2,"column":27,"nodeType":"635","messageId":"636","endLine":2,"endColumn":35},{"ruleId":"633","severity":1,"message":"672","line":4,"column":8,"nodeType":"635","messageId":"636","endLine":4,"endColumn":14},{"ruleId":"633","severity":1,"message":"671","line":5,"column":8,"nodeType":"635","messageId":"636","endLine":5,"endColumn":11},{"ruleId":"656","severity":1,"message":"657","line":15,"column":17,"nodeType":"658","endLine":24,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":30,"column":17,"nodeType":"658","endLine":39,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":23,"column":21,"nodeType":"658","endLine":27,"endColumn":22},{"ruleId":"639","severity":1,"message":"640","line":55,"column":45,"nodeType":"641","messageId":"642","endLine":55,"endColumn":47},{"ruleId":"633","severity":1,"message":"670","line":5,"column":19,"nodeType":"635","messageId":"636","endLine":5,"endColumn":28},{"ruleId":"633","severity":1,"message":"709","line":36,"column":21,"nodeType":"635","messageId":"636","endLine":36,"endColumn":33},{"ruleId":"643","severity":1,"message":"677","line":38,"column":21,"nodeType":"645","messageId":"646","endLine":38,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":61,"column":25,"nodeType":"658","endLine":65,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":68,"column":21,"nodeType":"658","endLine":95,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":117,"column":21,"nodeType":"658","endLine":122,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":130,"column":18,"nodeType":"645","messageId":"646","endLine":130,"endColumn":20},{"ruleId":"656","severity":1,"message":"657","line":132,"column":13,"nodeType":"658","endLine":137,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":141,"column":13,"nodeType":"658","endLine":146,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":19,"column":17,"nodeType":"658","endLine":28,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":9,"column":21,"nodeType":"658","endLine":21,"endColumn":23},{"ruleId":"633","severity":1,"message":"711","line":22,"column":10,"nodeType":"635","messageId":"636","endLine":22,"endColumn":28},{"ruleId":"633","severity":1,"message":"682","line":42,"column":9,"nodeType":"635","messageId":"636","endLine":42,"endColumn":13},{"ruleId":"633","severity":1,"message":"674","line":107,"column":12,"nodeType":"635","messageId":"636","endLine":107,"endColumn":25},{"ruleId":"643","severity":1,"message":"677","line":711,"column":21,"nodeType":"645","messageId":"646","endLine":711,"endColumn":23},{"ruleId":"633","severity":1,"message":"678","line":800,"column":10,"nodeType":"635","messageId":"636","endLine":800,"endColumn":37},{"ruleId":"633","severity":1,"message":"679","line":812,"column":10,"nodeType":"635","messageId":"636","endLine":812,"endColumn":37},{"ruleId":"633","severity":1,"message":"672","line":1,"column":8,"nodeType":"635","messageId":"636","endLine":1,"endColumn":14},{"ruleId":"639","severity":1,"message":"640","line":49,"column":45,"nodeType":"641","messageId":"642","endLine":49,"endColumn":47},{"ruleId":"633","severity":1,"message":"654","line":2,"column":21,"nodeType":"635","messageId":"636","endLine":2,"endColumn":29},{"ruleId":"643","severity":1,"message":"677","line":15,"column":20,"nodeType":"645","messageId":"646","endLine":15,"endColumn":22},{"ruleId":"633","severity":1,"message":"712","line":16,"column":9,"nodeType":"635","messageId":"636","endLine":16,"endColumn":16},{"ruleId":"633","severity":1,"message":"654","line":2,"column":21,"nodeType":"635","messageId":"636","endLine":2,"endColumn":29},{"ruleId":"643","severity":1,"message":"677","line":16,"column":20,"nodeType":"645","messageId":"646","endLine":16,"endColumn":22},{"ruleId":"656","severity":1,"message":"657","line":59,"column":29,"nodeType":"658","endLine":59,"endColumn":74},{"ruleId":"643","severity":1,"message":"644","line":49,"column":38,"nodeType":"645","messageId":"646","endLine":49,"endColumn":40},{"ruleId":"643","severity":1,"message":"644","line":4,"column":42,"nodeType":"645","messageId":"646","endLine":4,"endColumn":44},{"ruleId":"643","severity":1,"message":"677","line":42,"column":42,"nodeType":"645","messageId":"646","endLine":42,"endColumn":44},{"ruleId":"656","severity":1,"message":"657","line":19,"column":17,"nodeType":"658","endLine":28,"endColumn":19},{"ruleId":"633","severity":1,"message":"709","line":26,"column":21,"nodeType":"635","messageId":"636","endLine":26,"endColumn":33},{"ruleId":"643","severity":1,"message":"677","line":28,"column":21,"nodeType":"645","messageId":"646","endLine":28,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":44,"column":25,"nodeType":"658","endLine":49,"endColumn":27},{"ruleId":"633","severity":1,"message":"709","line":28,"column":21,"nodeType":"635","messageId":"636","endLine":28,"endColumn":33},{"ruleId":"643","severity":1,"message":"677","line":30,"column":21,"nodeType":"645","messageId":"646","endLine":30,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":69,"column":18,"nodeType":"645","messageId":"646","endLine":69,"endColumn":20},{"ruleId":"656","severity":1,"message":"657","line":71,"column":13,"nodeType":"658","endLine":76,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":80,"column":13,"nodeType":"658","endLine":85,"endColumn":15},{"ruleId":"633","severity":1,"message":"670","line":5,"column":19,"nodeType":"635","messageId":"636","endLine":5,"endColumn":28},{"ruleId":"633","severity":1,"message":"709","line":35,"column":21,"nodeType":"635","messageId":"636","endLine":35,"endColumn":33},{"ruleId":"643","severity":1,"message":"677","line":37,"column":21,"nodeType":"645","messageId":"646","endLine":37,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":65,"column":25,"nodeType":"658","endLine":69,"endColumn":27},{"ruleId":"656","severity":1,"message":"657","line":72,"column":21,"nodeType":"658","endLine":99,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":117,"column":21,"nodeType":"658","endLine":124,"endColumn":23},{"ruleId":"643","severity":1,"message":"644","line":132,"column":18,"nodeType":"645","messageId":"646","endLine":132,"endColumn":20},{"ruleId":"656","severity":1,"message":"657","line":134,"column":13,"nodeType":"658","endLine":139,"endColumn":15},{"ruleId":"656","severity":1,"message":"657","line":143,"column":13,"nodeType":"658","endLine":148,"endColumn":15},{"ruleId":"639","severity":1,"message":"640","line":253,"column":68,"nodeType":"641","messageId":"642","endLine":253,"endColumn":70},{"ruleId":"633","severity":1,"message":"672","line":4,"column":8,"nodeType":"635","messageId":"636","endLine":4,"endColumn":14},{"ruleId":"656","severity":1,"message":"657","line":43,"column":17,"nodeType":"658","endLine":52,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":58,"column":17,"nodeType":"658","endLine":67,"endColumn":19},{"ruleId":"643","severity":1,"message":"644","line":50,"column":23,"nodeType":"645","messageId":"646","endLine":50,"endColumn":25},{"ruleId":"643","severity":1,"message":"644","line":85,"column":23,"nodeType":"645","messageId":"646","endLine":85,"endColumn":25},{"ruleId":"643","severity":1,"message":"644","line":113,"column":18,"nodeType":"645","messageId":"646","endLine":113,"endColumn":20},{"ruleId":"633","severity":1,"message":"713","line":3,"column":9,"nodeType":"635","messageId":"636","endLine":3,"endColumn":15},{"ruleId":"633","severity":1,"message":"714","line":18,"column":11,"nodeType":"635","messageId":"636","endLine":18,"endColumn":23},{"ruleId":"647","severity":1,"message":"715","line":100,"column":8,"nodeType":"649","endLine":100,"endColumn":10,"suggestions":"716"},{"ruleId":"639","severity":1,"message":"640","line":46,"column":68,"nodeType":"641","messageId":"642","endLine":46,"endColumn":70},{"ruleId":"656","severity":1,"message":"657","line":9,"column":21,"nodeType":"658","endLine":21,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":17,"column":17,"nodeType":"658","endLine":26,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":32,"column":17,"nodeType":"658","endLine":41,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":9,"column":21,"nodeType":"658","endLine":21,"endColumn":23},{"ruleId":"656","severity":1,"message":"657","line":23,"column":21,"nodeType":"658","endLine":27,"endColumn":22},{"ruleId":"633","severity":1,"message":"669","line":1,"column":16,"nodeType":"635","messageId":"636","endLine":1,"endColumn":24},{"ruleId":"643","severity":1,"message":"644","line":8,"column":46,"nodeType":"645","messageId":"646","endLine":8,"endColumn":48},{"ruleId":"643","severity":1,"message":"644","line":12,"column":46,"nodeType":"645","messageId":"646","endLine":12,"endColumn":48},{"ruleId":"633","severity":1,"message":"671","line":1,"column":8,"nodeType":"635","messageId":"636","endLine":1,"endColumn":11},{"ruleId":"633","severity":1,"message":"717","line":6,"column":8,"nodeType":"635","messageId":"636","endLine":6,"endColumn":17},{"ruleId":"718","severity":1,"message":"719","line":111,"column":9,"nodeType":"658","endLine":115,"endColumn":11},"no-native-reassign",["720"],"no-negated-in-lhs",["721"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'MobileRegistration' is defined but never used.","'Route' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'currentUser.email' and 'currentUser.emailVerified'. Either include them or remove the dependency array.","ArrayExpression",["722"],"'useCallback' is defined but never used.","'useContext' is defined but never used.","'withRouter' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'res' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginLeft'.","ObjectExpression","'Kid' is defined but never used.","'Logo' is defined but never used.","'GoPrimitiveDot' is defined but never used.","'signOut' is defined but never used.","'user' is assigned a value but never used.","'setInputSearch' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'app' is defined but never used.","'Delete' is defined but never used.","'HeaderHomeTemplate' is defined but never used.","'fileGenerated' is assigned a value but never used.","'setFileGenerated' is assigned a value but never used.","'userEmail' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setCorrectionProcedureStep3' is defined but never used.","'setCorrectionProcedureStep2' is defined but never used.","'ProtocolItemTemplate' is defined but never used.","'ArrowHeaderTemplate' is defined but never used.","'test' is assigned a value but never used.","'protocols' is assigned a value but never used.","'setProtocols' is assigned a value but never used.","'DefaultTheme' is defined but never used.","'PaperProvider' is defined but never used.","'ProgramTemplateViewPrivate' is defined but never used.","'setSex' is assigned a value but never used.","'phone' is assigned a value but never used.","'preview' is assigned a value but never used.","'List' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'patientResultRef'. Either include it or remove the dependency array.",["723"],"'someText' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'ButtonItem' is defined but never used.","'Amount' is defined but never used.","'Patient' is defined but never used.","'protocolsToTerapists' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTest'. Either include it or remove the dependency array.",["724"],"'stimulusToTerapists' is assigned a value but never used.",["725"],"'child' is assigned a value but never used.","'db' is assigned a value but never used.","'setStimulus' is assigned a value but never used.","'setColorItem' is assigned a value but never used.","'Arrow' is defined but never used.","'RemoveCopiedStatus' is defined but never used.","'btnText' is assigned a value but never used.","'Button' is defined but never used.","'handleUpload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filesList'. Either include it or remove the dependency array.",["726"],"'close_img' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"731","fix":"733"},{"desc":"734","fix":"735"},"Update the dependencies array to be: [currentUser.email, currentUser.emailVerified, history]",{"range":"736","text":"737"},"Update the dependencies array to be: [patientResultRef]",{"range":"738","text":"739"},"Update the dependencies array to be: [listTest]",{"range":"740","text":"741"},{"range":"742","text":"741"},"Update the dependencies array to be: [filesList]",{"range":"743","text":"744"},[3414,3423],"[currentUser.email, currentUser.emailVerified, history]",[1652,1654],"[patientResultRef]",[2479,2481],"[listTest]",[5211,5213],[3705,3707],"[filesList]"]